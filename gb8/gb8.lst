;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 12/3/2024 9:48:27 PM
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0xF002EFE1  	GOTO        1474
0x0004	0x0000      	NOP
0x0006	0x0000      	NOP
0x0008	0xF000EF00  	GOTO        0
0x000C	0x0000      	NOP
0x000E	0x0000      	NOP
0x0010	0x0000      	NOP
0x0012	0x0000      	NOP
0x0014	0x0000      	NOP
0x0016	0x0000      	NOP
0x0018	0xD7F3      	BRA         0
_Delay_5500us:
;__Lib_Delays.c,31 :: 		void Delay_5500us() {
;__Lib_Delays.c,32 :: 		Delay_us(5500);
0x001C	0x0E24      	MOVLW       36
0x001E	0x6E0C      	MOVWF       R12, 0
0x0020	0x0EB5      	MOVLW       181
0x0022	0x6E0D      	MOVWF       R13, 0
L_Delay_5500us5:
0x0024	0x2E0D      	DECFSZ      R13, 1, 0
0x0026	0xD7FE      	BRA         L_Delay_5500us5
0x0028	0x2E0C      	DECFSZ      R12, 1, 0
0x002A	0xD7FC      	BRA         L_Delay_5500us5
0x002C	0x0000      	NOP
0x002E	0x0000      	NOP
;__Lib_Delays.c,33 :: 		}
L_end_Delay_5500us:
0x0030	0x0012      	RETURN      0
; end of _Delay_5500us
_Delay_1us:
;__Lib_Delays.c,7 :: 		void Delay_1us() {
;__Lib_Delays.c,8 :: 		Delay_us(1);
0x0032	0x0000      	NOP
0x0034	0x0000      	NOP
0x0036	0x0000      	NOP
0x0038	0x0000      	NOP
0x003A	0x0000      	NOP
;__Lib_Delays.c,9 :: 		}
L_end_Delay_1us:
0x003C	0x0012      	RETURN      0
; end of _Delay_1us
_Delay_50us:
;__Lib_Delays.c,19 :: 		void Delay_50us() {
;__Lib_Delays.c,20 :: 		Delay_us(50);
0x003E	0x0E53      	MOVLW       83
0x0040	0x6E0D      	MOVWF       R13, 0
L_Delay_50us2:
0x0042	0x2E0D      	DECFSZ      R13, 1, 0
0x0044	0xD7FE      	BRA         L_Delay_50us2
;__Lib_Delays.c,21 :: 		}
L_end_Delay_50us:
0x0046	0x0012      	RETURN      0
; end of _Delay_50us
_Lcd_Cmd:
;__Lib_Lcd.c,18 :: 		
;__Lib_Lcd.c,20 :: 		
0x0048	0xBE68      	BTFSC       FARG_Lcd_Cmd_out_char, 7 
0x004A	0xD002      	BRA         L__Lcd_Cmd21
0x004C	0x9E83      	BCF         LCD_D7, BitPos(LCD_D7+0) 
0x004E	0xD001      	BRA         L__Lcd_Cmd22
L__Lcd_Cmd21:
0x0050	0x8E83      	BSF         LCD_D7, BitPos(LCD_D7+0) 
L__Lcd_Cmd22:
;__Lib_Lcd.c,21 :: 		
0x0052	0xBC68      	BTFSC       FARG_Lcd_Cmd_out_char, 6 
0x0054	0xD002      	BRA         L__Lcd_Cmd23
0x0056	0x9C83      	BCF         LCD_D6, BitPos(LCD_D6+0) 
0x0058	0xD001      	BRA         L__Lcd_Cmd24
L__Lcd_Cmd23:
0x005A	0x8C83      	BSF         LCD_D6, BitPos(LCD_D6+0) 
L__Lcd_Cmd24:
;__Lib_Lcd.c,22 :: 		
0x005C	0xBA68      	BTFSC       FARG_Lcd_Cmd_out_char, 5 
0x005E	0xD002      	BRA         L__Lcd_Cmd25
0x0060	0x9A83      	BCF         LCD_D5, BitPos(LCD_D5+0) 
0x0062	0xD001      	BRA         L__Lcd_Cmd26
L__Lcd_Cmd25:
0x0064	0x8A83      	BSF         LCD_D5, BitPos(LCD_D5+0) 
L__Lcd_Cmd26:
;__Lib_Lcd.c,23 :: 		
0x0066	0xB868      	BTFSC       FARG_Lcd_Cmd_out_char, 4 
0x0068	0xD002      	BRA         L__Lcd_Cmd27
0x006A	0x9883      	BCF         LCD_D4, BitPos(LCD_D4+0) 
0x006C	0xD001      	BRA         L__Lcd_Cmd28
L__Lcd_Cmd27:
0x006E	0x8883      	BSF         LCD_D4, BitPos(LCD_D4+0) 
L__Lcd_Cmd28:
;__Lib_Lcd.c,25 :: 		
0x0070	0xB854      	BTFSC       __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0) 
0x0072	0xD002      	BRA         L__Lcd_Cmd29
0x0074	0x8084      	BSF         LCD_RS, BitPos(LCD_RS+0) 
0x0076	0xD001      	BRA         L__Lcd_Cmd30
L__Lcd_Cmd29:
0x0078	0x9084      	BCF         LCD_RS, BitPos(LCD_RS+0) 
L__Lcd_Cmd30:
;__Lib_Lcd.c,28 :: 		
0x007A	0x8284      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,29 :: 		
0x007C	0xDFDA      	RCALL       _Delay_1us
;__Lib_Lcd.c,30 :: 		
0x007E	0x9284      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,33 :: 		
0x0080	0xB668      	BTFSC       FARG_Lcd_Cmd_out_char, 3 
0x0082	0xD002      	BRA         L__Lcd_Cmd31
0x0084	0x9E83      	BCF         LCD_D7, BitPos(LCD_D7+0) 
0x0086	0xD001      	BRA         L__Lcd_Cmd32
L__Lcd_Cmd31:
0x0088	0x8E83      	BSF         LCD_D7, BitPos(LCD_D7+0) 
L__Lcd_Cmd32:
;__Lib_Lcd.c,34 :: 		
0x008A	0xB468      	BTFSC       FARG_Lcd_Cmd_out_char, 2 
0x008C	0xD002      	BRA         L__Lcd_Cmd33
0x008E	0x9C83      	BCF         LCD_D6, BitPos(LCD_D6+0) 
0x0090	0xD001      	BRA         L__Lcd_Cmd34
L__Lcd_Cmd33:
0x0092	0x8C83      	BSF         LCD_D6, BitPos(LCD_D6+0) 
L__Lcd_Cmd34:
;__Lib_Lcd.c,35 :: 		
0x0094	0xB268      	BTFSC       FARG_Lcd_Cmd_out_char, 1 
0x0096	0xD002      	BRA         L__Lcd_Cmd35
0x0098	0x9A83      	BCF         LCD_D5, BitPos(LCD_D5+0) 
0x009A	0xD001      	BRA         L__Lcd_Cmd36
L__Lcd_Cmd35:
0x009C	0x8A83      	BSF         LCD_D5, BitPos(LCD_D5+0) 
L__Lcd_Cmd36:
;__Lib_Lcd.c,36 :: 		
0x009E	0xB068      	BTFSC       FARG_Lcd_Cmd_out_char, 0 
0x00A0	0xD002      	BRA         L__Lcd_Cmd37
0x00A2	0x9883      	BCF         LCD_D4, BitPos(LCD_D4+0) 
0x00A4	0xD001      	BRA         L__Lcd_Cmd38
L__Lcd_Cmd37:
0x00A6	0x8883      	BSF         LCD_D4, BitPos(LCD_D4+0) 
L__Lcd_Cmd38:
;__Lib_Lcd.c,38 :: 		
0x00A8	0xB854      	BTFSC       __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0) 
0x00AA	0xD002      	BRA         L__Lcd_Cmd39
0x00AC	0x8084      	BSF         LCD_RS, BitPos(LCD_RS+0) 
0x00AE	0xD001      	BRA         L__Lcd_Cmd40
L__Lcd_Cmd39:
0x00B0	0x9084      	BCF         LCD_RS, BitPos(LCD_RS+0) 
L__Lcd_Cmd40:
;__Lib_Lcd.c,40 :: 		
0x00B2	0x8284      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,41 :: 		
0x00B4	0xDFBE      	RCALL       _Delay_1us
;__Lib_Lcd.c,42 :: 		
0x00B6	0x9284      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,44 :: 		
0x00B8	0xA854      	BTFSS       __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0) 
0x00BA	0xD002      	BRA         L_Lcd_Cmd0
;__Lib_Lcd.c,45 :: 		
0x00BC	0xDFAF      	RCALL       _Delay_5500us
0x00BE	0xD001      	BRA         L_Lcd_Cmd1
L_Lcd_Cmd0:
;__Lib_Lcd.c,47 :: 		
0x00C0	0xDFBE      	RCALL       _Delay_50us
L_Lcd_Cmd1:
;__Lib_Lcd.c,48 :: 		
L_end_Lcd_Cmd:
0x00C2	0x0012      	RETURN      0
; end of _Lcd_Cmd
_Div_16X16_U:
;__Lib_Math.c,102 :: 		
;__Lib_Math.c,109 :: 		
0x00C4	0x6A08      	CLRF        R8, 0
;__Lib_Math.c,110 :: 		
0x00C6	0x6A09      	CLRF        R9, 0
;__Lib_Math.c,111 :: 		
0x00C8	0x0E10      	MOVLW       16
;__Lib_Math.c,112 :: 		
0x00CA	0x6E0C      	MOVWF       R12, 0
;__Lib_Math.c,113 :: 		
0x00CC	0x3401      	RLCF        R1, 0, 0
;__Lib_Math.c,114 :: 		
0x00CE	0x3608      	RLCF        R8, 1, 0
;__Lib_Math.c,115 :: 		
0x00D0	0x3609      	RLCF        R9, 1, 0
;__Lib_Math.c,116 :: 		
0x00D2	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,117 :: 		
0x00D4	0x5E08      	SUBWF       R8, 1, 0
;__Lib_Math.c,118 :: 		
0x00D6	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,119 :: 		
0x00D8	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,120 :: 		
0x00DA	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,121 :: 		
0x00DC	0x5E09      	SUBWF       R9, 1, 0
;__Lib_Math.c,122 :: 		
0x00DE	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,123 :: 		
0x00E0	0xD007      	BRA         $+16
;__Lib_Math.c,124 :: 		
0x00E2	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,125 :: 		
0x00E4	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,126 :: 		
0x00E6	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,127 :: 		
0x00E8	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,128 :: 		
0x00EA	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,129 :: 		
0x00EC	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,130 :: 		
0x00EE	0x90D8      	BCF         STATUS, 0, 0
;__Lib_Math.c,131 :: 		
0x00F0	0x3600      	RLCF        R0, 1, 0
;__Lib_Math.c,132 :: 		
0x00F2	0x3601      	RLCF        R1, 1, 0
;__Lib_Math.c,133 :: 		
0x00F4	0x2E0C      	DECFSZ      R12, 1, 0
;__Lib_Math.c,134 :: 		
0x00F6	0xD7EA      	BRA         $-42
;__Lib_Math.c,136 :: 		
L_end_Div_16X16_U:
0x00F8	0x0012      	RETURN      0
; end of _Div_16X16_U
_Lcd_Chr_CP:
;__Lib_Lcd.c,50 :: 		
;__Lib_Lcd.c,52 :: 		
0x00FA	0x9854      	BCF         __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0) 
;__Lib_Lcd.c,53 :: 		
0x00FC	0xF068C067  	MOVFF       FARG_Lcd_Chr_CP_out_char, FARG_Lcd_Cmd_out_char
0x0100	0xDFA3      	RCALL       _Lcd_Cmd
;__Lib_Lcd.c,54 :: 		
0x0102	0x8854      	BSF         __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0) 
;__Lib_Lcd.c,55 :: 		
L_end_Lcd_Chr_CP:
0x0104	0x0012      	RETURN      0
; end of _Lcd_Chr_CP
_Delay_22us:
;__Lib_Delays.c,15 :: 		void Delay_22us() {
;__Lib_Delays.c,16 :: 		Delay_us(22);
0x0106	0x0E24      	MOVLW       36
0x0108	0x6E0D      	MOVWF       R13, 0
L_Delay_22us1:
0x010A	0x2E0D      	DECFSZ      R13, 1, 0
0x010C	0xD7FE      	BRA         L_Delay_22us1
0x010E	0x0000      	NOP
;__Lib_Delays.c,17 :: 		}
L_end_Delay_22us:
0x0110	0x0012      	RETURN      0
; end of _Delay_22us
_Mul_16X16_U:
;__Lib_Math.c,440 :: 		
;__Lib_Math.c,447 :: 		
0x0112	0x6A0B      	CLRF        R11, 0
;__Lib_Math.c,448 :: 		
0x0114	0x6A0A      	CLRF        R10, 0
;__Lib_Math.c,449 :: 		
0x0116	0x6A09      	CLRF        R9, 0
;__Lib_Math.c,450 :: 		
0x0118	0x5000      	MOVF        R0, 0, 0
;__Lib_Math.c,451 :: 		
0x011A	0x0204      	MULWF       R4, 0
;__Lib_Math.c,453 :: 		
0x011C	0xF009CFF4  	MOVFF       PRODH, R9
;__Lib_Math.c,454 :: 		
0x0120	0xF008CFF3  	MOVFF       PRODL, R8
;__Lib_Math.c,455 :: 		
0x0124	0x5001      	MOVF        R1, 0, 0
;__Lib_Math.c,456 :: 		
0x0126	0x0205      	MULWF       R5, 0
;__Lib_Math.c,458 :: 		
0x0128	0xF00BCFF4  	MOVFF       PRODH, R11
;__Lib_Math.c,459 :: 		
0x012C	0xF00ACFF3  	MOVFF       PRODL, R10
;__Lib_Math.c,460 :: 		
0x0130	0x5000      	MOVF        R0, 0, 0
;__Lib_Math.c,461 :: 		
0x0132	0x0205      	MULWF       R5, 0
;__Lib_Math.c,463 :: 		
0x0134	0x50F3      	MOVF        PRODL, 0, 0
;__Lib_Math.c,464 :: 		
0x0136	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,465 :: 		
0x0138	0x50F4      	MOVF        PRODH, 0, 0
;__Lib_Math.c,466 :: 		
0x013A	0x220A      	ADDWFC      R10, 1, 0
;__Lib_Math.c,467 :: 		
0x013C	0x6AE8      	CLRF        WREG, 0
;__Lib_Math.c,468 :: 		
0x013E	0x220B      	ADDWFC      R11, 1, 0
;__Lib_Math.c,469 :: 		
0x0140	0x5001      	MOVF        R1, 0, 0
;__Lib_Math.c,470 :: 		
0x0142	0x0204      	MULWF       R4, 0
;__Lib_Math.c,472 :: 		
0x0144	0x50F3      	MOVF        PRODL, 0, 0
;__Lib_Math.c,473 :: 		
0x0146	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,474 :: 		
0x0148	0x50F4      	MOVF        PRODH, 0, 0
;__Lib_Math.c,475 :: 		
0x014A	0x220A      	ADDWFC      R10, 1, 0
;__Lib_Math.c,476 :: 		
0x014C	0x6AE8      	CLRF        WREG, 0
;__Lib_Math.c,477 :: 		
0x014E	0x220B      	ADDWFC      R11, 1, 0
;__Lib_Math.c,479 :: 		
0x0150	0xF000C008  	MOVFF       R8, R0
;__Lib_Math.c,480 :: 		
0x0154	0xF001C009  	MOVFF       R9, R1
;__Lib_Math.c,481 :: 		
0x0158	0xF002C00A  	MOVFF       R10, R2
;__Lib_Math.c,482 :: 		
0x015C	0xF003C00B  	MOVFF       R11, R3
;__Lib_Math.c,485 :: 		
L_end_Mul_16X16_U:
0x0160	0x0012      	RETURN      0
; end of _Mul_16X16_U
_Div_8X8_U:
;__Lib_Math.c,77 :: 		
;__Lib_Math.c,84 :: 		
0x0162	0x6A08      	CLRF        R8, 0
;__Lib_Math.c,85 :: 		
0x0164	0x0E08      	MOVLW       8
;__Lib_Math.c,86 :: 		
0x0166	0x6E0C      	MOVWF       R12, 0
;__Lib_Math.c,87 :: 		
0x0168	0x3400      	RLCF        R0, 0, 0
;__Lib_Math.c,88 :: 		
0x016A	0x3608      	RLCF        R8, 1, 0
;__Lib_Math.c,89 :: 		
0x016C	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,90 :: 		
0x016E	0x5E08      	SUBWF       R8, 1, 0
;__Lib_Math.c,91 :: 		
0x0170	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,92 :: 		
0x0172	0xD002      	BRA         $+6
;__Lib_Math.c,93 :: 		
0x0174	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,94 :: 		
0x0176	0x90D8      	BCF         STATUS, 0, 0
;__Lib_Math.c,95 :: 		
0x0178	0x3600      	RLCF        R0, 1, 0
;__Lib_Math.c,96 :: 		
0x017A	0x2E0C      	DECFSZ      R12, 1, 0
;__Lib_Math.c,97 :: 		
0x017C	0xD7F5      	BRA         $-20
;__Lib_Math.c,99 :: 		
L_end_Div_8X8_U:
0x017E	0x0012      	RETURN      0
; end of _Div_8X8_U
_WordToStr:
;__Lib_Conversions.c,98 :: 		
;__Lib_Conversions.c,103 :: 		
0x0180	0x6A64      	CLRF        WordToStr_len_L0 
L_WordToStr11:
0x0182	0x0E05      	MOVLW       5
0x0184	0x5C64      	SUBWF       WordToStr_len_L0, 0 
0x0186	0xE20A      	BC          L_WordToStr12
;__Lib_Conversions.c,104 :: 		
0x0188	0x5064      	MOVF        WordToStr_len_L0, 0 
0x018A	0x2462      	ADDWF       FARG_WordToStr_output, 0 
0x018C	0x6EE1      	MOVWF       FSR1L 
0x018E	0x0E00      	MOVLW       0
0x0190	0x2063      	ADDWFC      FARG_WordToStr_output+1, 0 
0x0192	0x6EE2      	MOVWF       FSR1L+1 
0x0194	0x0E20      	MOVLW       32
0x0196	0x6EE6      	MOVWF       POSTINC1 
;__Lib_Conversions.c,103 :: 		
0x0198	0x2A64      	INCF        WordToStr_len_L0, 1 
;__Lib_Conversions.c,104 :: 		
0x019A	0xD7F3      	BRA         L_WordToStr11
L_WordToStr12:
;__Lib_Conversions.c,105 :: 		
0x019C	0x5064      	MOVF        WordToStr_len_L0, 0 
0x019E	0x2462      	ADDWF       FARG_WordToStr_output, 0 
0x01A0	0x6EE1      	MOVWF       FSR1L 
0x01A2	0x0E00      	MOVLW       0
0x01A4	0x2063      	ADDWFC      FARG_WordToStr_output+1, 0 
0x01A6	0x6EE2      	MOVWF       FSR1L+1 
0x01A8	0x6AE6      	CLRF        POSTINC1 
0x01AA	0x0664      	DECF        WordToStr_len_L0, 1 
;__Lib_Conversions.c,107 :: 		
L_WordToStr14:
;__Lib_Conversions.c,108 :: 		
0x01AC	0x5064      	MOVF        WordToStr_len_L0, 0 
0x01AE	0x2462      	ADDWF       FARG_WordToStr_output, 0 
0x01B0	0x6E65      	MOVWF       FLOC__WordToStr 
0x01B2	0x0E00      	MOVLW       0
0x01B4	0x2063      	ADDWFC      FARG_WordToStr_output+1, 0 
0x01B6	0x6E66      	MOVWF       FLOC__WordToStr+1 
0x01B8	0x0E0A      	MOVLW       10
0x01BA	0x6E04      	MOVWF       R4 
0x01BC	0x0E00      	MOVLW       0
0x01BE	0x6E05      	MOVWF       R5 
0x01C0	0xF000C060  	MOVFF       FARG_WordToStr_input, R0
0x01C4	0xF001C061  	MOVFF       FARG_WordToStr_input+1, R1
0x01C8	0xDF7D      	RCALL       _Div_16X16_U
0x01CA	0xF000C008  	MOVFF       R8, R0
0x01CE	0xF001C009  	MOVFF       R9, R1
0x01D2	0x0E30      	MOVLW       48
0x01D4	0x2600      	ADDWF       R0, 1 
0x01D6	0xFFE1C065  	MOVFF       FLOC__WordToStr, FSR1L
0x01DA	0xFFE2C066  	MOVFF       FLOC__WordToStr+1, FSR1H
0x01DE	0xFFE6C000  	MOVFF       R0, POSTINC1
;__Lib_Conversions.c,109 :: 		
0x01E2	0x0E0A      	MOVLW       10
0x01E4	0x6E04      	MOVWF       R4 
0x01E6	0x0E00      	MOVLW       0
0x01E8	0x6E05      	MOVWF       R5 
0x01EA	0xF000C060  	MOVFF       FARG_WordToStr_input, R0
0x01EE	0xF001C061  	MOVFF       FARG_WordToStr_input+1, R1
0x01F2	0xDF68      	RCALL       _Div_16X16_U
0x01F4	0xF060C000  	MOVFF       R0, FARG_WordToStr_input
0x01F8	0xF061C001  	MOVFF       R1, FARG_WordToStr_input+1
;__Lib_Conversions.c,110 :: 		
0x01FC	0x0E00      	MOVLW       0
0x01FE	0x1801      	XORWF       R1, 0 
0x0200	0xE102      	BNZ         L__WordToStr379
0x0202	0x0E00      	MOVLW       0
0x0204	0x1800      	XORWF       R0, 0 
L__WordToStr379:
0x0206	0xE101      	BNZ         L_WordToStr16
;__Lib_Conversions.c,111 :: 		
0x0208	0xD002      	BRA         L_WordToStr15
L_WordToStr16:
;__Lib_Conversions.c,112 :: 		
0x020A	0x0664      	DECF        WordToStr_len_L0, 1 
;__Lib_Conversions.c,113 :: 		
0x020C	0xD7CF      	BRA         L_WordToStr14
L_WordToStr15:
;__Lib_Conversions.c,114 :: 		
L_end_WordToStr:
0x020E	0x0012      	RETURN      0
; end of _WordToStr
_ADC_Read:
;__Lib_ADC_A_D.c,51 :: 		
;__Lib_ADC_A_D.c,54 :: 		
0x0210	0x6AC2      	CLRF        ADCON0 
;__Lib_ADC_A_D.c,55 :: 		
0x0212	0x1C30      	COMF        _vref_mask, 0 
0x0214	0x6E00      	MOVWF       R0 
0x0216	0x5000      	MOVF        R0, 0 
0x0218	0x16C1      	ANDWF       ADCON1, 1 
;__Lib_ADC_A_D.c,56 :: 		
0x021A	0x0E07      	MOVLW       7
0x021C	0x12C0      	IORWF       ADCON2, 1 
;__Lib_ADC_A_D.c,57 :: 		
0x021E	0x8EC0      	BSF         ADCON2, 7 
;__Lib_ADC_A_D.c,58 :: 		
0x0220	0xF000C060  	MOVFF       FARG_ADC_Read_channel, R0
0x0224	0x3600      	RLCF        R0, 1 
0x0226	0x9000      	BCF         R0, 0 
0x0228	0x3600      	RLCF        R0, 1 
0x022A	0x9000      	BCF         R0, 0 
0x022C	0x5000      	MOVF        R0, 0 
0x022E	0x12C2      	IORWF       ADCON0, 1 
;__Lib_ADC_A_D.c,59 :: 		
0x0230	0x80C2      	BSF         ADCON0, 0 
;__Lib_ADC_A_D.c,60 :: 		
0x0232	0xDF69      	RCALL       _Delay_22us
;__Lib_ADC_A_D.c,61 :: 		
0x0234	0x82C2      	BSF         ADCON0, 1 
;__Lib_ADC_A_D.c,62 :: 		
L_ADC_Read2:
0x0236	0xA2C2      	BTFSS       ADCON0, 1 
0x0238	0xD001      	BRA         L_ADC_Read3
;__Lib_ADC_A_D.c,63 :: 		
0x023A	0xD7FD      	BRA         L_ADC_Read2
L_ADC_Read3:
;__Lib_ADC_A_D.c,64 :: 		
0x023C	0xF001CFC4  	MOVFF       ADRESH, R1
0x0240	0x6A00      	CLRF        R0 
;__Lib_ADC_A_D.c,65 :: 		
0x0242	0x50C3      	MOVF        ADRESL, 0 
0x0244	0x1200      	IORWF       R0, 1 
0x0246	0x0E00      	MOVLW       0
0x0248	0x1201      	IORWF       R1, 1 
;__Lib_ADC_A_D.c,66 :: 		
0x024A	0x90C2      	BCF         ADCON0, 0 
;__Lib_ADC_A_D.c,68 :: 		
;__Lib_ADC_A_D.c,69 :: 		
L_end_ADC_Read:
0x024C	0x0012      	RETURN      0
; end of _ADC_Read
_displayNumber:
;gb8.c,53 :: 		void displayNumber(unsigned char digit, unsigned char position) {
;gb8.c,54 :: 		PORTD = segment_codes[digit];
0x024E	0x0E90      	MOVLW       _segment_codes
0x0250	0x2460      	ADDWF       FARG_displayNumber_digit, 0 
0x0252	0x6EF6      	MOVWF       TBLPTR 
0x0254	0x0E08      	MOVLW       hi_addr(_segment_codes)
0x0256	0x6EF7      	MOVWF       TBLPTR+1 
0x0258	0x0E00      	MOVLW       0
0x025A	0x22F7      	ADDWFC      TBLPTR+1, 1 
0x025C	0x0E00      	MOVLW       higher_addr(_segment_codes)
0x025E	0x6EF8      	MOVWF       TBLPTR+2 
0x0260	0x0E00      	MOVLW       0
0x0262	0x22F8      	ADDWFC      TBLPTR+2, 1 
0x0264	0x0009      	TBLRD*+
0x0266	0xFF83CFF5  	MOVFF       TABLAT, PORTD
;gb8.c,55 :: 		switch (position) {
0x026A	0xD008      	BRA         L_displayNumber3
;gb8.c,56 :: 		case 1: RB7_bit = 1; break;
L_displayNumber5:
0x026C	0x8E81      	BSF         RB7_bit, BitPos(RB7_bit+0) 
0x026E	0xD012      	BRA         L_displayNumber4
;gb8.c,57 :: 		case 2: RB6_bit = 1; break;
L_displayNumber6:
0x0270	0x8C81      	BSF         RB6_bit, BitPos(RB6_bit+0) 
0x0272	0xD010      	BRA         L_displayNumber4
;gb8.c,58 :: 		case 3: RB5_bit = 1; break;
L_displayNumber7:
0x0274	0x8A81      	BSF         RB5_bit, BitPos(RB5_bit+0) 
0x0276	0xD00E      	BRA         L_displayNumber4
;gb8.c,59 :: 		case 4: RB4_bit = 1; break;
L_displayNumber8:
0x0278	0x8881      	BSF         RB4_bit, BitPos(RB4_bit+0) 
0x027A	0xD00C      	BRA         L_displayNumber4
;gb8.c,60 :: 		}
L_displayNumber3:
0x027C	0x5061      	MOVF        FARG_displayNumber_position, 0 
0x027E	0x0A01      	XORLW       1
0x0280	0xE0F5      	BZ          L_displayNumber5
0x0282	0x5061      	MOVF        FARG_displayNumber_position, 0 
0x0284	0x0A02      	XORLW       2
0x0286	0xE0F4      	BZ          L_displayNumber6
0x0288	0x5061      	MOVF        FARG_displayNumber_position, 0 
0x028A	0x0A03      	XORLW       3
0x028C	0xE0F3      	BZ          L_displayNumber7
0x028E	0x5061      	MOVF        FARG_displayNumber_position, 0 
0x0290	0x0A04      	XORLW       4
0x0292	0xE0F2      	BZ          L_displayNumber8
L_displayNumber4:
;gb8.c,61 :: 		Delay_ms(200);
0x0294	0x0E06      	MOVLW       6
0x0296	0x6E0B      	MOVWF       R11, 0
0x0298	0x0E13      	MOVLW       19
0x029A	0x6E0C      	MOVWF       R12, 0
0x029C	0x0EAD      	MOVLW       173
0x029E	0x6E0D      	MOVWF       R13, 0
L_displayNumber9:
0x02A0	0x2E0D      	DECFSZ      R13, 1, 0
0x02A2	0xD7FE      	BRA         L_displayNumber9
0x02A4	0x2E0C      	DECFSZ      R12, 1, 0
0x02A6	0xD7FC      	BRA         L_displayNumber9
0x02A8	0x2E0B      	DECFSZ      R11, 1, 0
0x02AA	0xD7FA      	BRA         L_displayNumber9
0x02AC	0x0000      	NOP
0x02AE	0x0000      	NOP
;gb8.c,62 :: 		RB7_bit = RB6_bit = RB5_bit = RB4_bit = 0;
0x02B0	0x9881      	BCF         RB4_bit, BitPos(RB4_bit+0) 
0x02B2	0xB881      	BTFSC       RB4_bit, BitPos(RB4_bit+0) 
0x02B4	0xD002      	BRA         L__displayNumber50
0x02B6	0x9A81      	BCF         RB5_bit, BitPos(RB5_bit+0) 
0x02B8	0xD001      	BRA         L__displayNumber51
L__displayNumber50:
0x02BA	0x8A81      	BSF         RB5_bit, BitPos(RB5_bit+0) 
L__displayNumber51:
0x02BC	0xBA81      	BTFSC       RB5_bit, BitPos(RB5_bit+0) 
0x02BE	0xD002      	BRA         L__displayNumber52
0x02C0	0x9C81      	BCF         RB6_bit, BitPos(RB6_bit+0) 
0x02C2	0xD001      	BRA         L__displayNumber53
L__displayNumber52:
0x02C4	0x8C81      	BSF         RB6_bit, BitPos(RB6_bit+0) 
L__displayNumber53:
0x02C6	0xBC81      	BTFSC       RB6_bit, BitPos(RB6_bit+0) 
0x02C8	0xD002      	BRA         L__displayNumber54
0x02CA	0x9E81      	BCF         RB7_bit, BitPos(RB7_bit+0) 
0x02CC	0xD001      	BRA         L__displayNumber55
L__displayNumber54:
0x02CE	0x8E81      	BSF         RB7_bit, BitPos(RB7_bit+0) 
L__displayNumber55:
;gb8.c,63 :: 		}
L_end_displayNumber:
0x02D0	0x0012      	RETURN      0
; end of _displayNumber
_Lcd_Init:
;__Lib_Lcd.c,84 :: 		
;__Lib_Lcd.c,86 :: 		
0x02D2	0x9296      	BCF         LCD_EN_Direction, BitPos(LCD_EN_Direction+0) 
;__Lib_Lcd.c,87 :: 		
0x02D4	0x9096      	BCF         LCD_RS_Direction, BitPos(LCD_RS_Direction+0) 
;__Lib_Lcd.c,88 :: 		
0x02D6	0x9895      	BCF         LCD_D4_Direction, BitPos(LCD_D4_Direction+0) 
;__Lib_Lcd.c,89 :: 		
0x02D8	0x9A95      	BCF         LCD_D5_Direction, BitPos(LCD_D5_Direction+0) 
;__Lib_Lcd.c,90 :: 		
0x02DA	0x9C95      	BCF         LCD_D6_Direction, BitPos(LCD_D6_Direction+0) 
;__Lib_Lcd.c,91 :: 		
0x02DC	0x9E95      	BCF         LCD_D7_Direction, BitPos(LCD_D7_Direction+0) 
;__Lib_Lcd.c,93 :: 		
0x02DE	0x9284      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,94 :: 		
0x02E0	0x9084      	BCF         LCD_RS, BitPos(LCD_RS+0) 
;__Lib_Lcd.c,95 :: 		
0x02E2	0x9E83      	BCF         LCD_D7, BitPos(LCD_D7+0) 
;__Lib_Lcd.c,96 :: 		
0x02E4	0x9C83      	BCF         LCD_D6, BitPos(LCD_D6+0) 
;__Lib_Lcd.c,97 :: 		
0x02E6	0x9A83      	BCF         LCD_D5, BitPos(LCD_D5+0) 
;__Lib_Lcd.c,98 :: 		
0x02E8	0x9883      	BCF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,100 :: 		
0x02EA	0xDE98      	RCALL       _Delay_5500us
;__Lib_Lcd.c,101 :: 		
0x02EC	0xDE97      	RCALL       _Delay_5500us
;__Lib_Lcd.c,102 :: 		
0x02EE	0xDE96      	RCALL       _Delay_5500us
;__Lib_Lcd.c,105 :: 		
0x02F0	0x8A83      	BSF         LCD_D5, BitPos(LCD_D5+0) 
;__Lib_Lcd.c,106 :: 		
0x02F2	0x8883      	BSF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,107 :: 		
0x02F4	0x8284      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,108 :: 		
0x02F6	0xDE9D      	RCALL       _Delay_1us
;__Lib_Lcd.c,109 :: 		
0x02F8	0x9284      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,110 :: 		
0x02FA	0xDE90      	RCALL       _Delay_5500us
;__Lib_Lcd.c,112 :: 		
0x02FC	0x8284      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,113 :: 		
0x02FE	0xDE99      	RCALL       _Delay_1us
;__Lib_Lcd.c,114 :: 		
0x0300	0x9284      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,115 :: 		
0x0302	0xDE8C      	RCALL       _Delay_5500us
;__Lib_Lcd.c,117 :: 		
0x0304	0x8284      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,118 :: 		
0x0306	0xDE95      	RCALL       _Delay_1us
;__Lib_Lcd.c,119 :: 		
0x0308	0x9284      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,120 :: 		
0x030A	0xDE88      	RCALL       _Delay_5500us
;__Lib_Lcd.c,123 :: 		
0x030C	0x9883      	BCF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,124 :: 		
0x030E	0x8284      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,125 :: 		
0x0310	0xDE90      	RCALL       _Delay_1us
;__Lib_Lcd.c,126 :: 		
0x0312	0x9284      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,127 :: 		
0x0314	0xDE83      	RCALL       _Delay_5500us
;__Lib_Lcd.c,130 :: 		
0x0316	0x8284      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,131 :: 		
0x0318	0xDE8C      	RCALL       _Delay_1us
;__Lib_Lcd.c,132 :: 		
0x031A	0x9284      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,134 :: 		
0x031C	0x9A83      	BCF         LCD_D5, BitPos(LCD_D5+0) 
;__Lib_Lcd.c,135 :: 		
0x031E	0x8E83      	BSF         LCD_D7, BitPos(LCD_D7+0) 
;__Lib_Lcd.c,136 :: 		
0x0320	0x8284      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,137 :: 		
0x0322	0xDE87      	RCALL       _Delay_1us
;__Lib_Lcd.c,138 :: 		
0x0324	0x9284      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,139 :: 		
0x0326	0xDE7A      	RCALL       _Delay_5500us
;__Lib_Lcd.c,142 :: 		
0x0328	0x9E83      	BCF         LCD_D7, BitPos(LCD_D7+0) 
;__Lib_Lcd.c,143 :: 		
0x032A	0x8883      	BSF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,144 :: 		
0x032C	0x8284      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,145 :: 		
0x032E	0xDE81      	RCALL       _Delay_1us
;__Lib_Lcd.c,146 :: 		
0x0330	0x9284      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,148 :: 		
0x0332	0x9883      	BCF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,149 :: 		
0x0334	0x8284      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,150 :: 		
0x0336	0xDE7D      	RCALL       _Delay_1us
;__Lib_Lcd.c,151 :: 		
0x0338	0x9284      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,152 :: 		
0x033A	0xDE70      	RCALL       _Delay_5500us
;__Lib_Lcd.c,155 :: 		
0x033C	0x8284      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,156 :: 		
0x033E	0xDE79      	RCALL       _Delay_1us
;__Lib_Lcd.c,157 :: 		
0x0340	0x9284      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,159 :: 		
0x0342	0x8883      	BSF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,160 :: 		
0x0344	0x8284      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,161 :: 		
0x0346	0xDE75      	RCALL       _Delay_1us
;__Lib_Lcd.c,162 :: 		
0x0348	0x9284      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,163 :: 		
0x034A	0xDE68      	RCALL       _Delay_5500us
;__Lib_Lcd.c,166 :: 		
0x034C	0x9883      	BCF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,167 :: 		
0x034E	0x8284      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,168 :: 		
0x0350	0xDE70      	RCALL       _Delay_1us
;__Lib_Lcd.c,169 :: 		
0x0352	0x9284      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,171 :: 		
0x0354	0x8E83      	BSF         LCD_D7, BitPos(LCD_D7+0) 
;__Lib_Lcd.c,172 :: 		
0x0356	0x8C83      	BSF         LCD_D6, BitPos(LCD_D6+0) 
;__Lib_Lcd.c,173 :: 		
0x0358	0x8A83      	BSF         LCD_D5, BitPos(LCD_D5+0) 
;__Lib_Lcd.c,174 :: 		
0x035A	0x8883      	BSF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,175 :: 		
0x035C	0x8284      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,176 :: 		
0x035E	0xDE69      	RCALL       _Delay_1us
;__Lib_Lcd.c,177 :: 		
0x0360	0x9284      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,179 :: 		
0x0362	0xDE5C      	RCALL       _Delay_5500us
;__Lib_Lcd.c,181 :: 		
0x0364	0x8854      	BSF         __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0) 
;__Lib_Lcd.c,182 :: 		
L_end_Lcd_Init:
0x0366	0x0012      	RETURN      0
; end of _Lcd_Init
_ADC_Init:
;__Lib_ADC_A_D.c,13 :: 		
;__Lib_ADC_A_D.c,14 :: 		
0x0368	0x0EFF      	MOVLW       _ADC_Get_Sample
0x036A	0x6E55      	MOVWF       _ADC_Get_Sample_Ptr 
0x036C	0x0EFF      	MOVLW       hi_addr(_ADC_Get_Sample)
0x036E	0x6E56      	MOVWF       _ADC_Get_Sample_Ptr+1 
0x0370	0x0EFF      	MOVLW       FARG_ADC_Get_Sample_channel
0x0372	0x6E57      	MOVWF       _ADC_Get_Sample_Ptr+2 
0x0374	0x0EFF      	MOVLW       hi_addr(FARG_ADC_Get_Sample_channel)
0x0376	0x6E58      	MOVWF       _ADC_Get_Sample_Ptr+3 
;__Lib_ADC_A_D.c,16 :: 		
0x0378	0x6AC2      	CLRF        ADCON0 
;__Lib_ADC_A_D.c,17 :: 		
0x037A	0x1C30      	COMF        _vref_mask, 0 
0x037C	0x6E00      	MOVWF       R0 
0x037E	0x5000      	MOVF        R0, 0 
0x0380	0x16C1      	ANDWF       ADCON1, 1 
;__Lib_ADC_A_D.c,18 :: 		
0x0382	0x0E07      	MOVLW       7
0x0384	0x12C0      	IORWF       ADCON2, 1 
;__Lib_ADC_A_D.c,19 :: 		
0x0386	0x8EC0      	BSF         ADCON2, 7 
;__Lib_ADC_A_D.c,20 :: 		
0x0388	0x80C2      	BSF         ADCON0, 0 
;__Lib_ADC_A_D.c,21 :: 		
L_end_ADC_Init:
0x038A	0x0012      	RETURN      0
; end of _ADC_Init
_ByteToStr:
;__Lib_Conversions.c,66 :: 		
;__Lib_Conversions.c,69 :: 		
0x038C	0x6A63      	CLRF        ByteToStr_DigitPos_L0 
L_ByteToStr0:
0x038E	0x0E03      	MOVLW       3
0x0390	0x5C63      	SUBWF       ByteToStr_DigitPos_L0, 0 
0x0392	0xE20A      	BC          L_ByteToStr1
;__Lib_Conversions.c,70 :: 		
0x0394	0x5063      	MOVF        ByteToStr_DigitPos_L0, 0 
0x0396	0x2461      	ADDWF       FARG_ByteToStr_output, 0 
0x0398	0x6EE1      	MOVWF       FSR1L 
0x039A	0x0E00      	MOVLW       0
0x039C	0x2062      	ADDWFC      FARG_ByteToStr_output+1, 0 
0x039E	0x6EE2      	MOVWF       FSR1L+1 
0x03A0	0x0E20      	MOVLW       32
0x03A2	0x6EE6      	MOVWF       POSTINC1 
;__Lib_Conversions.c,69 :: 		
0x03A4	0x2A63      	INCF        ByteToStr_DigitPos_L0, 1 
;__Lib_Conversions.c,70 :: 		
0x03A6	0xD7F3      	BRA         L_ByteToStr0
L_ByteToStr1:
;__Lib_Conversions.c,72 :: 		
0x03A8	0x5063      	MOVF        ByteToStr_DigitPos_L0, 0 
0x03AA	0x2461      	ADDWF       FARG_ByteToStr_output, 0 
0x03AC	0x6EE1      	MOVWF       FSR1L 
0x03AE	0x0E00      	MOVLW       0
0x03B0	0x2062      	ADDWFC      FARG_ByteToStr_output+1, 0 
0x03B2	0x6EE2      	MOVWF       FSR1L+1 
0x03B4	0x6AE6      	CLRF        POSTINC1 
0x03B6	0x0663      	DECF        ByteToStr_DigitPos_L0, 1 
;__Lib_Conversions.c,74 :: 		
L_ByteToStr3:
;__Lib_Conversions.c,75 :: 		
0x03B8	0x5063      	MOVF        ByteToStr_DigitPos_L0, 0 
0x03BA	0x2461      	ADDWF       FARG_ByteToStr_output, 0 
0x03BC	0x6E64      	MOVWF       FLOC__ByteToStr 
0x03BE	0x0E00      	MOVLW       0
0x03C0	0x2062      	ADDWFC      FARG_ByteToStr_output+1, 0 
0x03C2	0x6E65      	MOVWF       FLOC__ByteToStr+1 
0x03C4	0x0E0A      	MOVLW       10
0x03C6	0x6E04      	MOVWF       R4 
0x03C8	0xF000C060  	MOVFF       FARG_ByteToStr_input, R0
0x03CC	0xDECA      	RCALL       _Div_8X8_U
0x03CE	0xF000C008  	MOVFF       R8, R0
0x03D2	0x0E30      	MOVLW       48
0x03D4	0x2600      	ADDWF       R0, 1 
0x03D6	0xFFE1C064  	MOVFF       FLOC__ByteToStr, FSR1L
0x03DA	0xFFE2C065  	MOVFF       FLOC__ByteToStr+1, FSR1H
0x03DE	0xFFE6C000  	MOVFF       R0, POSTINC1
;__Lib_Conversions.c,76 :: 		
0x03E2	0x0E0A      	MOVLW       10
0x03E4	0x6E04      	MOVWF       R4 
0x03E6	0xF000C060  	MOVFF       FARG_ByteToStr_input, R0
0x03EA	0xDEBB      	RCALL       _Div_8X8_U
0x03EC	0xF060C000  	MOVFF       R0, FARG_ByteToStr_input
;__Lib_Conversions.c,77 :: 		
0x03F0	0x5000      	MOVF        R0, 0 
0x03F2	0x0A00      	XORLW       0
0x03F4	0xE101      	BNZ         L_ByteToStr5
;__Lib_Conversions.c,78 :: 		
0x03F6	0xD002      	BRA         L_ByteToStr4
L_ByteToStr5:
;__Lib_Conversions.c,79 :: 		
0x03F8	0x0663      	DECF        ByteToStr_DigitPos_L0, 1 
;__Lib_Conversions.c,80 :: 		
0x03FA	0xD7DE      	BRA         L_ByteToStr3
L_ByteToStr4:
;__Lib_Conversions.c,81 :: 		
L_end_ByteToStr:
0x03FC	0x0012      	RETURN      0
; end of _ByteToStr
_PWM1_Init:
;__Lib_PWM_c21.c,35 :: 		
;__Lib_PWM_c21.c,36 :: 		
;__Lib_PWM_c21.c,37 :: 		
0x03FE	0x6ABE      	CLRF        CCPR1L 
;__Lib_PWM_c21.c,38 :: 		
0x0400	0x98BD      	BCF         CCP1CON, 4 
;__Lib_PWM_c21.c,39 :: 		
0x0402	0x9ABD      	BCF         CCP1CON, 5 
;__Lib_PWM_c21.c,40 :: 		
L_end_PWM1_Init:
0x0404	0x0012      	RETURN      0
; end of _PWM1_Init
_Lcd_Out_CP:
;__Lib_Lcd.c,57 :: 		
;__Lib_Lcd.c,59 :: 		
0x0406	0x6A62      	CLRF        Lcd_Out_CP_i_L0 
;__Lib_Lcd.c,60 :: 		
L_Lcd_Out_CP2:
0x0408	0x5062      	MOVF        Lcd_Out_CP_i_L0, 0 
0x040A	0x2460      	ADDWF       FARG_Lcd_Out_CP_text, 0 
0x040C	0x6EE9      	MOVWF       FSR0L 
0x040E	0x0E00      	MOVLW       0
0x0410	0x2061      	ADDWFC      FARG_Lcd_Out_CP_text+1, 0 
0x0412	0x6EEA      	MOVWF       FSR0L+1 
0x0414	0x52EE      	MOVF        POSTINC0, 1 
0x0416	0xE00B      	BZ          L_Lcd_Out_CP3
;__Lib_Lcd.c,61 :: 		
0x0418	0x5062      	MOVF        Lcd_Out_CP_i_L0, 0 
0x041A	0x2460      	ADDWF       FARG_Lcd_Out_CP_text, 0 
0x041C	0x6EE9      	MOVWF       FSR0L 
0x041E	0x0E00      	MOVLW       0
0x0420	0x2061      	ADDWFC      FARG_Lcd_Out_CP_text+1, 0 
0x0422	0x6EEA      	MOVWF       FSR0L+1 
0x0424	0xF067CFEE  	MOVFF       POSTINC0, FARG_Lcd_Chr_CP_out_char
0x0428	0xDE68      	RCALL       _Lcd_Chr_CP
0x042A	0x2A62      	INCF        Lcd_Out_CP_i_L0, 1 
;__Lib_Lcd.c,62 :: 		
0x042C	0xD7ED      	BRA         L_Lcd_Out_CP2
L_Lcd_Out_CP3:
;__Lib_Lcd.c,63 :: 		
L_end_Lcd_Out_CP:
0x042E	0x0012      	RETURN      0
; end of _Lcd_Out_CP
___CC2DW:
;__Lib_System.c,21 :: 		
;__Lib_System.c,23 :: 		
_CC2DL_Loop1:
;__Lib_System.c,24 :: 		
0x0430	0x0009      	TBLRD*+
;__Lib_System.c,25 :: 		
0x0432	0xFFE6CFF5  	MOVFF       TABLAT, POSTINC1
;__Lib_System.c,26 :: 		
0x0436	0x0600      	DECF        R0, 1, 0
;__Lib_System.c,27 :: 		
0x0438	0xE1FB      	BNZ         _CC2DL_Loop1
;__Lib_System.c,28 :: 		
0x043A	0x0601      	DECF        R1, 1, 0
;__Lib_System.c,29 :: 		
0x043C	0xE1F9      	BNZ         _CC2DL_Loop1
;__Lib_System.c,31 :: 		
L_end___CC2DW:
0x043E	0x0012      	RETURN      0
; end of ___CC2DW
_Lcd_Chr:
;__Lib_Lcd.c,65 :: 		
;__Lib_Lcd.c,66 :: 		
0x0440	0xD00F      	BRA         L_Lcd_Chr4
;__Lib_Lcd.c,67 :: 		
L_Lcd_Chr6:
0x0442	0x0E80      	MOVLW       128
0x0444	0x6E60      	MOVWF       FARG_Lcd_Chr_row 
0x0446	0xD019      	BRA         L_Lcd_Chr5
;__Lib_Lcd.c,68 :: 		
L_Lcd_Chr7:
0x0448	0x0EC0      	MOVLW       192
0x044A	0x6E60      	MOVWF       FARG_Lcd_Chr_row 
0x044C	0xD016      	BRA         L_Lcd_Chr5
;__Lib_Lcd.c,69 :: 		
L_Lcd_Chr8:
0x044E	0x0E94      	MOVLW       148
0x0450	0x6E60      	MOVWF       FARG_Lcd_Chr_row 
0x0452	0xD013      	BRA         L_Lcd_Chr5
;__Lib_Lcd.c,70 :: 		
L_Lcd_Chr9:
0x0454	0x0ED4      	MOVLW       212
0x0456	0x6E60      	MOVWF       FARG_Lcd_Chr_row 
0x0458	0xD010      	BRA         L_Lcd_Chr5
;__Lib_Lcd.c,71 :: 		
L_Lcd_Chr10:
0x045A	0x0E80      	MOVLW       128
0x045C	0x6E60      	MOVWF       FARG_Lcd_Chr_row 
;__Lib_Lcd.c,72 :: 		
0x045E	0xD00D      	BRA         L_Lcd_Chr5
L_Lcd_Chr4:
0x0460	0x5060      	MOVF        FARG_Lcd_Chr_row, 0 
0x0462	0x0A01      	XORLW       1
0x0464	0xE0EE      	BZ          L_Lcd_Chr6
0x0466	0x5060      	MOVF        FARG_Lcd_Chr_row, 0 
0x0468	0x0A02      	XORLW       2
0x046A	0xE0EE      	BZ          L_Lcd_Chr7
0x046C	0x5060      	MOVF        FARG_Lcd_Chr_row, 0 
0x046E	0x0A03      	XORLW       3
0x0470	0xE0EE      	BZ          L_Lcd_Chr8
0x0472	0x5060      	MOVF        FARG_Lcd_Chr_row, 0 
0x0474	0x0A04      	XORLW       4
0x0476	0xE0EE      	BZ          L_Lcd_Chr9
0x0478	0xD7F0      	BRA         L_Lcd_Chr10
L_Lcd_Chr5:
;__Lib_Lcd.c,74 :: 		
0x047A	0x0461      	DECF        FARG_Lcd_Chr_column, 0 
0x047C	0x6E00      	MOVWF       R0 
0x047E	0x5060      	MOVF        FARG_Lcd_Chr_row, 0 
0x0480	0x2600      	ADDWF       R0, 1 
0x0482	0xF060C000  	MOVFF       R0, FARG_Lcd_Chr_row
;__Lib_Lcd.c,76 :: 		
0x0486	0x8854      	BSF         __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0) 
;__Lib_Lcd.c,77 :: 		
0x0488	0xF068C000  	MOVFF       R0, FARG_Lcd_Cmd_out_char
0x048C	0xDDDD      	RCALL       _Lcd_Cmd
;__Lib_Lcd.c,79 :: 		
0x048E	0x9854      	BCF         __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0) 
;__Lib_Lcd.c,80 :: 		
0x0490	0xF068C062  	MOVFF       FARG_Lcd_Chr_out_char, FARG_Lcd_Cmd_out_char
0x0494	0xDDD9      	RCALL       _Lcd_Cmd
;__Lib_Lcd.c,81 :: 		
0x0496	0x8854      	BSF         __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0) 
;__Lib_Lcd.c,82 :: 		
L_end_Lcd_Chr:
0x0498	0x0012      	RETURN      0
; end of _Lcd_Chr
_PWM1_Start:
;__Lib_PWM_c21.c,53 :: 		
;__Lib_PWM_c21.c,54 :: 		
0x049A	0x9494      	BCF         TRISC2_bit, BitPos(TRISC2_bit+0) 
;__Lib_PWM_c21.c,55 :: 		
0x049C	0x84CA      	BSF         T2CON, 2 
;__Lib_PWM_c21.c,56 :: 		
0x049E	0x0E0C      	MOVLW       12
0x04A0	0x12BD      	IORWF       CCP1CON, 1 
;__Lib_PWM_c21.c,57 :: 		
L_end_PWM1_Start:
0x04A2	0x0012      	RETURN      0
; end of _PWM1_Start
_Lcd_Out:
;__Lib_Lcd.c,184 :: 		
;__Lib_Lcd.c,187 :: 		
0x04A4	0xD00F      	BRA         L_Lcd_Out11
;__Lib_Lcd.c,188 :: 		
L_Lcd_Out13:
0x04A6	0x0E80      	MOVLW       128
0x04A8	0x6E60      	MOVWF       FARG_Lcd_Out_row 
0x04AA	0xD019      	BRA         L_Lcd_Out12
;__Lib_Lcd.c,189 :: 		
L_Lcd_Out14:
0x04AC	0x0EC0      	MOVLW       192
0x04AE	0x6E60      	MOVWF       FARG_Lcd_Out_row 
0x04B0	0xD016      	BRA         L_Lcd_Out12
;__Lib_Lcd.c,190 :: 		
L_Lcd_Out15:
0x04B2	0x0E94      	MOVLW       148
0x04B4	0x6E60      	MOVWF       FARG_Lcd_Out_row 
0x04B6	0xD013      	BRA         L_Lcd_Out12
;__Lib_Lcd.c,191 :: 		
L_Lcd_Out16:
0x04B8	0x0ED4      	MOVLW       212
0x04BA	0x6E60      	MOVWF       FARG_Lcd_Out_row 
0x04BC	0xD010      	BRA         L_Lcd_Out12
;__Lib_Lcd.c,192 :: 		
L_Lcd_Out17:
0x04BE	0x0E80      	MOVLW       128
0x04C0	0x6E60      	MOVWF       FARG_Lcd_Out_row 
;__Lib_Lcd.c,193 :: 		
0x04C2	0xD00D      	BRA         L_Lcd_Out12
L_Lcd_Out11:
0x04C4	0x5060      	MOVF        FARG_Lcd_Out_row, 0 
0x04C6	0x0A01      	XORLW       1
0x04C8	0xE0EE      	BZ          L_Lcd_Out13
0x04CA	0x5060      	MOVF        FARG_Lcd_Out_row, 0 
0x04CC	0x0A02      	XORLW       2
0x04CE	0xE0EE      	BZ          L_Lcd_Out14
0x04D0	0x5060      	MOVF        FARG_Lcd_Out_row, 0 
0x04D2	0x0A03      	XORLW       3
0x04D4	0xE0EE      	BZ          L_Lcd_Out15
0x04D6	0x5060      	MOVF        FARG_Lcd_Out_row, 0 
0x04D8	0x0A04      	XORLW       4
0x04DA	0xE0EE      	BZ          L_Lcd_Out16
0x04DC	0xD7F0      	BRA         L_Lcd_Out17
L_Lcd_Out12:
;__Lib_Lcd.c,194 :: 		
0x04DE	0x0461      	DECF        FARG_Lcd_Out_column, 0 
0x04E0	0x6E00      	MOVWF       R0 
0x04E2	0x5060      	MOVF        FARG_Lcd_Out_row, 0 
0x04E4	0x2600      	ADDWF       R0, 1 
0x04E6	0xF060C000  	MOVFF       R0, FARG_Lcd_Out_row
;__Lib_Lcd.c,196 :: 		
0x04EA	0xF068C000  	MOVFF       R0, FARG_Lcd_Cmd_out_char
0x04EE	0xDDAC      	RCALL       _Lcd_Cmd
;__Lib_Lcd.c,197 :: 		
0x04F0	0x9854      	BCF         __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0) 
;__Lib_Lcd.c,198 :: 		
0x04F2	0x6A64      	CLRF        Lcd_Out_i_L0 
;__Lib_Lcd.c,199 :: 		
L_Lcd_Out18:
0x04F4	0x5064      	MOVF        Lcd_Out_i_L0, 0 
0x04F6	0x2462      	ADDWF       FARG_Lcd_Out_text, 0 
0x04F8	0x6EE9      	MOVWF       FSR0L 
0x04FA	0x0E00      	MOVLW       0
0x04FC	0x2063      	ADDWFC      FARG_Lcd_Out_text+1, 0 
0x04FE	0x6EEA      	MOVWF       FSR0L+1 
0x0500	0x52EE      	MOVF        POSTINC0, 1 
0x0502	0xE00B      	BZ          L_Lcd_Out19
;__Lib_Lcd.c,200 :: 		
0x0504	0x5064      	MOVF        Lcd_Out_i_L0, 0 
0x0506	0x2462      	ADDWF       FARG_Lcd_Out_text, 0 
0x0508	0x6EE9      	MOVWF       FSR0L 
0x050A	0x0E00      	MOVLW       0
0x050C	0x2063      	ADDWFC      FARG_Lcd_Out_text+1, 0 
0x050E	0x6EEA      	MOVWF       FSR0L+1 
0x0510	0xF067CFEE  	MOVFF       POSTINC0, FARG_Lcd_Chr_CP_out_char
0x0514	0xDDF2      	RCALL       _Lcd_Chr_CP
0x0516	0x2A64      	INCF        Lcd_Out_i_L0, 1 
0x0518	0xD7ED      	BRA         L_Lcd_Out18
L_Lcd_Out19:
;__Lib_Lcd.c,201 :: 		
0x051A	0x8854      	BSF         __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0) 
;__Lib_Lcd.c,202 :: 		
L_end_Lcd_Out:
0x051C	0x0012      	RETURN      0
; end of _Lcd_Out
_CreateCustomChar:
;gb8.c,25 :: 		void CreateCustomChar() {
;gb8.c,27 :: 		Lcd_Cmd(64);
0x051E	0x0E40      	MOVLW       64
0x0520	0x6E68      	MOVWF       FARG_Lcd_Cmd_out_char 
0x0522	0xDD92      	RCALL       _Lcd_Cmd
;gb8.c,28 :: 		for (i = 0; i < 8; i++) {
0x0524	0x6A60      	CLRF        CreateCustomChar_i_L0 
L_CreateCustomChar0:
0x0526	0x0E08      	MOVLW       8
0x0528	0x5C60      	SUBWF       CreateCustomChar_i_L0, 0 
0x052A	0xE211      	BC          L_CreateCustomChar1
;gb8.c,29 :: 		Lcd_Chr_Cp(customChar[i]);
0x052C	0x0E9A      	MOVLW       _customChar
0x052E	0x2460      	ADDWF       CreateCustomChar_i_L0, 0 
0x0530	0x6EF6      	MOVWF       TBLPTR 
0x0532	0x0E08      	MOVLW       hi_addr(_customChar)
0x0534	0x6EF7      	MOVWF       TBLPTR+1 
0x0536	0x0E00      	MOVLW       0
0x0538	0x22F7      	ADDWFC      TBLPTR+1, 1 
0x053A	0x0E00      	MOVLW       higher_addr(_customChar)
0x053C	0x6EF8      	MOVWF       TBLPTR+2 
0x053E	0x0E00      	MOVLW       0
0x0540	0x22F8      	ADDWFC      TBLPTR+2, 1 
0x0542	0x0009      	TBLRD*+
0x0544	0xF067CFF5  	MOVFF       TABLAT, FARG_Lcd_Chr_CP_out_char
0x0548	0xDDD8      	RCALL       _Lcd_Chr_CP
;gb8.c,28 :: 		for (i = 0; i < 8; i++) {
0x054A	0x2A60      	INCF        CreateCustomChar_i_L0, 1 
;gb8.c,30 :: 		}
0x054C	0xD7EC      	BRA         L_CreateCustomChar0
L_CreateCustomChar1:
;gb8.c,31 :: 		Lcd_Cmd(_LCD_RETURN_HOME);
0x054E	0x0E02      	MOVLW       2
0x0550	0x6E68      	MOVWF       FARG_Lcd_Cmd_out_char 
0x0552	0xDD7A      	RCALL       _Lcd_Cmd
;gb8.c,32 :: 		}
L_end_CreateCustomChar:
0x0554	0x0012      	RETURN      0
; end of _CreateCustomChar
_PWM1_Set_Duty:
;__Lib_PWM_c21.c,42 :: 		
;__Lib_PWM_c21.c,46 :: 		
0x0556	0x50CB      	MOVF        PR2, 0 
0x0558	0x0F01      	ADDLW       1
0x055A	0x6E00      	MOVWF       R0 
0x055C	0x6A01      	CLRF        R1 
0x055E	0x0E00      	MOVLW       0
0x0560	0x2201      	ADDWFC      R1, 1 
0x0562	0xF004C060  	MOVFF       FARG_PWM1_Set_Duty_new_duty, R4
0x0566	0x0E00      	MOVLW       0
0x0568	0x6E05      	MOVWF       R5 
0x056A	0xDDD3      	RCALL       _Mul_16X16_U
0x056C	0x0E06      	MOVLW       6
0x056E	0x6E02      	MOVWF       R2 
0x0570	0xF004C000  	MOVFF       R0, R4
0x0574	0xF005C001  	MOVFF       R1, R5
0x0578	0x5002      	MOVF        R2, 0 
L__PWM1_Set_Duty10:
0x057A	0xE005      	BZ          L__PWM1_Set_Duty11
0x057C	0x3205      	RRCF        R5, 1 
0x057E	0x3204      	RRCF        R4, 1 
0x0580	0x9E05      	BCF         R5, 7 
0x0582	0x0FFF      	ADDLW       255
0x0584	0xD7FA      	BRA         L__PWM1_Set_Duty10
L__PWM1_Set_Duty11:
;__Lib_PWM_c21.c,47 :: 		
0x0586	0x0E04      	MOVLW       4
0x0588	0x6E01      	MOVWF       R1 
0x058A	0xF000C004  	MOVFF       R4, R0
0x058E	0x5001      	MOVF        R1, 0 
L__PWM1_Set_Duty12:
0x0590	0xE004      	BZ          L__PWM1_Set_Duty13
0x0592	0x3600      	RLCF        R0, 1 
0x0594	0x9000      	BCF         R0, 0 
0x0596	0x0FFF      	ADDLW       255
0x0598	0xD7FB      	BRA         L__PWM1_Set_Duty12
L__PWM1_Set_Duty13:
0x059A	0x0E30      	MOVLW       48
0x059C	0x1400      	ANDWF       R0, 0 
0x059E	0x6E03      	MOVWF       R3 
;__Lib_PWM_c21.c,48 :: 		
0x05A0	0xF000C004  	MOVFF       R4, R0
0x05A4	0xF001C005  	MOVFF       R5, R1
0x05A8	0x3201      	RRCF        R1, 1 
0x05AA	0x3200      	RRCF        R0, 1 
0x05AC	0x9E01      	BCF         R1, 7 
0x05AE	0x3201      	RRCF        R1, 1 
0x05B0	0x3200      	RRCF        R0, 1 
0x05B2	0x9E01      	BCF         R1, 7 
0x05B4	0xFFBEC000  	MOVFF       R0, CCPR1L
;__Lib_PWM_c21.c,49 :: 		
0x05B8	0x0E0F      	MOVLW       15
0x05BA	0x16BD      	ANDWF       CCP1CON, 1 
;__Lib_PWM_c21.c,50 :: 		
0x05BC	0x5003      	MOVF        R3, 0 
0x05BE	0x12BD      	IORWF       CCP1CON, 1 
;__Lib_PWM_c21.c,51 :: 		
L_end_PWM1_Set_Duty:
0x05C0	0x0012      	RETURN      0
; end of _PWM1_Set_Duty
_main:
0x05C2	0xF004EC51  	CALL        2210, 0
;gb8.c,65 :: 		void main() {
;gb8.c,66 :: 		previousStateRB0 = 0;
0x05C6	0x9254      	BCF         _previousStateRB0, BitPos(_previousStateRB0+0) 
;gb8.c,67 :: 		previousStateRB1 = 0;
0x05C8	0x9054      	BCF         _previousStateRB1, BitPos(_previousStateRB1+0) 
;gb8.c,68 :: 		previousStateRB2 = 0;
0x05CA	0x9654      	BCF         _previousStateRB2, BitPos(_previousStateRB2+0) 
;gb8.c,69 :: 		previousStateRB3 = 0;
0x05CC	0x9454      	BCF         _previousStateRB3, BitPos(_previousStateRB3+0) 
;gb8.c,70 :: 		PORTA = 0;
0x05CE	0x6A80      	CLRF        PORTA 
;gb8.c,71 :: 		TRISA = 4;
0x05D0	0x0E04      	MOVLW       4
0x05D2	0x6E92      	MOVWF       TRISA 
;gb8.c,72 :: 		ADCON1 = 12;
0x05D4	0x0E0C      	MOVLW       12
0x05D6	0x6EC1      	MOVWF       ADCON1 
;gb8.c,73 :: 		CMCON = 7;
0x05D8	0x0E07      	MOVLW       7
0x05DA	0x6EB4      	MOVWF       CMCON 
;gb8.c,74 :: 		INTCON2 = 0;
0x05DC	0x6AF1      	CLRF        INTCON2 
;gb8.c,75 :: 		TRISB0_bit = 1;
0x05DE	0x8093      	BSF         TRISB0_bit, BitPos(TRISB0_bit+0) 
;gb8.c,76 :: 		TRISB1_bit = 1;
0x05E0	0x8293      	BSF         TRISB1_bit, BitPos(TRISB1_bit+0) 
;gb8.c,77 :: 		TRISB2_bit = 1;
0x05E2	0x8493      	BSF         TRISB2_bit, BitPos(TRISB2_bit+0) 
;gb8.c,78 :: 		TRISD = 0;
0x05E4	0x6A95      	CLRF        TRISD 
;gb8.c,79 :: 		TRISB4_bit = 0;
0x05E6	0x9893      	BCF         TRISB4_bit, BitPos(TRISB4_bit+0) 
;gb8.c,80 :: 		TRISB5_bit = 0;
0x05E8	0x9A93      	BCF         TRISB5_bit, BitPos(TRISB5_bit+0) 
;gb8.c,81 :: 		TRISB6_bit = 0;
0x05EA	0x9C93      	BCF         TRISB6_bit, BitPos(TRISB6_bit+0) 
;gb8.c,82 :: 		TRISB7_bit = 0;
0x05EC	0x9E93      	BCF         TRISB7_bit, BitPos(TRISB7_bit+0) 
;gb8.c,84 :: 		ADC_Init();
0x05EE	0xDEBC      	RCALL       _ADC_Init
;gb8.c,85 :: 		Lcd_Init();
0x05F0	0xDE70      	RCALL       _Lcd_Init
;gb8.c,86 :: 		Lcd_Cmd(_LCD_CURSOR_OFF);
0x05F2	0x0E0C      	MOVLW       12
0x05F4	0x6E68      	MOVWF       FARG_Lcd_Cmd_out_char 
0x05F6	0xDD28      	RCALL       _Lcd_Cmd
;gb8.c,87 :: 		Lcd_Cmd(_LCD_CLEAR);
0x05F8	0x0E01      	MOVLW       1
0x05FA	0x6E68      	MOVWF       FARG_Lcd_Cmd_out_char 
0x05FC	0xDD25      	RCALL       _Lcd_Cmd
;gb8.c,88 :: 		CreateCustomChar();
0x05FE	0xDF8F      	RCALL       _CreateCustomChar
;gb8.c,89 :: 		pwm1_init(20000);
0x0600	0x90CA      	BCF         T2CON, 0, 0
0x0602	0x92CA      	BCF         T2CON, 1, 0
0x0604	0x0EF9      	MOVLW       249
0x0606	0x6ECB      	MOVWF       PR2, 0
0x0608	0xDEFA      	RCALL       _PWM1_Init
;gb8.c,90 :: 		pwm1_set_duty(0);
0x060A	0x6A60      	CLRF        FARG_PWM1_Set_Duty_new_duty 
0x060C	0xDFA4      	RCALL       _PWM1_Set_Duty
;gb8.c,91 :: 		pwm1_start();
0x060E	0xDF45      	RCALL       _PWM1_Start
;gb8.c,93 :: 		while (1) {
L_main10:
;gb8.c,96 :: 		Lcd_Chr(2, 16, 0);
0x0610	0x0E02      	MOVLW       2
0x0612	0x6E60      	MOVWF       FARG_Lcd_Chr_row 
0x0614	0x0E10      	MOVLW       16
0x0616	0x6E61      	MOVWF       FARG_Lcd_Chr_column 
0x0618	0x6A62      	CLRF        FARG_Lcd_Chr_out_char 
0x061A	0xDF12      	RCALL       _Lcd_Chr
;gb8.c,98 :: 		if (RB0_bit == 1 && previousStateRB0 == 0) {
0x061C	0xA081      	BTFSS       RB0_bit, BitPos(RB0_bit+0) 
0x061E	0xD027      	BRA         L_main14
0x0620	0xB254      	BTFSC       _previousStateRB0, BitPos(_previousStateRB0+0) 
0x0622	0xD025      	BRA         L_main14
L__main47:
;gb8.c,99 :: 		previousStateRB0 = 1;
0x0624	0x8254      	BSF         _previousStateRB0, BitPos(_previousStateRB0+0) 
;gb8.c,101 :: 		Lcd_Out(1, 1, "Felipe Wormmat");
0x0626	0x0E01      	MOVLW       1
0x0628	0x6E60      	MOVWF       FARG_Lcd_Out_row 
0x062A	0x0E01      	MOVLW       1
0x062C	0x6E61      	MOVWF       FARG_Lcd_Out_column 
0x062E	0x0E21      	MOVLW       ?lstr1_gb8
0x0630	0x6E62      	MOVWF       FARG_Lcd_Out_text 
0x0632	0x0E00      	MOVLW       hi_addr(?lstr1_gb8)
0x0634	0x6E63      	MOVWF       FARG_Lcd_Out_text+1 
0x0636	0xDF36      	RCALL       _Lcd_Out
;gb8.c,102 :: 		Lcd_Out(2, 1, "RA 38579");
0x0638	0x0E02      	MOVLW       2
0x063A	0x6E60      	MOVWF       FARG_Lcd_Out_row 
0x063C	0x0E01      	MOVLW       1
0x063E	0x6E61      	MOVWF       FARG_Lcd_Out_column 
0x0640	0x0E17      	MOVLW       ?lstr2_gb8
0x0642	0x6E62      	MOVWF       FARG_Lcd_Out_text 
0x0644	0x0E00      	MOVLW       hi_addr(?lstr2_gb8)
0x0646	0x6E63      	MOVWF       FARG_Lcd_Out_text+1 
0x0648	0xDF2D      	RCALL       _Lcd_Out
;gb8.c,104 :: 		Delay_ms(2000);
0x064A	0x0E33      	MOVLW       51
0x064C	0x6E0B      	MOVWF       R11, 0
0x064E	0x0EBB      	MOVLW       187
0x0650	0x6E0C      	MOVWF       R12, 0
0x0652	0x0EDF      	MOVLW       223
0x0654	0x6E0D      	MOVWF       R13, 0
L_main15:
0x0656	0x2E0D      	DECFSZ      R13, 1, 0
0x0658	0xD7FE      	BRA         L_main15
0x065A	0x2E0C      	DECFSZ      R12, 1, 0
0x065C	0xD7FC      	BRA         L_main15
0x065E	0x2E0B      	DECFSZ      R11, 1, 0
0x0660	0xD7FA      	BRA         L_main15
0x0662	0x0000      	NOP
0x0664	0x0000      	NOP
;gb8.c,105 :: 		Lcd_Cmd(_LCD_CLEAR);
0x0666	0x0E01      	MOVLW       1
0x0668	0x6E68      	MOVWF       FARG_Lcd_Cmd_out_char 
0x066A	0xDCEE      	RCALL       _Lcd_Cmd
;gb8.c,106 :: 		} else if (RB0_bit == 0) {
0x066C	0xD002      	BRA         L_main16
L_main14:
0x066E	0xA081      	BTFSS       RB0_bit, BitPos(RB0_bit+0) 
;gb8.c,107 :: 		previousStateRB0 = 0;
0x0670	0x9254      	BCF         _previousStateRB0, BitPos(_previousStateRB0+0) 
;gb8.c,108 :: 		}
L_main17:
L_main16:
;gb8.c,110 :: 		if (RB1_bit == 1 && previousStateRB1 == 0) {
0x0672	0xA281      	BTFSS       RB1_bit, BitPos(RB1_bit+0) 
0x0674	0xD026      	BRA         L_main20
0x0676	0xB054      	BTFSC       _previousStateRB1, BitPos(_previousStateRB1+0) 
0x0678	0xD024      	BRA         L_main20
L__main46:
;gb8.c,111 :: 		previousStateRB1 = 1;
0x067A	0x8054      	BSF         _previousStateRB1, BitPos(_previousStateRB1+0) 
;gb8.c,113 :: 		displayNumber(3, 1);
0x067C	0x0E03      	MOVLW       3
0x067E	0x6E60      	MOVWF       FARG_displayNumber_digit 
0x0680	0x0E01      	MOVLW       1
0x0682	0x6E61      	MOVWF       FARG_displayNumber_position 
0x0684	0xDDE4      	RCALL       _displayNumber
;gb8.c,114 :: 		displayNumber(8, 2);
0x0686	0x0E08      	MOVLW       8
0x0688	0x6E60      	MOVWF       FARG_displayNumber_digit 
0x068A	0x0E02      	MOVLW       2
0x068C	0x6E61      	MOVWF       FARG_displayNumber_position 
0x068E	0xDDDF      	RCALL       _displayNumber
;gb8.c,115 :: 		displayNumber(5, 3);
0x0690	0x0E05      	MOVLW       5
0x0692	0x6E60      	MOVWF       FARG_displayNumber_digit 
0x0694	0x0E03      	MOVLW       3
0x0696	0x6E61      	MOVWF       FARG_displayNumber_position 
0x0698	0xDDDA      	RCALL       _displayNumber
;gb8.c,116 :: 		displayNumber(7, 4);
0x069A	0x0E07      	MOVLW       7
0x069C	0x6E60      	MOVWF       FARG_displayNumber_digit 
0x069E	0x0E04      	MOVLW       4
0x06A0	0x6E61      	MOVWF       FARG_displayNumber_position 
0x06A2	0xDDD5      	RCALL       _displayNumber
;gb8.c,118 :: 		Delay_ms(200);
0x06A4	0x0E06      	MOVLW       6
0x06A6	0x6E0B      	MOVWF       R11, 0
0x06A8	0x0E13      	MOVLW       19
0x06AA	0x6E0C      	MOVWF       R12, 0
0x06AC	0x0EAD      	MOVLW       173
0x06AE	0x6E0D      	MOVWF       R13, 0
L_main21:
0x06B0	0x2E0D      	DECFSZ      R13, 1, 0
0x06B2	0xD7FE      	BRA         L_main21
0x06B4	0x2E0C      	DECFSZ      R12, 1, 0
0x06B6	0xD7FC      	BRA         L_main21
0x06B8	0x2E0B      	DECFSZ      R11, 1, 0
0x06BA	0xD7FA      	BRA         L_main21
0x06BC	0x0000      	NOP
0x06BE	0x0000      	NOP
;gb8.c,119 :: 		} else if (RB1_bit == 0) {
0x06C0	0xD002      	BRA         L_main22
L_main20:
0x06C2	0xA281      	BTFSS       RB1_bit, BitPos(RB1_bit+0) 
;gb8.c,120 :: 		previousStateRB1 = 0;
0x06C4	0x9054      	BCF         _previousStateRB1, BitPos(_previousStateRB1+0) 
;gb8.c,121 :: 		}
L_main23:
L_main22:
;gb8.c,123 :: 		if (RB2_bit == 1 && previousStateRB2 == 0) {
0x06C6	0xA481      	BTFSS       RB2_bit, BitPos(RB2_bit+0) 
0x06C8	0xD05A      	BRA         L_main26
0x06CA	0xB654      	BTFSC       _previousStateRB2, BitPos(_previousStateRB2+0) 
0x06CC	0xD058      	BRA         L_main26
L__main45:
;gb8.c,124 :: 		Delay_ms(50);
0x06CE	0x0E02      	MOVLW       2
0x06D0	0x6E0B      	MOVWF       R11, 0
0x06D2	0x0E45      	MOVLW       69
0x06D4	0x6E0C      	MOVWF       R12, 0
0x06D6	0x0EA9      	MOVLW       169
0x06D8	0x6E0D      	MOVWF       R13, 0
L_main27:
0x06DA	0x2E0D      	DECFSZ      R13, 1, 0
0x06DC	0xD7FE      	BRA         L_main27
0x06DE	0x2E0C      	DECFSZ      R12, 1, 0
0x06E0	0xD7FC      	BRA         L_main27
0x06E2	0x2E0B      	DECFSZ      R11, 1, 0
0x06E4	0xD7FA      	BRA         L_main27
0x06E6	0x0000      	NOP
0x06E8	0x0000      	NOP
;gb8.c,125 :: 		if (RB2_bit == 1) {
0x06EA	0xA481      	BTFSS       RB2_bit, BitPos(RB2_bit+0) 
0x06EC	0xD047      	BRA         L_main28
;gb8.c,126 :: 		previousStateRB2 = 1;
0x06EE	0x8654      	BSF         _previousStateRB2, BitPos(_previousStateRB2+0) 
;gb8.c,128 :: 		if (rb2Ativo == 1) counter++;
0x06F0	0x0E00      	MOVLW       0
0x06F2	0x1816      	XORWF       _rb2Ativo+1, 0 
0x06F4	0xE102      	BNZ         L__main57
0x06F6	0x0E01      	MOVLW       1
0x06F8	0x1815      	XORWF       _rb2Ativo, 0 
L__main57:
0x06FA	0xB4D8      	BTFSC       STATUS, 2 
0x06FC	0x2A20      	INCF        _counter, 1 
L_main29:
;gb8.c,129 :: 		if (counter > 255) counter = 0;
0x06FE	0x5020      	MOVF        _counter, 0 
0x0700	0x08FF      	SUBLW       255
0x0702	0xA0D8      	BTFSS       STATUS, 0 
0x0704	0x6A20      	CLRF        _counter 
L_main30:
;gb8.c,131 :: 		if (rb2Ativo == 1) {
0x0706	0x0E00      	MOVLW       0
0x0708	0x1816      	XORWF       _rb2Ativo+1, 0 
0x070A	0xE102      	BNZ         L__main58
0x070C	0x0E01      	MOVLW       1
0x070E	0x1815      	XORWF       _rb2Ativo, 0 
L__main58:
0x0710	0xE135      	BNZ         L_main31
;gb8.c,132 :: 		pwm1_set_duty(counter);
0x0712	0xF060C020  	MOVFF       _counter, FARG_PWM1_Set_Duty_new_duty
0x0716	0xDF1F      	RCALL       _PWM1_Set_Duty
;gb8.c,134 :: 		ByteToStr(counter, txt);
0x0718	0xF060C020  	MOVFF       _counter, FARG_ByteToStr_input
0x071C	0x0E4D      	MOVLW       _txt
0x071E	0x6E61      	MOVWF       FARG_ByteToStr_output 
0x0720	0x0E00      	MOVLW       hi_addr(_txt)
0x0722	0x6E62      	MOVWF       FARG_ByteToStr_output+1 
0x0724	0xDE33      	RCALL       _ByteToStr
;gb8.c,135 :: 		Lcd_Cmd(_LCD_CLEAR);
0x0726	0x0E01      	MOVLW       1
0x0728	0x6E68      	MOVWF       FARG_Lcd_Cmd_out_char 
0x072A	0xDC8E      	RCALL       _Lcd_Cmd
;gb8.c,136 :: 		Lcd_Out(1, 1, "Conta ");
0x072C	0x0E01      	MOVLW       1
0x072E	0x6E60      	MOVWF       FARG_Lcd_Out_row 
0x0730	0x0E01      	MOVLW       1
0x0732	0x6E61      	MOVWF       FARG_Lcd_Out_column 
0x0734	0x0E3F      	MOVLW       ?lstr3_gb8
0x0736	0x6E62      	MOVWF       FARG_Lcd_Out_text 
0x0738	0x0E00      	MOVLW       hi_addr(?lstr3_gb8)
0x073A	0x6E63      	MOVWF       FARG_Lcd_Out_text+1 
0x073C	0xDEB3      	RCALL       _Lcd_Out
;gb8.c,137 :: 		Lcd_Out_Cp(txt);
0x073E	0x0E4D      	MOVLW       _txt
0x0740	0x6E60      	MOVWF       FARG_Lcd_Out_CP_text 
0x0742	0x0E00      	MOVLW       hi_addr(_txt)
0x0744	0x6E61      	MOVWF       FARG_Lcd_Out_CP_text+1 
0x0746	0xDE5F      	RCALL       _Lcd_Out_CP
;gb8.c,138 :: 		adcValue = ADC_Read(2);
0x0748	0x0E02      	MOVLW       2
0x074A	0x6E60      	MOVWF       FARG_ADC_Read_channel 
0x074C	0xDD61      	RCALL       _ADC_Read
;gb8.c,139 :: 		WordToStr(adcValue, adcTxt);
0x074E	0xF060C000  	MOVFF       R0, FARG_WordToStr_input
0x0752	0xF061C001  	MOVFF       R1, FARG_WordToStr_input+1
0x0756	0x0E59      	MOVLW       main_adcTxt_L1
0x0758	0x6E62      	MOVWF       FARG_WordToStr_output 
0x075A	0x0E00      	MOVLW       hi_addr(main_adcTxt_L1)
0x075C	0x6E63      	MOVWF       FARG_WordToStr_output+1 
0x075E	0xDD10      	RCALL       _WordToStr
;gb8.c,140 :: 		Lcd_Out(2, 1, "ADC2:");
0x0760	0x0E02      	MOVLW       2
0x0762	0x6E60      	MOVWF       FARG_Lcd_Out_row 
0x0764	0x0E01      	MOVLW       1
0x0766	0x6E61      	MOVWF       FARG_Lcd_Out_column 
0x0768	0x0E39      	MOVLW       ?lstr4_gb8
0x076A	0x6E62      	MOVWF       FARG_Lcd_Out_text 
0x076C	0x0E00      	MOVLW       hi_addr(?lstr4_gb8)
0x076E	0x6E63      	MOVWF       FARG_Lcd_Out_text+1 
0x0770	0xDE99      	RCALL       _Lcd_Out
;gb8.c,141 :: 		Lcd_Out_Cp(adcTxt);
0x0772	0x0E59      	MOVLW       main_adcTxt_L1
0x0774	0x6E60      	MOVWF       FARG_Lcd_Out_CP_text 
0x0776	0x0E00      	MOVLW       hi_addr(main_adcTxt_L1)
0x0778	0x6E61      	MOVWF       FARG_Lcd_Out_CP_text+1 
0x077A	0xDE45      	RCALL       _Lcd_Out_CP
;gb8.c,142 :: 		}
L_main31:
;gb8.c,143 :: 		}
L_main28:
;gb8.c,144 :: 		} else if (RB2_bit == 0) {
0x077C	0xD007      	BRA         L_main32
L_main26:
0x077E	0xB481      	BTFSC       RB2_bit, BitPos(RB2_bit+0) 
0x0780	0xD005      	BRA         L_main33
;gb8.c,145 :: 		rb2Ativo = 1;
0x0782	0x0E01      	MOVLW       1
0x0784	0x6E15      	MOVWF       _rb2Ativo 
0x0786	0x0E00      	MOVLW       0
0x0788	0x6E16      	MOVWF       _rb2Ativo+1 
;gb8.c,146 :: 		previousStateRB2 = 0;
0x078A	0x9654      	BCF         _previousStateRB2, BitPos(_previousStateRB2+0) 
;gb8.c,147 :: 		}
L_main33:
L_main32:
;gb8.c,149 :: 		if (RB3_bit == 1 && previousStateRB3 == 0) {
0x078C	0xA681      	BTFSS       RB3_bit, BitPos(RB3_bit+0) 
0x078E	0xD05B      	BRA         L_main36
0x0790	0xB454      	BTFSC       _previousStateRB3, BitPos(_previousStateRB3+0) 
0x0792	0xD059      	BRA         L_main36
L__main44:
;gb8.c,150 :: 		Delay_ms(50);
0x0794	0x0E02      	MOVLW       2
0x0796	0x6E0B      	MOVWF       R11, 0
0x0798	0x0E45      	MOVLW       69
0x079A	0x6E0C      	MOVWF       R12, 0
0x079C	0x0EA9      	MOVLW       169
0x079E	0x6E0D      	MOVWF       R13, 0
L_main37:
0x07A0	0x2E0D      	DECFSZ      R13, 1, 0
0x07A2	0xD7FE      	BRA         L_main37
0x07A4	0x2E0C      	DECFSZ      R12, 1, 0
0x07A6	0xD7FC      	BRA         L_main37
0x07A8	0x2E0B      	DECFSZ      R11, 1, 0
0x07AA	0xD7FA      	BRA         L_main37
0x07AC	0x0000      	NOP
0x07AE	0x0000      	NOP
;gb8.c,151 :: 		if (RB3_bit == 1) {
0x07B0	0xA681      	BTFSS       RB3_bit, BitPos(RB3_bit+0) 
0x07B2	0xD048      	BRA         L_main38
;gb8.c,152 :: 		previousStateRB3 = 1;
0x07B4	0x8454      	BSF         _previousStateRB3, BitPos(_previousStateRB3+0) 
;gb8.c,154 :: 		if (rb3Ativo == 1) counter--;
0x07B6	0x0E00      	MOVLW       0
0x07B8	0x1838      	XORWF       _rb3Ativo+1, 0 
0x07BA	0xE102      	BNZ         L__main59
0x07BC	0x0E01      	MOVLW       1
0x07BE	0x1837      	XORWF       _rb3Ativo, 0 
L__main59:
0x07C0	0xB4D8      	BTFSC       STATUS, 2 
0x07C2	0x0620      	DECF        _counter, 1 
L_main39:
;gb8.c,155 :: 		if (counter < 1) counter = 255;
0x07C4	0x0E01      	MOVLW       1
0x07C6	0x5C20      	SUBWF       _counter, 0 
0x07C8	0xE202      	BC          L_main40
0x07CA	0x0EFF      	MOVLW       255
0x07CC	0x6E20      	MOVWF       _counter 
L_main40:
;gb8.c,157 :: 		if (rb3Ativo == 1) {
0x07CE	0x0E00      	MOVLW       0
0x07D0	0x1838      	XORWF       _rb3Ativo+1, 0 
0x07D2	0xE102      	BNZ         L__main60
0x07D4	0x0E01      	MOVLW       1
0x07D6	0x1837      	XORWF       _rb3Ativo, 0 
L__main60:
0x07D8	0xE135      	BNZ         L_main41
;gb8.c,158 :: 		pwm1_set_duty(counter);
0x07DA	0xF060C020  	MOVFF       _counter, FARG_PWM1_Set_Duty_new_duty
0x07DE	0xDEBB      	RCALL       _PWM1_Set_Duty
;gb8.c,160 :: 		ByteToStr(counter, txt);
0x07E0	0xF060C020  	MOVFF       _counter, FARG_ByteToStr_input
0x07E4	0x0E4D      	MOVLW       _txt
0x07E6	0x6E61      	MOVWF       FARG_ByteToStr_output 
0x07E8	0x0E00      	MOVLW       hi_addr(_txt)
0x07EA	0x6E62      	MOVWF       FARG_ByteToStr_output+1 
0x07EC	0xDDCF      	RCALL       _ByteToStr
;gb8.c,161 :: 		Lcd_Cmd(_LCD_CLEAR);
0x07EE	0x0E01      	MOVLW       1
0x07F0	0x6E68      	MOVWF       FARG_Lcd_Cmd_out_char 
0x07F2	0xDC2A      	RCALL       _Lcd_Cmd
;gb8.c,162 :: 		Lcd_Out(1, 1, "Conta ");
0x07F4	0x0E01      	MOVLW       1
0x07F6	0x6E60      	MOVWF       FARG_Lcd_Out_row 
0x07F8	0x0E01      	MOVLW       1
0x07FA	0x6E61      	MOVWF       FARG_Lcd_Out_column 
0x07FC	0x0E46      	MOVLW       ?lstr5_gb8
0x07FE	0x6E62      	MOVWF       FARG_Lcd_Out_text 
0x0800	0x0E00      	MOVLW       hi_addr(?lstr5_gb8)
0x0802	0x6E63      	MOVWF       FARG_Lcd_Out_text+1 
0x0804	0xDE4F      	RCALL       _Lcd_Out
;gb8.c,163 :: 		Lcd_Out_Cp(txt);
0x0806	0x0E4D      	MOVLW       _txt
0x0808	0x6E60      	MOVWF       FARG_Lcd_Out_CP_text 
0x080A	0x0E00      	MOVLW       hi_addr(_txt)
0x080C	0x6E61      	MOVWF       FARG_Lcd_Out_CP_text+1 
0x080E	0xDDFB      	RCALL       _Lcd_Out_CP
;gb8.c,164 :: 		adcValue = ADC_Read(2);
0x0810	0x0E02      	MOVLW       2
0x0812	0x6E60      	MOVWF       FARG_ADC_Read_channel 
0x0814	0xDCFD      	RCALL       _ADC_Read
;gb8.c,165 :: 		WordToStr(adcValue, adcTxt);
0x0816	0xF060C000  	MOVFF       R0, FARG_WordToStr_input
0x081A	0xF061C001  	MOVFF       R1, FARG_WordToStr_input+1
0x081E	0x0E59      	MOVLW       main_adcTxt_L1
0x0820	0x6E62      	MOVWF       FARG_WordToStr_output 
0x0822	0x0E00      	MOVLW       hi_addr(main_adcTxt_L1)
0x0824	0x6E63      	MOVWF       FARG_WordToStr_output+1 
0x0826	0xDCAC      	RCALL       _WordToStr
;gb8.c,166 :: 		Lcd_Out(2, 1, "ADC2:");
0x0828	0x0E02      	MOVLW       2
0x082A	0x6E60      	MOVWF       FARG_Lcd_Out_row 
0x082C	0x0E01      	MOVLW       1
0x082E	0x6E61      	MOVWF       FARG_Lcd_Out_column 
0x0830	0x0E31      	MOVLW       ?lstr6_gb8
0x0832	0x6E62      	MOVWF       FARG_Lcd_Out_text 
0x0834	0x0E00      	MOVLW       hi_addr(?lstr6_gb8)
0x0836	0x6E63      	MOVWF       FARG_Lcd_Out_text+1 
0x0838	0xDE35      	RCALL       _Lcd_Out
;gb8.c,167 :: 		Lcd_Out_Cp(adcTxt);
0x083A	0x0E59      	MOVLW       main_adcTxt_L1
0x083C	0x6E60      	MOVWF       FARG_Lcd_Out_CP_text 
0x083E	0x0E00      	MOVLW       hi_addr(main_adcTxt_L1)
0x0840	0x6E61      	MOVWF       FARG_Lcd_Out_CP_text+1 
0x0842	0xDDE1      	RCALL       _Lcd_Out_CP
;gb8.c,168 :: 		}
L_main41:
;gb8.c,169 :: 		}
L_main38:
;gb8.c,170 :: 		} else if (RB3_bit == 0) {
0x0844	0xD007      	BRA         L_main42
L_main36:
0x0846	0xB681      	BTFSC       RB3_bit, BitPos(RB3_bit+0) 
0x0848	0xD005      	BRA         L_main43
;gb8.c,171 :: 		rb3Ativo = 1;
0x084A	0x0E01      	MOVLW       1
0x084C	0x6E37      	MOVWF       _rb3Ativo 
0x084E	0x0E00      	MOVLW       0
0x0850	0x6E38      	MOVWF       _rb3Ativo+1 
;gb8.c,172 :: 		previousStateRB3 = 0;
0x0852	0x9454      	BCF         _previousStateRB3, BitPos(_previousStateRB3+0) 
;gb8.c,173 :: 		}
L_main43:
L_main42:
;gb8.c,174 :: 		}
0x0854	0xD6DD      	BRA         L_main10
;gb8.c,175 :: 		}
L_end_main:
0x0856	0xD7FF      	BRA         $+0
; end of _main
0x08A2	0xF015EE10  	LFSR        1, 21
0x08A6	0x0E38      	MOVLW       56
0x08A8	0x6E00      	MOVWF       R0 
0x08AA	0x0E01      	MOVLW       1
0x08AC	0x6E01      	MOVWF       R1 
0x08AE	0x0E58      	MOVLW       88
0x08B0	0x6EF6      	MOVWF       TBLPTR 
0x08B2	0x0E08      	MOVLW       8
0x08B4	0x6EF7      	MOVWF       TBLPTRH 
0x08B6	0x0E00      	MOVLW       0
0x08B8	0x6EF8      	MOVWF       TBLPTRU 
0x08BA	0xF002EC18  	CALL        1072, 0
0x08BE	0x0012      	RETURN      0
;gb8.c,0 :: ?ICS_rb2Ativo
0x0858	0x0000 ;?ICS_rb2Ativo+0
; end of ?ICS_rb2Ativo
;gb8.c,0 :: ?ICS?lstr2_gb8
0x085A	0x4152 ;?ICS?lstr2_gb8+0
0x085C	0x3320 ;?ICS?lstr2_gb8+2
0x085E	0x3538 ;?ICS?lstr2_gb8+4
0x0860	0x3937 ;?ICS?lstr2_gb8+6
0x0862	0x00 ;?ICS?lstr2_gb8+8
; end of ?ICS?lstr2_gb8
;gb8.c,0 :: ?ICS_counter
0x0863	0x00 ;?ICS_counter+0
; end of ?ICS_counter
;gb8.c,0 :: ?ICS?lstr1_gb8
0x0864	0x6546 ;?ICS?lstr1_gb8+0
0x0866	0x696C ;?ICS?lstr1_gb8+2
0x0868	0x6570 ;?ICS?lstr1_gb8+4
0x086A	0x5720 ;?ICS?lstr1_gb8+6
0x086C	0x726F ;?ICS?lstr1_gb8+8
0x086E	0x6D6D ;?ICS?lstr1_gb8+10
0x0870	0x7461 ;?ICS?lstr1_gb8+12
0x0872	0x00 ;?ICS?lstr1_gb8+14
; end of ?ICS?lstr1_gb8
;__Lib_ADC_A_D.c,0 :: ?ICS_vref_mask
0x0873	0x30 ;?ICS_vref_mask+0
; end of ?ICS_vref_mask
;gb8.c,0 :: ?ICS?lstr6_gb8
0x0874	0x4441 ;?ICS?lstr6_gb8+0
0x0876	0x3243 ;?ICS?lstr6_gb8+2
0x0878	0x003A ;?ICS?lstr6_gb8+4
; end of ?ICS?lstr6_gb8
;gb8.c,0 :: ?ICS_rb3Ativo
0x087A	0x0000 ;?ICS_rb3Ativo+0
; end of ?ICS_rb3Ativo
;gb8.c,0 :: ?ICS?lstr4_gb8
0x087C	0x4441 ;?ICS?lstr4_gb8+0
0x087E	0x3243 ;?ICS?lstr4_gb8+2
0x0880	0x003A ;?ICS?lstr4_gb8+4
; end of ?ICS?lstr4_gb8
;gb8.c,0 :: ?ICS?lstr3_gb8
0x0882	0x6F43 ;?ICS?lstr3_gb8+0
0x0884	0x746E ;?ICS?lstr3_gb8+2
0x0886	0x2061 ;?ICS?lstr3_gb8+4
0x0888	0x00 ;?ICS?lstr3_gb8+6
; end of ?ICS?lstr3_gb8
;gb8.c,0 :: ?ICS?lstr5_gb8
0x0889	0x6F43 ;?ICS?lstr5_gb8+0
0x088B	0x746E ;?ICS?lstr5_gb8+2
0x088D	0x2061 ;?ICS?lstr5_gb8+4
0x088F	0x00 ;?ICS?lstr5_gb8+6
; end of ?ICS?lstr5_gb8
;gb8.c,40 :: _segment_codes
0x0890	0x063F ;_segment_codes+0
0x0892	0x4F5B ;_segment_codes+2
0x0894	0x6D66 ;_segment_codes+4
0x0896	0x077D ;_segment_codes+6
0x0898	0x6F7F ;_segment_codes+8
; end of _segment_codes
;gb8.c,14 :: _customChar
0x089A	0x0A00 ;_customChar+0
0x089C	0x000A ;_customChar+2
0x089E	0x0E11 ;_customChar+4
0x08A0	0x0000 ;_customChar+6
; end of _customChar
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x001C      [22]    _Delay_5500us
0x0032      [12]    _Delay_1us
0x003E      [10]    _Delay_50us
0x0048     [124]    _Lcd_Cmd
0x00C4      [54]    _Div_16X16_U
0x00FA      [12]    _Lcd_Chr_CP
0x0106      [12]    _Delay_22us
0x0112      [80]    _Mul_16X16_U
0x0162      [30]    _Div_8X8_U
0x0180     [144]    _WordToStr
0x0210      [62]    _ADC_Read
0x024E     [132]    _displayNumber
0x02D2     [150]    _Lcd_Init
0x0368      [36]    _ADC_Init
0x038C     [114]    _ByteToStr
0x03FE       [8]    _PWM1_Init
0x0406      [42]    _Lcd_Out_CP
0x0430      [16]    ___CC2DW
0x0440      [90]    _Lcd_Chr
0x049A      [10]    _PWM1_Start
0x04A4     [122]    _Lcd_Out
0x051E      [56]    _CreateCustomChar
0x0556     [108]    _PWM1_Set_Duty
0x05C2     [662]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    R0
0x0000       [1]    UART1_Init_tmp_L0
0x0001       [1]    UART1_Read___tmp_UART1_Read_L0
0x0001       [1]    __Lib_Conversions_Adjust_Hex_tmp_L0
0x0001       [1]    R1
0x0002       [2]    strlen_cp_L0
0x0002       [2]    memcpy_dd_L0
0x0002       [2]    memchr_s_L0
0x0002       [1]    R2
0x0002       [2]    memset_pp_L0
0x0003       [1]    R3
0x0003       [2]    Ltrim_original_L0
0x0003       [2]    memmove_tt_L0
0x0004       [2]    memcpy_ss_L0
0x0004       [2]    strncat_cp_L0
0x0004       [1]    R4
0x0004       [2]    strncpy_cp_L0
0x0004       [2]    strcat_cp_L0
0x0004       [2]    strcpy_cp_L0
0x0005       [2]    LongWordToHex_input_half_L0
0x0005       [1]    R5
0x0005       [2]    Ltrim_p_L0
0x0005       [2]    LongIntToHex_input_half_L0
0x0005       [2]    memmove_ff_L0
0x0006       [1]    R6
0x0007       [1]    R7
0x0008       [1]    R8
0x0009       [1]    R9
0x000A       [1]    R10
0x000B       [1]    R11
0x000C       [1]    R12
0x000D       [1]    R13
0x000E       [1]    R14
0x000F       [1]    R15
0x0010       [1]    R16
0x0011       [1]    R17
0x0012       [1]    R18
0x0013       [1]    R19
0x0014       [1]    R20
0x0015       [2]    _rb2Ativo
0x0017       [9]    ?lstr2_gb8
0x0020       [1]    _counter
0x0021      [15]    ?lstr1_gb8
0x0030       [1]    _vref_mask
0x0031       [6]    ?lstr6_gb8
0x0037       [2]    _rb3Ativo
0x0039       [6]    ?lstr4_gb8
0x003F       [7]    ?lstr3_gb8
0x0046       [7]    ?lstr5_gb8
0x004D       [7]    _txt
0x0054       [0]    __Lib_Lcd_cmd_status
0x0054       [0]    _previousStateRB0
0x0054       [0]    _previousStateRB1
0x0054       [0]    _previousStateRB2
0x0054       [0]    _previousStateRB3
0x0055       [4]    _ADC_Get_Sample_Ptr
0x0059       [7]    main_adcTxt_L1
0x0060       [1]    FARG_PWM1_Set_Duty_new_duty
0x0060       [1]    FARG_Lcd_Out_row
0x0060       [2]    FARG_Lcd_Out_CP_text
0x0060       [1]    FARG_Lcd_Chr_row
0x0060       [4]    FARG_PWM1_Init_PWM_Freq
0x0060       [2]    FARG_WordToStr_input
0x0060       [1]    FARG_displayNumber_digit
0x0060       [1]    CreateCustomChar_i_L0
0x0060       [1]    FARG_ByteToStr_input
0x0060       [1]    FARG_ADC_Read_channel
0x0061       [1]    FARG_Lcd_Chr_column
0x0061       [2]    FARG_ByteToStr_output
0x0061       [1]    FARG_displayNumber_position
0x0061       [1]    FARG_Lcd_Out_column
0x0062       [1]    FARG_Lcd_Chr_out_char
0x0062       [1]    Lcd_Out_CP_i_L0
0x0062       [2]    FARG_Lcd_Out_text
0x0062       [2]    FARG_WordToStr_output
0x0063       [1]    ByteToStr_DigitPos_L0
0x0064       [2]    FLOC__ByteToStr
0x0064       [1]    Lcd_Out_i_L0
0x0064       [1]    WordToStr_len_L0
0x0065       [2]    FLOC__WordToStr
0x0067       [1]    FARG_Lcd_Chr_CP_out_char
0x0068       [1]    FARG_Lcd_Cmd_out_char
0x0F80       [1]    PORTA
0x0F81       [0]    RB0_bit
0x0F81       [0]    RB1_bit
0x0F81       [0]    RB2_bit
0x0F81       [0]    RB6_bit
0x0F81       [0]    RB7_bit
0x0F81       [0]    RB3_bit
0x0F81       [0]    RB4_bit
0x0F81       [0]    RB5_bit
0x0F83       [1]    PORTD
0x0F83       [0]    LCD_D5
0x0F83       [0]    LCD_D4
0x0F83       [0]    RD6_bit
0x0F83       [0]    LCD_D7
0x0F83       [0]    RD7_bit
0x0F83       [0]    LCD_D6
0x0F83       [0]    RD4_bit
0x0F83       [0]    RD5_bit
0x0F84       [0]    RE1_bit
0x0F84       [0]    LCD_EN
0x0F84       [0]    LCD_RS
0x0F84       [0]    RE0_bit
0x0F92       [1]    TRISA
0x0F93       [0]    TRISB4_bit
0x0F93       [0]    TRISB0_bit
0x0F93       [0]    TRISB1_bit
0x0F93       [0]    TRISB7_bit
0x0F93       [0]    TRISB2_bit
0x0F93       [0]    TRISB5_bit
0x0F93       [0]    TRISB6_bit
0x0F94       [0]    TRISC2_bit
0x0F95       [1]    TRISD
0x0F95       [0]    TRISD7_bit
0x0F95       [0]    LCD_D7_Direction
0x0F95       [0]    LCD_D5_Direction
0x0F95       [0]    LCD_D4_Direction
0x0F95       [0]    LCD_D6_Direction
0x0F95       [0]    TRISD6_bit
0x0F95       [0]    TRISD4_bit
0x0F95       [0]    TRISD5_bit
0x0F96       [0]    LCD_RS_Direction
0x0F96       [0]    LCD_EN_Direction
0x0F96       [0]    TRISE0_bit
0x0F96       [0]    TRISE1_bit
0x0FB4       [1]    CMCON
0x0FBD       [1]    CCP1CON
0x0FBE       [1]    CCPR1L
0x0FC0       [1]    ADCON2
0x0FC1       [1]    ADCON1
0x0FC2       [1]    ADCON0
0x0FC3       [1]    ADRESL
0x0FC4       [1]    ADRESH
0x0FCA       [1]    T2CON
0x0FCB       [1]    PR2
0x0FD8       [1]    STATUS
0x0FD9       [1]    FSR2L
0x0FDA       [1]    FSR2H
0x0FDE       [1]    POSTINC2
0x0FE0       [1]    BSR
0x0FE1       [1]    FSR1L
0x0FE2       [1]    FSR1H
0x0FE4       [1]    PREINC1
0x0FE6       [1]    POSTINC1
0x0FE7       [1]    INDF1
0x0FE8       [1]    WREG
0x0FE9       [1]    FSR0L
0x0FEA       [1]    FSR0H
0x0FEE       [1]    POSTINC0
0x0FF1       [1]    INTCON2
0x0FF3       [1]    PRODL
0x0FF4       [1]    PRODH
0x0FF5       [1]    TABLAT
0x0FF6       [3]    TBLPTR
0x0FF6       [1]    TBLPTRL
0x0FF7       [1]    TBLPTRH
0x0FF8       [1]    TBLPTRU
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x0858       [2]    ?ICS_rb2Ativo
0x085A       [9]    ?ICS?lstr2_gb8
0x0863       [1]    ?ICS_counter
0x0864      [15]    ?ICS?lstr1_gb8
0x0873       [1]    ?ICS_vref_mask
0x0874       [6]    ?ICS?lstr6_gb8
0x087A       [2]    ?ICS_rb3Ativo
0x087C       [6]    ?ICS?lstr4_gb8
0x0882       [7]    ?ICS?lstr3_gb8
0x0889       [7]    ?ICS?lstr5_gb8
0x0890      [10]    _segment_codes
0x089A       [8]    _customChar
