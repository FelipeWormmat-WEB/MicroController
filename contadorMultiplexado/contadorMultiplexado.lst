;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 8/21/2024 7:36:13 PM
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0xF000EFED  	GOTO        474
0x0004	0x0000      	NOP
0x0006	0x0000      	NOP
0x0008	0xF000EF00  	GOTO        0
0x000C	0x0000      	NOP
0x000E	0x0000      	NOP
0x0010	0x0000      	NOP
0x0012	0x0000      	NOP
0x0014	0x0000      	NOP
0x0016	0x0000      	NOP
0x0018	0xD7F3      	BRA         0
_decodifica:
;contadorMultiplexado.c,82 :: 		char decodifica(char uni)
;contadorMultiplexado.c,84 :: 		switch (uni)
0x001C	0xD01E      	BRA         L_decodifica6
;contadorMultiplexado.c,86 :: 		case 0:
L_decodifica8:
;contadorMultiplexado.c,87 :: 		return 63;
0x001E	0x0E3F      	MOVLW       63
0x0020	0x6E00      	MOVWF       R0 
0x0022	0xD039      	BRA         L_end_decodifica
;contadorMultiplexado.c,90 :: 		case 1:
L_decodifica9:
;contadorMultiplexado.c,91 :: 		return 6;
0x0024	0x0E06      	MOVLW       6
0x0026	0x6E00      	MOVWF       R0 
0x0028	0xD036      	BRA         L_end_decodifica
;contadorMultiplexado.c,94 :: 		case 2:
L_decodifica10:
;contadorMultiplexado.c,95 :: 		return 91;
0x002A	0x0E5B      	MOVLW       91
0x002C	0x6E00      	MOVWF       R0 
0x002E	0xD033      	BRA         L_end_decodifica
;contadorMultiplexado.c,98 :: 		case 3:
L_decodifica11:
;contadorMultiplexado.c,99 :: 		return 79;
0x0030	0x0E4F      	MOVLW       79
0x0032	0x6E00      	MOVWF       R0 
0x0034	0xD030      	BRA         L_end_decodifica
;contadorMultiplexado.c,102 :: 		case 4:
L_decodifica12:
;contadorMultiplexado.c,103 :: 		return 102;
0x0036	0x0E66      	MOVLW       102
0x0038	0x6E00      	MOVWF       R0 
0x003A	0xD02D      	BRA         L_end_decodifica
;contadorMultiplexado.c,106 :: 		case 5:
L_decodifica13:
;contadorMultiplexado.c,107 :: 		return 109;
0x003C	0x0E6D      	MOVLW       109
0x003E	0x6E00      	MOVWF       R0 
0x0040	0xD02A      	BRA         L_end_decodifica
;contadorMultiplexado.c,110 :: 		case 6:
L_decodifica14:
;contadorMultiplexado.c,111 :: 		return 125;
0x0042	0x0E7D      	MOVLW       125
0x0044	0x6E00      	MOVWF       R0 
0x0046	0xD027      	BRA         L_end_decodifica
;contadorMultiplexado.c,114 :: 		case 7:
L_decodifica15:
;contadorMultiplexado.c,115 :: 		return 7;
0x0048	0x0E07      	MOVLW       7
0x004A	0x6E00      	MOVWF       R0 
0x004C	0xD024      	BRA         L_end_decodifica
;contadorMultiplexado.c,118 :: 		case 8:
L_decodifica16:
;contadorMultiplexado.c,119 :: 		return 127;
0x004E	0x0E7F      	MOVLW       127
0x0050	0x6E00      	MOVWF       R0 
0x0052	0xD021      	BRA         L_end_decodifica
;contadorMultiplexado.c,122 :: 		case 9:
L_decodifica17:
;contadorMultiplexado.c,123 :: 		return 111;
0x0054	0x0E6F      	MOVLW       111
0x0056	0x6E00      	MOVWF       R0 
0x0058	0xD01E      	BRA         L_end_decodifica
;contadorMultiplexado.c,125 :: 		}
L_decodifica6:
0x005A	0x5019      	MOVF        FARG_decodifica_uni, 0 
0x005C	0x0A00      	XORLW       0
0x005E	0xE0DF      	BZ          L_decodifica8
0x0060	0x5019      	MOVF        FARG_decodifica_uni, 0 
0x0062	0x0A01      	XORLW       1
0x0064	0xE0DF      	BZ          L_decodifica9
0x0066	0x5019      	MOVF        FARG_decodifica_uni, 0 
0x0068	0x0A02      	XORLW       2
0x006A	0xE0DF      	BZ          L_decodifica10
0x006C	0x5019      	MOVF        FARG_decodifica_uni, 0 
0x006E	0x0A03      	XORLW       3
0x0070	0xE0DF      	BZ          L_decodifica11
0x0072	0x5019      	MOVF        FARG_decodifica_uni, 0 
0x0074	0x0A04      	XORLW       4
0x0076	0xE0DF      	BZ          L_decodifica12
0x0078	0x5019      	MOVF        FARG_decodifica_uni, 0 
0x007A	0x0A05      	XORLW       5
0x007C	0xE0DF      	BZ          L_decodifica13
0x007E	0x5019      	MOVF        FARG_decodifica_uni, 0 
0x0080	0x0A06      	XORLW       6
0x0082	0xE0DF      	BZ          L_decodifica14
0x0084	0x5019      	MOVF        FARG_decodifica_uni, 0 
0x0086	0x0A07      	XORLW       7
0x0088	0xE0DF      	BZ          L_decodifica15
0x008A	0x5019      	MOVF        FARG_decodifica_uni, 0 
0x008C	0x0A08      	XORLW       8
0x008E	0xE0DF      	BZ          L_decodifica16
0x0090	0x5019      	MOVF        FARG_decodifica_uni, 0 
0x0092	0x0A09      	XORLW       9
0x0094	0xE0DF      	BZ          L_decodifica17
;contadorMultiplexado.c,126 :: 		}
L_end_decodifica:
0x0096	0x0012      	RETURN      0
; end of _decodifica
_escreveDisplay:
;contadorMultiplexado.c,55 :: 		void escreveDisplay()
;contadorMultiplexado.c,57 :: 		RA3_bit = 0;
0x0098	0x9680      	BCF         RA3_bit, BitPos(RA3_bit+0) 
;contadorMultiplexado.c,58 :: 		RA2_bit = 0;
0x009A	0x9480      	BCF         RA2_bit, BitPos(RA2_bit+0) 
;contadorMultiplexado.c,59 :: 		RC4_bit = 0;
0x009C	0x9882      	BCF         RC4_bit, BitPos(RC4_bit+0) 
;contadorMultiplexado.c,60 :: 		RC5_bit = 0;
0x009E	0x9A82      	BCF         RC5_bit, BitPos(RC5_bit+0) 
;contadorMultiplexado.c,62 :: 		PORTD = decodifica(unidade);
0x00A0	0xF019C016  	MOVFF       _unidade, FARG_decodifica_uni
0x00A4	0xDFBB      	RCALL       _decodifica
0x00A6	0xFF83C000  	MOVFF       R0, PORTD
;contadorMultiplexado.c,63 :: 		RA3_bit = 1; // liga a unidade
0x00AA	0x8680      	BSF         RA3_bit, BitPos(RA3_bit+0) 
;contadorMultiplexado.c,64 :: 		delay_ms(1);
0x00AC	0x0E07      	MOVLW       7
0x00AE	0x6E0C      	MOVWF       R12, 0
0x00B0	0x0E7D      	MOVLW       125
0x00B2	0x6E0D      	MOVWF       R13, 0
L_escreveDisplay2:
0x00B4	0x2E0D      	DECFSZ      R13, 1, 0
0x00B6	0xD7FE      	BRA         L_escreveDisplay2
0x00B8	0x2E0C      	DECFSZ      R12, 1, 0
0x00BA	0xD7FC      	BRA         L_escreveDisplay2
;contadorMultiplexado.c,66 :: 		RA3_bit = 0; // desliga a unidade
0x00BC	0x9680      	BCF         RA3_bit, BitPos(RA3_bit+0) 
;contadorMultiplexado.c,67 :: 		PORTD = decodifica(dezena);
0x00BE	0xF019C015  	MOVFF       _dezena, FARG_decodifica_uni
0x00C2	0xDFAC      	RCALL       _decodifica
0x00C4	0xFF83C000  	MOVFF       R0, PORTD
;contadorMultiplexado.c,68 :: 		RE2_bit = 1; // liga a dezena
0x00C8	0x8484      	BSF         RE2_bit, BitPos(RE2_bit+0) 
;contadorMultiplexado.c,69 :: 		delay_ms(1);
0x00CA	0x0E07      	MOVLW       7
0x00CC	0x6E0C      	MOVWF       R12, 0
0x00CE	0x0E7D      	MOVLW       125
0x00D0	0x6E0D      	MOVWF       R13, 0
L_escreveDisplay3:
0x00D2	0x2E0D      	DECFSZ      R13, 1, 0
0x00D4	0xD7FE      	BRA         L_escreveDisplay3
0x00D6	0x2E0C      	DECFSZ      R12, 1, 0
0x00D8	0xD7FC      	BRA         L_escreveDisplay3
;contadorMultiplexado.c,71 :: 		RE2_bit = 0; // desliga a dezena
0x00DA	0x9484      	BCF         RE2_bit, BitPos(RE2_bit+0) 
;contadorMultiplexado.c,72 :: 		PORTD = decodifica(centena);
0x00DC	0xF019C017  	MOVFF       _centena, FARG_decodifica_uni
0x00E0	0xDF9D      	RCALL       _decodifica
0x00E2	0xFF83C000  	MOVFF       R0, PORTD
;contadorMultiplexado.c,73 :: 		RC4_bit = 1; // liga a centena
0x00E6	0x8882      	BSF         RC4_bit, BitPos(RC4_bit+0) 
;contadorMultiplexado.c,74 :: 		delay_ms(1);
0x00E8	0x0E07      	MOVLW       7
0x00EA	0x6E0C      	MOVWF       R12, 0
0x00EC	0x0E7D      	MOVLW       125
0x00EE	0x6E0D      	MOVWF       R13, 0
L_escreveDisplay4:
0x00F0	0x2E0D      	DECFSZ      R13, 1, 0
0x00F2	0xD7FE      	BRA         L_escreveDisplay4
0x00F4	0x2E0C      	DECFSZ      R12, 1, 0
0x00F6	0xD7FC      	BRA         L_escreveDisplay4
;contadorMultiplexado.c,76 :: 		RC4_bit = 0; // desliga a centena
0x00F8	0x9882      	BCF         RC4_bit, BitPos(RC4_bit+0) 
;contadorMultiplexado.c,77 :: 		PORTD = decodifica(milhar);
0x00FA	0xF019C018  	MOVFF       _milhar, FARG_decodifica_uni
0x00FE	0xDF8E      	RCALL       _decodifica
0x0100	0xFF83C000  	MOVFF       R0, PORTD
;contadorMultiplexado.c,78 :: 		RC5_bit = 1; // liga a milhar
0x0104	0x8A82      	BSF         RC5_bit, BitPos(RC5_bit+0) 
;contadorMultiplexado.c,79 :: 		delay_ms(1);
0x0106	0x0E07      	MOVLW       7
0x0108	0x6E0C      	MOVWF       R12, 0
0x010A	0x0E7D      	MOVLW       125
0x010C	0x6E0D      	MOVWF       R13, 0
L_escreveDisplay5:
0x010E	0x2E0D      	DECFSZ      R13, 1, 0
0x0110	0xD7FE      	BRA         L_escreveDisplay5
0x0112	0x2E0C      	DECFSZ      R12, 1, 0
0x0114	0xD7FC      	BRA         L_escreveDisplay5
;contadorMultiplexado.c,80 :: 		}
L_end_escreveDisplay:
0x0116	0x0012      	RETURN      0
; end of _escreveDisplay
_crescenteRapido:
;contadorMultiplexado.c,156 :: 		void crescenteRapido()
;contadorMultiplexado.c,158 :: 		if (RB1_bit == 0)
0x0118	0xB281      	BTFSC       RB1_bit, BitPos(RB1_bit+0) 
0x011A	0xD017      	BRA         L_crescenteRapido25
;contadorMultiplexado.c,160 :: 		escreveDisplay();
0x011C	0xDFBD      	RCALL       _escreveDisplay
;contadorMultiplexado.c,161 :: 		if (RB1_bit == 0)
0x011E	0xB281      	BTFSC       RB1_bit, BitPos(RB1_bit+0) 
0x0120	0xD014      	BRA         L_crescenteRapido26
;contadorMultiplexado.c,163 :: 		unidade++;
0x0122	0x2A16      	INCF        _unidade, 1 
;contadorMultiplexado.c,164 :: 		if (unidade == 10)
0x0124	0x5016      	MOVF        _unidade, 0 
0x0126	0x0A0A      	XORLW       10
0x0128	0xE102      	BNZ         L_crescenteRapido27
;contadorMultiplexado.c,166 :: 		unidade = 0;
0x012A	0x6A16      	CLRF        _unidade 
;contadorMultiplexado.c,167 :: 		dezena++;
0x012C	0x2A15      	INCF        _dezena, 1 
;contadorMultiplexado.c,168 :: 		}
L_crescenteRapido27:
;contadorMultiplexado.c,169 :: 		if (dezena == 10)
0x012E	0x5015      	MOVF        _dezena, 0 
0x0130	0x0A0A      	XORLW       10
0x0132	0xE102      	BNZ         L_crescenteRapido28
;contadorMultiplexado.c,171 :: 		dezena = 0;
0x0134	0x6A15      	CLRF        _dezena 
;contadorMultiplexado.c,172 :: 		centena++;
0x0136	0x2A17      	INCF        _centena, 1 
;contadorMultiplexado.c,173 :: 		}
L_crescenteRapido28:
;contadorMultiplexado.c,174 :: 		if (centena == 10)
0x0138	0x5017      	MOVF        _centena, 0 
0x013A	0x0A0A      	XORLW       10
0x013C	0xE102      	BNZ         L_crescenteRapido29
;contadorMultiplexado.c,176 :: 		centena = 0;
0x013E	0x6A17      	CLRF        _centena 
;contadorMultiplexado.c,177 :: 		milhar++;
0x0140	0x2A18      	INCF        _milhar, 1 
;contadorMultiplexado.c,178 :: 		}
L_crescenteRapido29:
;contadorMultiplexado.c,179 :: 		if (milhar == 10)
0x0142	0x5018      	MOVF        _milhar, 0 
0x0144	0x0A0A      	XORLW       10
0x0146	0xB4D8      	BTFSC       STATUS, 2 
;contadorMultiplexado.c,181 :: 		milhar = 0;
0x0148	0x6A18      	CLRF        _milhar 
;contadorMultiplexado.c,182 :: 		}
L_crescenteRapido30:
;contadorMultiplexado.c,183 :: 		}
L_crescenteRapido26:
;contadorMultiplexado.c,184 :: 		}
L_crescenteRapido25:
;contadorMultiplexado.c,185 :: 		}
L_end_crescenteRapido:
0x014A	0x0012      	RETURN      0
; end of _crescenteRapido
_reset:
;contadorMultiplexado.c,187 :: 		void reset()
;contadorMultiplexado.c,189 :: 		if (RB2_bit == 0)
0x014C	0xB481      	BTFSC       RB2_bit, BitPos(RB2_bit+0) 
0x014E	0xD008      	BRA         L_reset31
;contadorMultiplexado.c,191 :: 		while (RB2_bit == 0)
L_reset32:
0x0150	0xB481      	BTFSC       RB2_bit, BitPos(RB2_bit+0) 
0x0152	0xD002      	BRA         L_reset33
;contadorMultiplexado.c,192 :: 		escreveDisplay();
0x0154	0xDFA1      	RCALL       _escreveDisplay
0x0156	0xD7FC      	BRA         L_reset32
L_reset33:
;contadorMultiplexado.c,193 :: 		unidade = 0;
0x0158	0x6A16      	CLRF        _unidade 
;contadorMultiplexado.c,194 :: 		dezena = 0;
0x015A	0x6A15      	CLRF        _dezena 
;contadorMultiplexado.c,195 :: 		centena = 0;
0x015C	0x6A17      	CLRF        _centena 
;contadorMultiplexado.c,196 :: 		milhar = 0;
0x015E	0x6A18      	CLRF        _milhar 
;contadorMultiplexado.c,197 :: 		}
L_reset31:
;contadorMultiplexado.c,198 :: 		}
L_end_reset:
0x0160	0x0012      	RETURN      0
; end of _reset
_setupInicial:
;contadorMultiplexado.c,30 :: 		void setupInicial()
;contadorMultiplexado.c,32 :: 		PORTA = 0; // desliga a porta A
0x0162	0x6A80      	CLRF        PORTA 
;contadorMultiplexado.c,33 :: 		PORTB = 0; // desliga a porta B
0x0164	0x6A81      	CLRF        PORTB 
;contadorMultiplexado.c,34 :: 		PORTC = 0; // desliga a porta C.
0x0166	0x6A82      	CLRF        PORTC 
;contadorMultiplexado.c,35 :: 		PORTD = 0; // desliga a porta D.
0x0168	0x6A83      	CLRF        PORTD 
;contadorMultiplexado.c,36 :: 		PORTE = 0; // desliga a porta E.
0x016A	0x6A84      	CLRF        PORTE 
;contadorMultiplexado.c,38 :: 		TRISA = 0;  // configura o porta como sa?da
0x016C	0x6A92      	CLRF        TRISA 
;contadorMultiplexado.c,39 :: 		TRISB = 7; // define rb0, rb1 e  rb2 como entradas.
0x016E	0x0E07      	MOVLW       7
0x0170	0x6E93      	MOVWF       TRISB 
;contadorMultiplexado.c,40 :: 		TRISC = 0;  // configura o porta como sa?da
0x0172	0x6A94      	CLRF        TRISC 
;contadorMultiplexado.c,41 :: 		TRISD = 0;  // configura o porta como sa?da
0x0174	0x6A95      	CLRF        TRISD 
;contadorMultiplexado.c,42 :: 		TRISE = 0;  // configura o portc como sa?da.
0x0176	0x6A96      	CLRF        TRISE 
;contadorMultiplexado.c,44 :: 		CMCON = 7;   // comparadores desligados.
0x0178	0x0E07      	MOVLW       7
0x017A	0x6EB4      	MOVWF       CMCON 
;contadorMultiplexado.c,45 :: 		ADCON1 = 15; // todas as saidas digitais.
0x017C	0x0E0F      	MOVLW       15
0x017E	0x6EC1      	MOVWF       ADCON1 
;contadorMultiplexado.c,47 :: 		INTCON2 = 0; // liga resistor pull-up do PORTB
0x0180	0x6AF1      	CLRF        INTCON2 
;contadorMultiplexado.c,49 :: 		unidade = 3;
0x0182	0x0E03      	MOVLW       3
0x0184	0x6E16      	MOVWF       _unidade 
;contadorMultiplexado.c,50 :: 		dezena = 2;
0x0186	0x0E02      	MOVLW       2
0x0188	0x6E15      	MOVWF       _dezena 
;contadorMultiplexado.c,51 :: 		centena = 9;
0x018A	0x0E09      	MOVLW       9
0x018C	0x6E17      	MOVWF       _centena 
;contadorMultiplexado.c,52 :: 		milhar = 1;
0x018E	0x0E01      	MOVLW       1
0x0190	0x6E18      	MOVWF       _milhar 
;contadorMultiplexado.c,53 :: 		}
L_end_setupInicial:
0x0192	0x0012      	RETURN      0
; end of _setupInicial
___CC2DW:
;__Lib_System.c,21 :: 		
;__Lib_System.c,23 :: 		
_CC2DL_Loop1:
;__Lib_System.c,24 :: 		
0x0194	0x0009      	TBLRD*+
;__Lib_System.c,25 :: 		
0x0196	0xFFE6CFF5  	MOVFF       TABLAT, POSTINC1
;__Lib_System.c,26 :: 		
0x019A	0x0600      	DECF        R0, 1, 0
;__Lib_System.c,27 :: 		
0x019C	0xE1FB      	BNZ         _CC2DL_Loop1
;__Lib_System.c,28 :: 		
0x019E	0x0601      	DECF        R1, 1, 0
;__Lib_System.c,29 :: 		
0x01A0	0xE1F9      	BNZ         _CC2DL_Loop1
;__Lib_System.c,31 :: 		
L_end___CC2DW:
0x01A2	0x0012      	RETURN      0
; end of ___CC2DW
_crescente:
;contadorMultiplexado.c,128 :: 		void crescente()
;contadorMultiplexado.c,130 :: 		if (RB0_bit == 0)
0x01A4	0xB081      	BTFSC       RB0_bit, BitPos(RB0_bit+0) 
0x01A6	0xD018      	BRA         L_crescente18
;contadorMultiplexado.c,132 :: 		while (RB0_bit == 0)
L_crescente19:
0x01A8	0xB081      	BTFSC       RB0_bit, BitPos(RB0_bit+0) 
0x01AA	0xD002      	BRA         L_crescente20
;contadorMultiplexado.c,133 :: 		escreveDisplay();
0x01AC	0xDF75      	RCALL       _escreveDisplay
0x01AE	0xD7FC      	BRA         L_crescente19
L_crescente20:
;contadorMultiplexado.c,134 :: 		unidade++;
0x01B0	0x2A16      	INCF        _unidade, 1 
;contadorMultiplexado.c,135 :: 		if (unidade == 10)
0x01B2	0x5016      	MOVF        _unidade, 0 
0x01B4	0x0A0A      	XORLW       10
0x01B6	0xE102      	BNZ         L_crescente21
;contadorMultiplexado.c,137 :: 		unidade = 0;
0x01B8	0x6A16      	CLRF        _unidade 
;contadorMultiplexado.c,138 :: 		dezena++;
0x01BA	0x2A15      	INCF        _dezena, 1 
;contadorMultiplexado.c,139 :: 		}
L_crescente21:
;contadorMultiplexado.c,140 :: 		if (dezena == 10)
0x01BC	0x5015      	MOVF        _dezena, 0 
0x01BE	0x0A0A      	XORLW       10
0x01C0	0xE102      	BNZ         L_crescente22
;contadorMultiplexado.c,142 :: 		dezena = 0;
0x01C2	0x6A15      	CLRF        _dezena 
;contadorMultiplexado.c,143 :: 		centena++;
0x01C4	0x2A17      	INCF        _centena, 1 
;contadorMultiplexado.c,144 :: 		}
L_crescente22:
;contadorMultiplexado.c,145 :: 		if (centena == 10)
0x01C6	0x5017      	MOVF        _centena, 0 
0x01C8	0x0A0A      	XORLW       10
0x01CA	0xE102      	BNZ         L_crescente23
;contadorMultiplexado.c,147 :: 		centena = 0;
0x01CC	0x6A17      	CLRF        _centena 
;contadorMultiplexado.c,148 :: 		milhar++;
0x01CE	0x2A18      	INCF        _milhar, 1 
;contadorMultiplexado.c,149 :: 		}
L_crescente23:
;contadorMultiplexado.c,150 :: 		if (milhar == 10)
0x01D0	0x5018      	MOVF        _milhar, 0 
0x01D2	0x0A0A      	XORLW       10
0x01D4	0xB4D8      	BTFSC       STATUS, 2 
;contadorMultiplexado.c,152 :: 		milhar = 0;
0x01D6	0x6A18      	CLRF        _milhar 
;contadorMultiplexado.c,153 :: 		}
L_crescente24:
;contadorMultiplexado.c,154 :: 		}
L_crescente18:
;contadorMultiplexado.c,155 :: 		}
L_end_crescente:
0x01D8	0x0012      	RETURN      0
; end of _crescente
_main:
0x01DA	0x6A15      	CLRF        _dezena 
0x01DC	0x6A16      	CLRF        _unidade 
0x01DE	0x6A17      	CLRF        _centena 
0x01E0	0x6A18      	CLRF        _milhar 
;contadorMultiplexado.c,17 :: 		void main()
;contadorMultiplexado.c,19 :: 		setupInicial();
0x01E2	0xDFBF      	RCALL       _setupInicial
;contadorMultiplexado.c,21 :: 		while (1)
L_main0:
;contadorMultiplexado.c,23 :: 		crescente();
0x01E4	0xDFDF      	RCALL       _crescente
;contadorMultiplexado.c,24 :: 		crescenteRapido();
0x01E6	0xDF98      	RCALL       _crescenteRapido
;contadorMultiplexado.c,25 :: 		escreveDisplay();
0x01E8	0xDF57      	RCALL       _escreveDisplay
;contadorMultiplexado.c,26 :: 		reset();
0x01EA	0xDFB0      	RCALL       _reset
;contadorMultiplexado.c,27 :: 		}
0x01EC	0xD7FB      	BRA         L_main0
;contadorMultiplexado.c,28 :: 		}
L_end_main:
0x01EE	0xD7FF      	BRA         $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x001C     [124]    _decodifica
0x0098     [128]    _escreveDisplay
0x0118      [52]    _crescenteRapido
0x014C      [22]    _reset
0x0162      [50]    _setupInicial
0x0194      [16]    ___CC2DW
0x01A4      [54]    _crescente
0x01DA      [22]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    R0
0x0001       [1]    R1
0x0002       [1]    R2
0x0003       [1]    R3
0x0004       [1]    R4
0x0005       [1]    R5
0x0006       [1]    R6
0x0007       [1]    R7
0x0008       [1]    R8
0x0009       [1]    R9
0x000A       [1]    R10
0x000B       [1]    R11
0x000C       [1]    R12
0x000D       [1]    R13
0x000E       [1]    R14
0x000F       [1]    R15
0x0010       [1]    R16
0x0011       [1]    R17
0x0012       [1]    R18
0x0013       [1]    R19
0x0014       [1]    R20
0x0015       [1]    _dezena
0x0016       [1]    _unidade
0x0017       [1]    _centena
0x0018       [1]    _milhar
0x0019       [1]    FARG_decodifica_uni
0x0F80       [1]    PORTA
0x0F80       [0]    RA2_bit
0x0F80       [0]    RA3_bit
0x0F81       [0]    RB2_bit
0x0F81       [0]    RB0_bit
0x0F81       [0]    RB1_bit
0x0F81       [1]    PORTB
0x0F82       [0]    RC5_bit
0x0F82       [1]    PORTC
0x0F82       [0]    RC4_bit
0x0F83       [1]    PORTD
0x0F84       [1]    PORTE
0x0F84       [0]    RE2_bit
0x0F92       [1]    TRISA
0x0F93       [1]    TRISB
0x0F94       [1]    TRISC
0x0F95       [1]    TRISD
0x0F96       [1]    TRISE
0x0FB4       [1]    CMCON
0x0FC1       [1]    ADCON1
0x0FD8       [1]    STATUS
0x0FD9       [1]    FSR2L
0x0FDA       [1]    FSR2H
0x0FDE       [1]    POSTINC2
0x0FE0       [1]    BSR
0x0FE1       [1]    FSR1L
0x0FE2       [1]    FSR1H
0x0FE4       [1]    PREINC1
0x0FE6       [1]    POSTINC1
0x0FE7       [1]    INDF1
0x0FE8       [1]    WREG
0x0FE9       [1]    FSR0L
0x0FEA       [1]    FSR0H
0x0FEE       [1]    POSTINC0
0x0FF1       [1]    INTCON2
0x0FF3       [1]    PRODL
0x0FF4       [1]    PRODH
0x0FF5       [1]    TABLAT
0x0FF6       [1]    TBLPTRL
0x0FF7       [1]    TBLPTRH
0x0FF8       [1]    TBLPTRU
