;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 10/1/2024 8:09:24 PM
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0xF003EFA9  	GOTO        1874
_interrupt:
;ProvaGA.c,69 :: 		void interrupt(){
0x0008	0xF015C000  	MOVFF       R0, 21
;ProvaGA.c,70 :: 		if(tmr0if_bit == 1){
0x000C	0xA4F2      	BTFSS       TMR0IF_bit, BitPos(TMR0IF_bit+0) 
0x000E	0xD019      	BRA         L_interrupt22
;ProvaGA.c,71 :: 		tmr0if_bit = 0;
0x0010	0x94F2      	BCF         TMR0IF_bit, BitPos(TMR0IF_bit+0) 
;ProvaGA.c,72 :: 		count_interrupt++;
0x0012	0x4A3A      	INFSNZ      _count_interrupt, 1 
0x0014	0x2A3B      	INCF        _count_interrupt+1, 1 
;ProvaGA.c,73 :: 		if(count_interrupt == 38){
0x0016	0x0E00      	MOVLW       0
0x0018	0x183B      	XORWF       _count_interrupt+1, 0 
0x001A	0xE102      	BNZ         L__interrupt40
0x001C	0x0E26      	MOVLW       38
0x001E	0x183A      	XORWF       _count_interrupt, 0 
L__interrupt40:
0x0020	0xE110      	BNZ         L_interrupt23
;ProvaGA.c,74 :: 		if(CountInt <= 60){
0x0022	0x0E80      	MOVLW       128
0x0024	0x6E00      	MOVWF       R0 
0x0026	0x0E80      	MOVLW       128
0x0028	0x1844      	XORWF       _CountInt+1, 0 
0x002A	0x5C00      	SUBWF       R0, 0 
0x002C	0xE102      	BNZ         L__interrupt41
0x002E	0x5043      	MOVF        _CountInt, 0 
0x0030	0x083C      	SUBLW       60
L__interrupt41:
0x0032	0xE303      	BNC         L_interrupt24
;ProvaGA.c,75 :: 		CountInt++;
0x0034	0x4A43      	INFSNZ      _CountInt, 1 
0x0036	0x2A44      	INCF        _CountInt+1, 1 
;ProvaGA.c,76 :: 		} else {
0x0038	0xD002      	BRA         L_interrupt25
L_interrupt24:
;ProvaGA.c,77 :: 		CountInt = 0;
0x003A	0x6A43      	CLRF        _CountInt 
0x003C	0x6A44      	CLRF        _CountInt+1 
;ProvaGA.c,78 :: 		}
L_interrupt25:
;ProvaGA.c,79 :: 		count_interrupt = 0;
0x003E	0x6A3A      	CLRF        _count_interrupt 
0x0040	0x6A3B      	CLRF        _count_interrupt+1 
;ProvaGA.c,80 :: 		}
L_interrupt23:
;ProvaGA.c,81 :: 		}
L_interrupt22:
;ProvaGA.c,82 :: 		}
L_end_interrupt:
L__interrupt39:
0x0042	0xF000C015  	MOVFF       21, R0
0x0046	0x0011      	RETFIE      1
; end of _interrupt
_Delay_5500us:
;__Lib_Delays.c,31 :: 		void Delay_5500us() {
;__Lib_Delays.c,32 :: 		Delay_us(5500);
0x0048	0x0E24      	MOVLW       36
0x004A	0x6E0C      	MOVWF       R12, 0
0x004C	0x0EB5      	MOVLW       181
0x004E	0x6E0D      	MOVWF       R13, 0
L_Delay_5500us5:
0x0050	0x2E0D      	DECFSZ      R13, 1, 0
0x0052	0xD7FE      	BRA         L_Delay_5500us5
0x0054	0x2E0C      	DECFSZ      R12, 1, 0
0x0056	0xD7FC      	BRA         L_Delay_5500us5
0x0058	0x0000      	NOP
0x005A	0x0000      	NOP
;__Lib_Delays.c,33 :: 		}
L_end_Delay_5500us:
0x005C	0x0012      	RETURN      0
; end of _Delay_5500us
_Delay_50us:
;__Lib_Delays.c,19 :: 		void Delay_50us() {
;__Lib_Delays.c,20 :: 		Delay_us(50);
0x005E	0x0E53      	MOVLW       83
0x0060	0x6E0D      	MOVWF       R13, 0
L_Delay_50us2:
0x0062	0x2E0D      	DECFSZ      R13, 1, 0
0x0064	0xD7FE      	BRA         L_Delay_50us2
;__Lib_Delays.c,21 :: 		}
L_end_Delay_50us:
0x0066	0x0012      	RETURN      0
; end of _Delay_50us
_Delay_1us:
;__Lib_Delays.c,7 :: 		void Delay_1us() {
;__Lib_Delays.c,8 :: 		Delay_us(1);
0x0068	0x0000      	NOP
0x006A	0x0000      	NOP
0x006C	0x0000      	NOP
0x006E	0x0000      	NOP
0x0070	0x0000      	NOP
;__Lib_Delays.c,9 :: 		}
L_end_Delay_1us:
0x0072	0x0012      	RETURN      0
; end of _Delay_1us
_Lcd_Cmd:
;__Lib_Lcd.c,18 :: 		
;__Lib_Lcd.c,20 :: 		
0x0074	0xBE7F      	BTFSC       FARG_Lcd_Cmd_out_char, 7 
0x0076	0xD002      	BRA         L__Lcd_Cmd21
0x0078	0x9E81      	BCF         LCD_D7, BitPos(LCD_D7+0) 
0x007A	0xD001      	BRA         L__Lcd_Cmd22
L__Lcd_Cmd21:
0x007C	0x8E81      	BSF         LCD_D7, BitPos(LCD_D7+0) 
L__Lcd_Cmd22:
;__Lib_Lcd.c,21 :: 		
0x007E	0xBC7F      	BTFSC       FARG_Lcd_Cmd_out_char, 6 
0x0080	0xD002      	BRA         L__Lcd_Cmd23
0x0082	0x9C81      	BCF         LCD_D6, BitPos(LCD_D6+0) 
0x0084	0xD001      	BRA         L__Lcd_Cmd24
L__Lcd_Cmd23:
0x0086	0x8C81      	BSF         LCD_D6, BitPos(LCD_D6+0) 
L__Lcd_Cmd24:
;__Lib_Lcd.c,22 :: 		
0x0088	0xBA7F      	BTFSC       FARG_Lcd_Cmd_out_char, 5 
0x008A	0xD002      	BRA         L__Lcd_Cmd25
0x008C	0x9A81      	BCF         LCD_D5, BitPos(LCD_D5+0) 
0x008E	0xD001      	BRA         L__Lcd_Cmd26
L__Lcd_Cmd25:
0x0090	0x8A81      	BSF         LCD_D5, BitPos(LCD_D5+0) 
L__Lcd_Cmd26:
;__Lib_Lcd.c,23 :: 		
0x0092	0xB87F      	BTFSC       FARG_Lcd_Cmd_out_char, 4 
0x0094	0xD002      	BRA         L__Lcd_Cmd27
0x0096	0x9881      	BCF         LCD_D4, BitPos(LCD_D4+0) 
0x0098	0xD001      	BRA         L__Lcd_Cmd28
L__Lcd_Cmd27:
0x009A	0x8881      	BSF         LCD_D4, BitPos(LCD_D4+0) 
L__Lcd_Cmd28:
;__Lib_Lcd.c,25 :: 		
0x009C	0xB057      	BTFSC       __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0) 
0x009E	0xD002      	BRA         L__Lcd_Cmd29
0x00A0	0x8284      	BSF         LCD_RS, BitPos(LCD_RS+0) 
0x00A2	0xD001      	BRA         L__Lcd_Cmd30
L__Lcd_Cmd29:
0x00A4	0x9284      	BCF         LCD_RS, BitPos(LCD_RS+0) 
L__Lcd_Cmd30:
;__Lib_Lcd.c,28 :: 		
0x00A6	0x8084      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,29 :: 		
0x00A8	0xDFDF      	RCALL       _Delay_1us
;__Lib_Lcd.c,30 :: 		
0x00AA	0x9084      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,33 :: 		
0x00AC	0xB67F      	BTFSC       FARG_Lcd_Cmd_out_char, 3 
0x00AE	0xD002      	BRA         L__Lcd_Cmd31
0x00B0	0x9E81      	BCF         LCD_D7, BitPos(LCD_D7+0) 
0x00B2	0xD001      	BRA         L__Lcd_Cmd32
L__Lcd_Cmd31:
0x00B4	0x8E81      	BSF         LCD_D7, BitPos(LCD_D7+0) 
L__Lcd_Cmd32:
;__Lib_Lcd.c,34 :: 		
0x00B6	0xB47F      	BTFSC       FARG_Lcd_Cmd_out_char, 2 
0x00B8	0xD002      	BRA         L__Lcd_Cmd33
0x00BA	0x9C81      	BCF         LCD_D6, BitPos(LCD_D6+0) 
0x00BC	0xD001      	BRA         L__Lcd_Cmd34
L__Lcd_Cmd33:
0x00BE	0x8C81      	BSF         LCD_D6, BitPos(LCD_D6+0) 
L__Lcd_Cmd34:
;__Lib_Lcd.c,35 :: 		
0x00C0	0xB27F      	BTFSC       FARG_Lcd_Cmd_out_char, 1 
0x00C2	0xD002      	BRA         L__Lcd_Cmd35
0x00C4	0x9A81      	BCF         LCD_D5, BitPos(LCD_D5+0) 
0x00C6	0xD001      	BRA         L__Lcd_Cmd36
L__Lcd_Cmd35:
0x00C8	0x8A81      	BSF         LCD_D5, BitPos(LCD_D5+0) 
L__Lcd_Cmd36:
;__Lib_Lcd.c,36 :: 		
0x00CA	0xB07F      	BTFSC       FARG_Lcd_Cmd_out_char, 0 
0x00CC	0xD002      	BRA         L__Lcd_Cmd37
0x00CE	0x9881      	BCF         LCD_D4, BitPos(LCD_D4+0) 
0x00D0	0xD001      	BRA         L__Lcd_Cmd38
L__Lcd_Cmd37:
0x00D2	0x8881      	BSF         LCD_D4, BitPos(LCD_D4+0) 
L__Lcd_Cmd38:
;__Lib_Lcd.c,38 :: 		
0x00D4	0xB057      	BTFSC       __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0) 
0x00D6	0xD002      	BRA         L__Lcd_Cmd39
0x00D8	0x8284      	BSF         LCD_RS, BitPos(LCD_RS+0) 
0x00DA	0xD001      	BRA         L__Lcd_Cmd40
L__Lcd_Cmd39:
0x00DC	0x9284      	BCF         LCD_RS, BitPos(LCD_RS+0) 
L__Lcd_Cmd40:
;__Lib_Lcd.c,40 :: 		
0x00DE	0x8084      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,41 :: 		
0x00E0	0xDFC3      	RCALL       _Delay_1us
;__Lib_Lcd.c,42 :: 		
0x00E2	0x9084      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,44 :: 		
0x00E4	0xA057      	BTFSS       __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0) 
0x00E6	0xD002      	BRA         L_Lcd_Cmd0
;__Lib_Lcd.c,45 :: 		
0x00E8	0xDFAF      	RCALL       _Delay_5500us
0x00EA	0xD001      	BRA         L_Lcd_Cmd1
L_Lcd_Cmd0:
;__Lib_Lcd.c,47 :: 		
0x00EC	0xDFB8      	RCALL       _Delay_50us
L_Lcd_Cmd1:
;__Lib_Lcd.c,48 :: 		
L_end_Lcd_Cmd:
0x00EE	0x0012      	RETURN      0
; end of _Lcd_Cmd
_Div_16X16_U:
;__Lib_Math.c,102 :: 		
;__Lib_Math.c,109 :: 		
0x00F0	0x6A08      	CLRF        R8, 0
;__Lib_Math.c,110 :: 		
0x00F2	0x6A09      	CLRF        R9, 0
;__Lib_Math.c,111 :: 		
0x00F4	0x0E10      	MOVLW       16
;__Lib_Math.c,112 :: 		
0x00F6	0x6E0C      	MOVWF       R12, 0
;__Lib_Math.c,113 :: 		
0x00F8	0x3401      	RLCF        R1, 0, 0
;__Lib_Math.c,114 :: 		
0x00FA	0x3608      	RLCF        R8, 1, 0
;__Lib_Math.c,115 :: 		
0x00FC	0x3609      	RLCF        R9, 1, 0
;__Lib_Math.c,116 :: 		
0x00FE	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,117 :: 		
0x0100	0x5E08      	SUBWF       R8, 1, 0
;__Lib_Math.c,118 :: 		
0x0102	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,119 :: 		
0x0104	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,120 :: 		
0x0106	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,121 :: 		
0x0108	0x5E09      	SUBWF       R9, 1, 0
;__Lib_Math.c,122 :: 		
0x010A	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,123 :: 		
0x010C	0xD007      	BRA         $+16
;__Lib_Math.c,124 :: 		
0x010E	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,125 :: 		
0x0110	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,126 :: 		
0x0112	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,127 :: 		
0x0114	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,128 :: 		
0x0116	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,129 :: 		
0x0118	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,130 :: 		
0x011A	0x90D8      	BCF         STATUS, 0, 0
;__Lib_Math.c,131 :: 		
0x011C	0x3600      	RLCF        R0, 1, 0
;__Lib_Math.c,132 :: 		
0x011E	0x3601      	RLCF        R1, 1, 0
;__Lib_Math.c,133 :: 		
0x0120	0x2E0C      	DECFSZ      R12, 1, 0
;__Lib_Math.c,134 :: 		
0x0122	0xD7EA      	BRA         $-42
;__Lib_Math.c,136 :: 		
L_end_Div_16X16_U:
0x0124	0x0012      	RETURN      0
; end of _Div_16X16_U
_Lcd_Chr_CP:
;__Lib_Lcd.c,50 :: 		
;__Lib_Lcd.c,52 :: 		
0x0126	0x9057      	BCF         __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0) 
;__Lib_Lcd.c,53 :: 		
0x0128	0xF07FC078  	MOVFF       FARG_Lcd_Chr_CP_out_char, FARG_Lcd_Cmd_out_char
0x012C	0xDFA3      	RCALL       _Lcd_Cmd
;__Lib_Lcd.c,54 :: 		
0x012E	0x8057      	BSF         __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0) 
;__Lib_Lcd.c,55 :: 		
L_end_Lcd_Chr_CP:
0x0130	0x0012      	RETURN      0
; end of _Lcd_Chr_CP
_WordToStr:
;__Lib_Conversions.c,98 :: 		
;__Lib_Conversions.c,103 :: 		
0x0132	0x6A7C      	CLRF        WordToStr_len_L0 
L_WordToStr11:
0x0134	0x0E05      	MOVLW       5
0x0136	0x5C7C      	SUBWF       WordToStr_len_L0, 0 
0x0138	0xE20A      	BC          L_WordToStr12
;__Lib_Conversions.c,104 :: 		
0x013A	0x507C      	MOVF        WordToStr_len_L0, 0 
0x013C	0x247A      	ADDWF       FARG_WordToStr_output, 0 
0x013E	0x6EE1      	MOVWF       FSR1L 
0x0140	0x0E00      	MOVLW       0
0x0142	0x207B      	ADDWFC      FARG_WordToStr_output+1, 0 
0x0144	0x6EE2      	MOVWF       FSR1L+1 
0x0146	0x0E20      	MOVLW       32
0x0148	0x6EE6      	MOVWF       POSTINC1 
;__Lib_Conversions.c,103 :: 		
0x014A	0x2A7C      	INCF        WordToStr_len_L0, 1 
;__Lib_Conversions.c,104 :: 		
0x014C	0xD7F3      	BRA         L_WordToStr11
L_WordToStr12:
;__Lib_Conversions.c,105 :: 		
0x014E	0x507C      	MOVF        WordToStr_len_L0, 0 
0x0150	0x247A      	ADDWF       FARG_WordToStr_output, 0 
0x0152	0x6EE1      	MOVWF       FSR1L 
0x0154	0x0E00      	MOVLW       0
0x0156	0x207B      	ADDWFC      FARG_WordToStr_output+1, 0 
0x0158	0x6EE2      	MOVWF       FSR1L+1 
0x015A	0x6AE6      	CLRF        POSTINC1 
0x015C	0x067C      	DECF        WordToStr_len_L0, 1 
;__Lib_Conversions.c,107 :: 		
L_WordToStr14:
;__Lib_Conversions.c,108 :: 		
0x015E	0x507C      	MOVF        WordToStr_len_L0, 0 
0x0160	0x247A      	ADDWF       FARG_WordToStr_output, 0 
0x0162	0x6E7D      	MOVWF       FLOC__WordToStr 
0x0164	0x0E00      	MOVLW       0
0x0166	0x207B      	ADDWFC      FARG_WordToStr_output+1, 0 
0x0168	0x6E7E      	MOVWF       FLOC__WordToStr+1 
0x016A	0x0E0A      	MOVLW       10
0x016C	0x6E04      	MOVWF       R4 
0x016E	0x0E00      	MOVLW       0
0x0170	0x6E05      	MOVWF       R5 
0x0172	0xF000C078  	MOVFF       FARG_WordToStr_input, R0
0x0176	0xF001C079  	MOVFF       FARG_WordToStr_input+1, R1
0x017A	0xDFBA      	RCALL       _Div_16X16_U
0x017C	0xF000C008  	MOVFF       R8, R0
0x0180	0xF001C009  	MOVFF       R9, R1
0x0184	0x0E30      	MOVLW       48
0x0186	0x2600      	ADDWF       R0, 1 
0x0188	0xFFE1C07D  	MOVFF       FLOC__WordToStr, FSR1L
0x018C	0xFFE2C07E  	MOVFF       FLOC__WordToStr+1, FSR1H
0x0190	0xFFE6C000  	MOVFF       R0, POSTINC1
;__Lib_Conversions.c,109 :: 		
0x0194	0x0E0A      	MOVLW       10
0x0196	0x6E04      	MOVWF       R4 
0x0198	0x0E00      	MOVLW       0
0x019A	0x6E05      	MOVWF       R5 
0x019C	0xF000C078  	MOVFF       FARG_WordToStr_input, R0
0x01A0	0xF001C079  	MOVFF       FARG_WordToStr_input+1, R1
0x01A4	0xDFA5      	RCALL       _Div_16X16_U
0x01A6	0xF078C000  	MOVFF       R0, FARG_WordToStr_input
0x01AA	0xF079C001  	MOVFF       R1, FARG_WordToStr_input+1
;__Lib_Conversions.c,110 :: 		
0x01AE	0x0E00      	MOVLW       0
0x01B0	0x1801      	XORWF       R1, 0 
0x01B2	0xE102      	BNZ         L__WordToStr379
0x01B4	0x0E00      	MOVLW       0
0x01B6	0x1800      	XORWF       R0, 0 
L__WordToStr379:
0x01B8	0xE101      	BNZ         L_WordToStr16
;__Lib_Conversions.c,111 :: 		
0x01BA	0xD002      	BRA         L_WordToStr15
L_WordToStr16:
;__Lib_Conversions.c,112 :: 		
0x01BC	0x067C      	DECF        WordToStr_len_L0, 1 
;__Lib_Conversions.c,113 :: 		
0x01BE	0xD7CF      	BRA         L_WordToStr14
L_WordToStr15:
;__Lib_Conversions.c,114 :: 		
L_end_WordToStr:
0x01C0	0x0012      	RETURN      0
; end of _WordToStr
_Lcd_Out:
;__Lib_Lcd.c,184 :: 		
;__Lib_Lcd.c,187 :: 		
0x01C2	0xD00F      	BRA         L_Lcd_Out11
;__Lib_Lcd.c,188 :: 		
L_Lcd_Out13:
0x01C4	0x0E80      	MOVLW       128
0x01C6	0x6E6E      	MOVWF       FARG_Lcd_Out_row 
0x01C8	0xD019      	BRA         L_Lcd_Out12
;__Lib_Lcd.c,189 :: 		
L_Lcd_Out14:
0x01CA	0x0EC0      	MOVLW       192
0x01CC	0x6E6E      	MOVWF       FARG_Lcd_Out_row 
0x01CE	0xD016      	BRA         L_Lcd_Out12
;__Lib_Lcd.c,190 :: 		
L_Lcd_Out15:
0x01D0	0x0E94      	MOVLW       148
0x01D2	0x6E6E      	MOVWF       FARG_Lcd_Out_row 
0x01D4	0xD013      	BRA         L_Lcd_Out12
;__Lib_Lcd.c,191 :: 		
L_Lcd_Out16:
0x01D6	0x0ED4      	MOVLW       212
0x01D8	0x6E6E      	MOVWF       FARG_Lcd_Out_row 
0x01DA	0xD010      	BRA         L_Lcd_Out12
;__Lib_Lcd.c,192 :: 		
L_Lcd_Out17:
0x01DC	0x0E80      	MOVLW       128
0x01DE	0x6E6E      	MOVWF       FARG_Lcd_Out_row 
;__Lib_Lcd.c,193 :: 		
0x01E0	0xD00D      	BRA         L_Lcd_Out12
L_Lcd_Out11:
0x01E2	0x506E      	MOVF        FARG_Lcd_Out_row, 0 
0x01E4	0x0A01      	XORLW       1
0x01E6	0xE0EE      	BZ          L_Lcd_Out13
0x01E8	0x506E      	MOVF        FARG_Lcd_Out_row, 0 
0x01EA	0x0A02      	XORLW       2
0x01EC	0xE0EE      	BZ          L_Lcd_Out14
0x01EE	0x506E      	MOVF        FARG_Lcd_Out_row, 0 
0x01F0	0x0A03      	XORLW       3
0x01F2	0xE0EE      	BZ          L_Lcd_Out15
0x01F4	0x506E      	MOVF        FARG_Lcd_Out_row, 0 
0x01F6	0x0A04      	XORLW       4
0x01F8	0xE0EE      	BZ          L_Lcd_Out16
0x01FA	0xD7F0      	BRA         L_Lcd_Out17
L_Lcd_Out12:
;__Lib_Lcd.c,194 :: 		
0x01FC	0x046F      	DECF        FARG_Lcd_Out_column, 0 
0x01FE	0x6E00      	MOVWF       R0 
0x0200	0x506E      	MOVF        FARG_Lcd_Out_row, 0 
0x0202	0x2600      	ADDWF       R0, 1 
0x0204	0xF06EC000  	MOVFF       R0, FARG_Lcd_Out_row
;__Lib_Lcd.c,196 :: 		
0x0208	0xF07FC000  	MOVFF       R0, FARG_Lcd_Cmd_out_char
0x020C	0xDF33      	RCALL       _Lcd_Cmd
;__Lib_Lcd.c,197 :: 		
0x020E	0x9057      	BCF         __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0) 
;__Lib_Lcd.c,198 :: 		
0x0210	0x6A72      	CLRF        Lcd_Out_i_L0 
;__Lib_Lcd.c,199 :: 		
L_Lcd_Out18:
0x0212	0x5072      	MOVF        Lcd_Out_i_L0, 0 
0x0214	0x2470      	ADDWF       FARG_Lcd_Out_text, 0 
0x0216	0x6EE9      	MOVWF       FSR0L 
0x0218	0x0E00      	MOVLW       0
0x021A	0x2071      	ADDWFC      FARG_Lcd_Out_text+1, 0 
0x021C	0x6EEA      	MOVWF       FSR0L+1 
0x021E	0x52EE      	MOVF        POSTINC0, 1 
0x0220	0xE00B      	BZ          L_Lcd_Out19
;__Lib_Lcd.c,200 :: 		
0x0222	0x5072      	MOVF        Lcd_Out_i_L0, 0 
0x0224	0x2470      	ADDWF       FARG_Lcd_Out_text, 0 
0x0226	0x6EE9      	MOVWF       FSR0L 
0x0228	0x0E00      	MOVLW       0
0x022A	0x2071      	ADDWFC      FARG_Lcd_Out_text+1, 0 
0x022C	0x6EEA      	MOVWF       FSR0L+1 
0x022E	0xF078CFEE  	MOVFF       POSTINC0, FARG_Lcd_Chr_CP_out_char
0x0232	0xDF79      	RCALL       _Lcd_Chr_CP
0x0234	0x2A72      	INCF        Lcd_Out_i_L0, 1 
0x0236	0xD7ED      	BRA         L_Lcd_Out18
L_Lcd_Out19:
;__Lib_Lcd.c,201 :: 		
0x0238	0x8057      	BSF         __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0) 
;__Lib_Lcd.c,202 :: 		
L_end_Lcd_Out:
0x023A	0x0012      	RETURN      0
; end of _Lcd_Out
_Lcd_Out_CP:
;__Lib_Lcd.c,57 :: 		
;__Lib_Lcd.c,59 :: 		
0x023C	0x6A70      	CLRF        Lcd_Out_CP_i_L0 
;__Lib_Lcd.c,60 :: 		
L_Lcd_Out_CP2:
0x023E	0x5070      	MOVF        Lcd_Out_CP_i_L0, 0 
0x0240	0x246E      	ADDWF       FARG_Lcd_Out_CP_text, 0 
0x0242	0x6EE9      	MOVWF       FSR0L 
0x0244	0x0E00      	MOVLW       0
0x0246	0x206F      	ADDWFC      FARG_Lcd_Out_CP_text+1, 0 
0x0248	0x6EEA      	MOVWF       FSR0L+1 
0x024A	0x52EE      	MOVF        POSTINC0, 1 
0x024C	0xE00B      	BZ          L_Lcd_Out_CP3
;__Lib_Lcd.c,61 :: 		
0x024E	0x5070      	MOVF        Lcd_Out_CP_i_L0, 0 
0x0250	0x246E      	ADDWF       FARG_Lcd_Out_CP_text, 0 
0x0252	0x6EE9      	MOVWF       FSR0L 
0x0254	0x0E00      	MOVLW       0
0x0256	0x206F      	ADDWFC      FARG_Lcd_Out_CP_text+1, 0 
0x0258	0x6EEA      	MOVWF       FSR0L+1 
0x025A	0xF078CFEE  	MOVFF       POSTINC0, FARG_Lcd_Chr_CP_out_char
0x025E	0xDF63      	RCALL       _Lcd_Chr_CP
0x0260	0x2A70      	INCF        Lcd_Out_CP_i_L0, 1 
;__Lib_Lcd.c,62 :: 		
0x0262	0xD7ED      	BRA         L_Lcd_Out_CP2
L_Lcd_Out_CP3:
;__Lib_Lcd.c,63 :: 		
L_end_Lcd_Out_CP:
0x0264	0x0012      	RETURN      0
; end of _Lcd_Out_CP
_IntToStr:
;__Lib_Conversions.c,195 :: 		
;__Lib_Conversions.c,201 :: 		
0x0266	0x6A74      	CLRF        IntToStr_negative_L0 
0x0268	0x6A75      	CLRF        IntToStr_negative_L0+1 
;__Lib_Conversions.c,202 :: 		
0x026A	0xF076C06E  	MOVFF       FARG_IntToStr_input, IntToStr_inword_L0
0x026E	0xF077C06F  	MOVFF       FARG_IntToStr_input+1, IntToStr_inword_L0+1
;__Lib_Conversions.c,203 :: 		
0x0272	0x0E80      	MOVLW       128
0x0274	0x186F      	XORWF       FARG_IntToStr_input+1, 0 
0x0276	0x6E00      	MOVWF       R0 
0x0278	0x0E80      	MOVLW       128
0x027A	0x5C00      	SUBWF       R0, 0 
0x027C	0xE102      	BNZ         L__IntToStr387
0x027E	0x0E00      	MOVLW       0
0x0280	0x5C6E      	SUBWF       FARG_IntToStr_input, 0 
L__IntToStr387:
0x0282	0xE20B      	BC          L_IntToStr37
;__Lib_Conversions.c,204 :: 		
0x0284	0x0E01      	MOVLW       1
0x0286	0x6E74      	MOVWF       IntToStr_negative_L0 
0x0288	0x0E00      	MOVLW       0
0x028A	0x6E75      	MOVWF       IntToStr_negative_L0+1 
;__Lib_Conversions.c,205 :: 		
0x028C	0x506E      	MOVF        FARG_IntToStr_input, 0 
0x028E	0x0800      	SUBLW       0
0x0290	0x6E76      	MOVWF       IntToStr_inword_L0 
0x0292	0xF077C06F  	MOVFF       FARG_IntToStr_input+1, IntToStr_inword_L0+1
0x0296	0x0E00      	MOVLW       0
0x0298	0x5677      	SUBFWB      IntToStr_inword_L0+1, 1 
;__Lib_Conversions.c,206 :: 		
L_IntToStr37:
;__Lib_Conversions.c,207 :: 		
0x029A	0xF078C076  	MOVFF       IntToStr_inword_L0, FARG_WordToStr_input
0x029E	0xF079C077  	MOVFF       IntToStr_inword_L0+1, FARG_WordToStr_input+1
0x02A2	0xF07AC070  	MOVFF       FARG_IntToStr_output, FARG_WordToStr_output
0x02A6	0xF07BC071  	MOVFF       FARG_IntToStr_output+1, FARG_WordToStr_output+1
0x02AA	0xDF43      	RCALL       _WordToStr
;__Lib_Conversions.c,209 :: 		
0x02AC	0x0E06      	MOVLW       6
0x02AE	0x6E72      	MOVWF       IntToStr_i_L0 
0x02B0	0x0E00      	MOVLW       0
0x02B2	0x6E73      	MOVWF       IntToStr_i_L0+1 
;__Lib_Conversions.c,210 :: 		
L_IntToStr38:
0x02B4	0x0E00      	MOVLW       0
0x02B6	0x6E00      	MOVWF       R0 
0x02B8	0x5073      	MOVF        IntToStr_i_L0+1, 0 
0x02BA	0x5C00      	SUBWF       R0, 0 
0x02BC	0xE102      	BNZ         L__IntToStr388
0x02BE	0x5072      	MOVF        IntToStr_i_L0, 0 
0x02C0	0x0800      	SUBLW       0
L__IntToStr388:
0x02C2	0xE219      	BC          L_IntToStr39
;__Lib_Conversions.c,211 :: 		
0x02C4	0x5072      	MOVF        IntToStr_i_L0, 0 
0x02C6	0x2470      	ADDWF       FARG_IntToStr_output, 0 
0x02C8	0x6EE1      	MOVWF       FSR1L 
0x02CA	0x5073      	MOVF        IntToStr_i_L0+1, 0 
0x02CC	0x2071      	ADDWFC      FARG_IntToStr_output+1, 0 
0x02CE	0x6EE2      	MOVWF       FSR1L+1 
0x02D0	0x0E01      	MOVLW       1
0x02D2	0x5C72      	SUBWF       IntToStr_i_L0, 0 
0x02D4	0x6E00      	MOVWF       R0 
0x02D6	0x0E00      	MOVLW       0
0x02D8	0x5873      	SUBWFB      IntToStr_i_L0+1, 0 
0x02DA	0x6E01      	MOVWF       R1 
0x02DC	0x5000      	MOVF        R0, 0 
0x02DE	0x2470      	ADDWF       FARG_IntToStr_output, 0 
0x02E0	0x6EE9      	MOVWF       FSR0L 
0x02E2	0x5001      	MOVF        R1, 0 
0x02E4	0x2071      	ADDWFC      FARG_IntToStr_output+1, 0 
0x02E6	0x6EEA      	MOVWF       FSR0L+1 
0x02E8	0xFFE6CFEE  	MOVFF       POSTINC0, POSTINC1
;__Lib_Conversions.c,212 :: 		
0x02EC	0x0E01      	MOVLW       1
0x02EE	0x5E72      	SUBWF       IntToStr_i_L0, 1 
0x02F0	0x0E00      	MOVLW       0
0x02F2	0x5A73      	SUBWFB      IntToStr_i_L0+1, 1 
;__Lib_Conversions.c,213 :: 		
0x02F4	0xD7DF      	BRA         L_IntToStr38
L_IntToStr39:
;__Lib_Conversions.c,214 :: 		
0x02F6	0xFFE1C070  	MOVFF       FARG_IntToStr_output, FSR1L
0x02FA	0xFFE2C071  	MOVFF       FARG_IntToStr_output+1, FSR1H
0x02FE	0x0E20      	MOVLW       32
0x0300	0x6EE6      	MOVWF       POSTINC1 
;__Lib_Conversions.c,215 :: 		
0x0302	0x5074      	MOVF        IntToStr_negative_L0, 0 
0x0304	0x1075      	IORWF       IntToStr_negative_L0+1, 0 
0x0306	0xE01A      	BZ          L_IntToStr40
;__Lib_Conversions.c,216 :: 		
0x0308	0x6A72      	CLRF        IntToStr_i_L0 
0x030A	0x6A73      	CLRF        IntToStr_i_L0+1 
;__Lib_Conversions.c,217 :: 		
L_IntToStr41:
0x030C	0x5072      	MOVF        IntToStr_i_L0, 0 
0x030E	0x2470      	ADDWF       FARG_IntToStr_output, 0 
0x0310	0x6EE9      	MOVWF       FSR0L 
0x0312	0x5073      	MOVF        IntToStr_i_L0+1, 0 
0x0314	0x2071      	ADDWFC      FARG_IntToStr_output+1, 0 
0x0316	0x6EEA      	MOVWF       FSR0L+1 
0x0318	0x50EE      	MOVF        POSTINC0, 0 
0x031A	0x0A20      	XORLW       32
0x031C	0xE103      	BNZ         L_IntToStr42
0x031E	0x4A72      	INFSNZ      IntToStr_i_L0, 1 
0x0320	0x2A73      	INCF        IntToStr_i_L0+1, 1 
0x0322	0xD7F4      	BRA         L_IntToStr41
L_IntToStr42:
;__Lib_Conversions.c,218 :: 		
0x0324	0x0E01      	MOVLW       1
0x0326	0x5E72      	SUBWF       IntToStr_i_L0, 1 
0x0328	0x0E00      	MOVLW       0
0x032A	0x5A73      	SUBWFB      IntToStr_i_L0+1, 1 
;__Lib_Conversions.c,219 :: 		
0x032C	0x5072      	MOVF        IntToStr_i_L0, 0 
0x032E	0x2470      	ADDWF       FARG_IntToStr_output, 0 
0x0330	0x6EE1      	MOVWF       FSR1L 
0x0332	0x5073      	MOVF        IntToStr_i_L0+1, 0 
0x0334	0x2071      	ADDWFC      FARG_IntToStr_output+1, 0 
0x0336	0x6EE2      	MOVWF       FSR1L+1 
0x0338	0x0E2D      	MOVLW       45
0x033A	0x6EE6      	MOVWF       POSTINC1 
L_IntToStr40:
;__Lib_Conversions.c,220 :: 		
L_end_IntToStr:
0x033C	0x0012      	RETURN      0
; end of _IntToStr
_Ltrim:
;__Lib_Conversions.c,421 :: 		
;__Lib_Conversions.c,425 :: 		
0x033E	0x6A70      	CLRF        Ltrim_trimmed_L0 
0x0340	0x6A71      	CLRF        Ltrim_trimmed_L0+1 
;__Lib_Conversions.c,426 :: 		
0x0342	0xF003C06E  	MOVFF       FARG_Ltrim_string, R3
0x0346	0xF004C06F  	MOVFF       FARG_Ltrim_string+1, R4
;__Lib_Conversions.c,427 :: 		
0x034A	0xF005C06E  	MOVFF       FARG_Ltrim_string, R5
0x034E	0xF006C06F  	MOVFF       FARG_Ltrim_string+1, R6
;__Lib_Conversions.c,428 :: 		
L_Ltrim84:
;__Lib_Conversions.c,429 :: 		
0x0352	0xFFE9C003  	MOVFF       R3, FSR0L
0x0356	0xFFEAC004  	MOVFF       R4, FSR0H
0x035A	0x50EE      	MOVF        POSTINC0, 0 
0x035C	0x0A20      	XORLW       32
0x035E	0xE104      	BNZ         L__Ltrim345
0x0360	0x5070      	MOVF        Ltrim_trimmed_L0, 0 
0x0362	0x1071      	IORWF       Ltrim_trimmed_L0+1, 0 
0x0364	0xE101      	BNZ         L__Ltrim345
0x0366	0xD010      	BRA         L_Ltrim89
L__Ltrim345:
;__Lib_Conversions.c,430 :: 		
0x0368	0x0E01      	MOVLW       1
0x036A	0x6E70      	MOVWF       Ltrim_trimmed_L0 
0x036C	0x0E00      	MOVLW       0
0x036E	0x6E71      	MOVWF       Ltrim_trimmed_L0+1 
;__Lib_Conversions.c,431 :: 		
0x0370	0xFFE9C003  	MOVFF       R3, FSR0L
0x0374	0xFFEAC004  	MOVFF       R4, FSR0H
0x0378	0xFFE1C005  	MOVFF       R5, FSR1L
0x037C	0xFFE2C006  	MOVFF       R6, FSR1H
0x0380	0xFFE6CFEE  	MOVFF       POSTINC0, POSTINC1
0x0384	0x4A05      	INFSNZ      R5, 1 
0x0386	0x2A06      	INCF        R6, 1 
;__Lib_Conversions.c,432 :: 		
L_Ltrim89:
;__Lib_Conversions.c,434 :: 		
0x0388	0xF001C003  	MOVFF       R3, R1
0x038C	0xF002C004  	MOVFF       R4, R2
0x0390	0x4A03      	INFSNZ      R3, 1 
0x0392	0x2A04      	INCF        R4, 1 
0x0394	0xFFE9C001  	MOVFF       R1, FSR0L
0x0398	0xFFEAC002  	MOVFF       R2, FSR0H
0x039C	0x50EE      	MOVF        POSTINC0, 0 
0x039E	0x0A00      	XORLW       0
0x03A0	0xE1D8      	BNZ         L_Ltrim84
;__Lib_Conversions.c,435 :: 		
0x03A2	0xF000C06E  	MOVFF       FARG_Ltrim_string, R0
0x03A6	0xF001C06F  	MOVFF       FARG_Ltrim_string+1, R1
;__Lib_Conversions.c,436 :: 		
L_end_Ltrim:
0x03AA	0x0012      	RETURN      0
; end of _Ltrim
_escreveTela:
;ProvaGA.c,114 :: 		void escreveTela(int linha, int coluna, char *txtAux){
;ProvaGA.c,117 :: 		lcd_out(linha,coluna,"");
0x03AC	0xF06EC058  	MOVFF       FARG_escreveTela_linha, FARG_Lcd_Out_row
0x03B0	0xF06FC05A  	MOVFF       FARG_escreveTela_coluna, FARG_Lcd_Out_column
0x03B4	0x0E42      	MOVLW       ?lstr2_ProvaGA
0x03B6	0x6E70      	MOVWF       FARG_Lcd_Out_text 
0x03B8	0x0E00      	MOVLW       hi_addr(?lstr2_ProvaGA)
0x03BA	0x6E71      	MOVWF       FARG_Lcd_Out_text+1 
0x03BC	0xDF02      	RCALL       _Lcd_Out
;ProvaGA.c,118 :: 		lcd_out_cp(ltrim(txtAux));
0x03BE	0xF06EC05C  	MOVFF       FARG_escreveTela_txtAux, FARG_Ltrim_string
0x03C2	0xF06FC05D  	MOVFF       FARG_escreveTela_txtAux+1, FARG_Ltrim_string+1
0x03C6	0xDFBB      	RCALL       _Ltrim
0x03C8	0xF06EC000  	MOVFF       R0, FARG_Lcd_Out_CP_text
0x03CC	0xF06FC001  	MOVFF       R1, FARG_Lcd_Out_CP_text+1
0x03D0	0xDF35      	RCALL       _Lcd_Out_CP
;ProvaGA.c,119 :: 		lcd_out_cp(ltrim(txt));
0x03D2	0x0E46      	MOVLW       _txt
0x03D4	0x6E6E      	MOVWF       FARG_Ltrim_string 
0x03D6	0x0E00      	MOVLW       hi_addr(_txt)
0x03D8	0x6E6F      	MOVWF       FARG_Ltrim_string+1 
0x03DA	0xDFB1      	RCALL       _Ltrim
0x03DC	0xF06EC000  	MOVFF       R0, FARG_Lcd_Out_CP_text
0x03E0	0xF06FC001  	MOVFF       R1, FARG_Lcd_Out_CP_text+1
0x03E4	0xDF2B      	RCALL       _Lcd_Out_CP
;ProvaGA.c,121 :: 		inttostr(CountInt,txtInt);
0x03E6	0xF06EC043  	MOVFF       _CountInt, FARG_IntToStr_input
0x03EA	0xF06FC044  	MOVFF       _CountInt+1, FARG_IntToStr_input+1
0x03EE	0x0E5E      	MOVLW       escreveTela_txtInt_L0
0x03F0	0x6E70      	MOVWF       FARG_IntToStr_output 
0x03F2	0x0E00      	MOVLW       hi_addr(escreveTela_txtInt_L0)
0x03F4	0x6E71      	MOVWF       FARG_IntToStr_output+1 
0x03F6	0xDF37      	RCALL       _IntToStr
;ProvaGA.c,122 :: 		lcd_out(2,15,ltrim(txtInt));
0x03F8	0x0E5E      	MOVLW       escreveTela_txtInt_L0
0x03FA	0x6E6E      	MOVWF       FARG_Ltrim_string 
0x03FC	0x0E00      	MOVLW       hi_addr(escreveTela_txtInt_L0)
0x03FE	0x6E6F      	MOVWF       FARG_Ltrim_string+1 
0x0400	0xDF9E      	RCALL       _Ltrim
0x0402	0xF070C000  	MOVFF       R0, FARG_Lcd_Out_text
0x0406	0xF071C001  	MOVFF       R1, FARG_Lcd_Out_text+1
0x040A	0x0E02      	MOVLW       2
0x040C	0x6E6E      	MOVWF       FARG_Lcd_Out_row 
0x040E	0x0E0F      	MOVLW       15
0x0410	0x6E6F      	MOVWF       FARG_Lcd_Out_column 
0x0412	0xDED7      	RCALL       _Lcd_Out
;ProvaGA.c,123 :: 		}
L_end_escreveTela:
0x0414	0x0012      	RETURN      0
; end of _escreveTela
_Lcd_Init:
;__Lib_Lcd.c,84 :: 		
;__Lib_Lcd.c,86 :: 		
0x0416	0x9096      	BCF         LCD_EN_Direction, BitPos(LCD_EN_Direction+0) 
;__Lib_Lcd.c,87 :: 		
0x0418	0x9296      	BCF         LCD_RS_Direction, BitPos(LCD_RS_Direction+0) 
;__Lib_Lcd.c,88 :: 		
0x041A	0x9893      	BCF         LCD_D4_Direction, BitPos(LCD_D4_Direction+0) 
;__Lib_Lcd.c,89 :: 		
0x041C	0x9A93      	BCF         LCD_D5_Direction, BitPos(LCD_D5_Direction+0) 
;__Lib_Lcd.c,90 :: 		
0x041E	0x9C93      	BCF         LCD_D6_Direction, BitPos(LCD_D6_Direction+0) 
;__Lib_Lcd.c,91 :: 		
0x0420	0x9E93      	BCF         LCD_D7_Direction, BitPos(LCD_D7_Direction+0) 
;__Lib_Lcd.c,93 :: 		
0x0422	0x9084      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,94 :: 		
0x0424	0x9284      	BCF         LCD_RS, BitPos(LCD_RS+0) 
;__Lib_Lcd.c,95 :: 		
0x0426	0x9E81      	BCF         LCD_D7, BitPos(LCD_D7+0) 
;__Lib_Lcd.c,96 :: 		
0x0428	0x9C81      	BCF         LCD_D6, BitPos(LCD_D6+0) 
;__Lib_Lcd.c,97 :: 		
0x042A	0x9A81      	BCF         LCD_D5, BitPos(LCD_D5+0) 
;__Lib_Lcd.c,98 :: 		
0x042C	0x9881      	BCF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,100 :: 		
0x042E	0xDE0C      	RCALL       _Delay_5500us
;__Lib_Lcd.c,101 :: 		
0x0430	0xDE0B      	RCALL       _Delay_5500us
;__Lib_Lcd.c,102 :: 		
0x0432	0xDE0A      	RCALL       _Delay_5500us
;__Lib_Lcd.c,105 :: 		
0x0434	0x8A81      	BSF         LCD_D5, BitPos(LCD_D5+0) 
;__Lib_Lcd.c,106 :: 		
0x0436	0x8881      	BSF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,107 :: 		
0x0438	0x8084      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,108 :: 		
0x043A	0xDE16      	RCALL       _Delay_1us
;__Lib_Lcd.c,109 :: 		
0x043C	0x9084      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,110 :: 		
0x043E	0xDE04      	RCALL       _Delay_5500us
;__Lib_Lcd.c,112 :: 		
0x0440	0x8084      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,113 :: 		
0x0442	0xDE12      	RCALL       _Delay_1us
;__Lib_Lcd.c,114 :: 		
0x0444	0x9084      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,115 :: 		
0x0446	0xDE00      	RCALL       _Delay_5500us
;__Lib_Lcd.c,117 :: 		
0x0448	0x8084      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,118 :: 		
0x044A	0xDE0E      	RCALL       _Delay_1us
;__Lib_Lcd.c,119 :: 		
0x044C	0x9084      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,120 :: 		
0x044E	0xDDFC      	RCALL       _Delay_5500us
;__Lib_Lcd.c,123 :: 		
0x0450	0x9881      	BCF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,124 :: 		
0x0452	0x8084      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,125 :: 		
0x0454	0xDE09      	RCALL       _Delay_1us
;__Lib_Lcd.c,126 :: 		
0x0456	0x9084      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,127 :: 		
0x0458	0xDDF7      	RCALL       _Delay_5500us
;__Lib_Lcd.c,130 :: 		
0x045A	0x8084      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,131 :: 		
0x045C	0xDE05      	RCALL       _Delay_1us
;__Lib_Lcd.c,132 :: 		
0x045E	0x9084      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,134 :: 		
0x0460	0x9A81      	BCF         LCD_D5, BitPos(LCD_D5+0) 
;__Lib_Lcd.c,135 :: 		
0x0462	0x8E81      	BSF         LCD_D7, BitPos(LCD_D7+0) 
;__Lib_Lcd.c,136 :: 		
0x0464	0x8084      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,137 :: 		
0x0466	0xDE00      	RCALL       _Delay_1us
;__Lib_Lcd.c,138 :: 		
0x0468	0x9084      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,139 :: 		
0x046A	0xDDEE      	RCALL       _Delay_5500us
;__Lib_Lcd.c,142 :: 		
0x046C	0x9E81      	BCF         LCD_D7, BitPos(LCD_D7+0) 
;__Lib_Lcd.c,143 :: 		
0x046E	0x8881      	BSF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,144 :: 		
0x0470	0x8084      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,145 :: 		
0x0472	0xDDFA      	RCALL       _Delay_1us
;__Lib_Lcd.c,146 :: 		
0x0474	0x9084      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,148 :: 		
0x0476	0x9881      	BCF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,149 :: 		
0x0478	0x8084      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,150 :: 		
0x047A	0xDDF6      	RCALL       _Delay_1us
;__Lib_Lcd.c,151 :: 		
0x047C	0x9084      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,152 :: 		
0x047E	0xDDE4      	RCALL       _Delay_5500us
;__Lib_Lcd.c,155 :: 		
0x0480	0x8084      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,156 :: 		
0x0482	0xDDF2      	RCALL       _Delay_1us
;__Lib_Lcd.c,157 :: 		
0x0484	0x9084      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,159 :: 		
0x0486	0x8881      	BSF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,160 :: 		
0x0488	0x8084      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,161 :: 		
0x048A	0xDDEE      	RCALL       _Delay_1us
;__Lib_Lcd.c,162 :: 		
0x048C	0x9084      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,163 :: 		
0x048E	0xDDDC      	RCALL       _Delay_5500us
;__Lib_Lcd.c,166 :: 		
0x0490	0x9881      	BCF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,167 :: 		
0x0492	0x8084      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,168 :: 		
0x0494	0xDDE9      	RCALL       _Delay_1us
;__Lib_Lcd.c,169 :: 		
0x0496	0x9084      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,171 :: 		
0x0498	0x8E81      	BSF         LCD_D7, BitPos(LCD_D7+0) 
;__Lib_Lcd.c,172 :: 		
0x049A	0x8C81      	BSF         LCD_D6, BitPos(LCD_D6+0) 
;__Lib_Lcd.c,173 :: 		
0x049C	0x8A81      	BSF         LCD_D5, BitPos(LCD_D5+0) 
;__Lib_Lcd.c,174 :: 		
0x049E	0x8881      	BSF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,175 :: 		
0x04A0	0x8084      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,176 :: 		
0x04A2	0xDDE2      	RCALL       _Delay_1us
;__Lib_Lcd.c,177 :: 		
0x04A4	0x9084      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,179 :: 		
0x04A6	0xDDD0      	RCALL       _Delay_5500us
;__Lib_Lcd.c,181 :: 		
0x04A8	0x8057      	BSF         __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0) 
;__Lib_Lcd.c,182 :: 		
L_end_Lcd_Init:
0x04AA	0x0012      	RETURN      0
; end of _Lcd_Init
_strcpy:
;__Lib_CString.c,126 :: 		
;__Lib_CString.c,129 :: 		
0x04AC	0xF004C058  	MOVFF       FARG_strcpy_to, R4
0x04B0	0xF005C059  	MOVFF       FARG_strcpy_to+1, R5
;__Lib_CString.c,130 :: 		
L_strcpy34:
0x04B4	0xF002C004  	MOVFF       R4, R2
0x04B8	0xF003C005  	MOVFF       R5, R3
0x04BC	0x4A04      	INFSNZ      R4, 1 
0x04BE	0x2A05      	INCF        R5, 1 
0x04C0	0xF000C05A  	MOVFF       FARG_strcpy_from, R0
0x04C4	0xF001C05B  	MOVFF       FARG_strcpy_from+1, R1
0x04C8	0x4A5A      	INFSNZ      FARG_strcpy_from, 1 
0x04CA	0x2A5B      	INCF        FARG_strcpy_from+1, 1 
0x04CC	0xFFE9C000  	MOVFF       R0, FSR0L
0x04D0	0xFFEAC001  	MOVFF       R1, FSR0H
0x04D4	0xFFE1C002  	MOVFF       R2, FSR1L
0x04D8	0xFFE2C003  	MOVFF       R3, FSR1H
0x04DC	0xFFE6CFEE  	MOVFF       POSTINC0, POSTINC1
0x04E0	0xFFE9C002  	MOVFF       R2, FSR0L
0x04E4	0xFFEAC003  	MOVFF       R3, FSR0H
0x04E8	0x52EE      	MOVF        POSTINC0, 1 
0x04EA	0xE001      	BZ          L_strcpy35
;__Lib_CString.c,131 :: 		
0x04EC	0xD7E3      	BRA         L_strcpy34
L_strcpy35:
;__Lib_CString.c,132 :: 		
0x04EE	0xF000C058  	MOVFF       FARG_strcpy_to, R0
0x04F2	0xF001C059  	MOVFF       FARG_strcpy_to+1, R1
;__Lib_CString.c,133 :: 		
L_end_strcpy:
0x04F6	0x0012      	RETURN      0
; end of _strcpy
_funcQuestao3:
;ProvaGA.c,148 :: 		void funcQuestao3(){ // Contador ate RA
;ProvaGA.c,149 :: 		CountRA = 0;
0x04F8	0x6A17      	CLRF        _CountRA 
0x04FA	0x6A18      	CLRF        _CountRA+1 
;ProvaGA.c,150 :: 		lcd_cmd(_Lcd_clear);
0x04FC	0x0E01      	MOVLW       1
0x04FE	0x6E7F      	MOVWF       FARG_Lcd_Cmd_out_char 
0x0500	0xDDB9      	RCALL       _Lcd_Cmd
;ProvaGA.c,152 :: 		while (CountRA <= 23960){
L_funcQuestao333:
0x0502	0x0E80      	MOVLW       128
0x0504	0x0A5D      	XORLW       93
0x0506	0x6E00      	MOVWF       R0 
0x0508	0x0E80      	MOVLW       128
0x050A	0x1818      	XORWF       _CountRA+1, 0 
0x050C	0x5C00      	SUBWF       R0, 0 
0x050E	0xE102      	BNZ         L__funcQuestao347
0x0510	0x5017      	MOVF        _CountRA, 0 
0x0512	0x0898      	SUBLW       152
L__funcQuestao347:
0x0514	0xE319      	BNC         L_funcQuestao334
;ProvaGA.c,153 :: 		inttostr(CountRA,txt);
0x0516	0xF06EC017  	MOVFF       _CountRA, FARG_IntToStr_input
0x051A	0xF06FC018  	MOVFF       _CountRA+1, FARG_IntToStr_input+1
0x051E	0x0E46      	MOVLW       _txt
0x0520	0x6E70      	MOVWF       FARG_IntToStr_output 
0x0522	0x0E00      	MOVLW       hi_addr(_txt)
0x0524	0x6E71      	MOVWF       FARG_IntToStr_output+1 
0x0526	0xDE9F      	RCALL       _IntToStr
;ProvaGA.c,154 :: 		escreveTela(1,1,"RA : ");
0x0528	0x0E01      	MOVLW       1
0x052A	0x6E58      	MOVWF       FARG_escreveTela_linha 
0x052C	0x0E00      	MOVLW       0
0x052E	0x6E59      	MOVWF       FARG_escreveTela_linha+1 
0x0530	0x0E01      	MOVLW       1
0x0532	0x6E5A      	MOVWF       FARG_escreveTela_coluna 
0x0534	0x0E00      	MOVLW       0
0x0536	0x6E5B      	MOVWF       FARG_escreveTela_coluna+1 
0x0538	0x0E19      	MOVLW       ?lstr7_ProvaGA
0x053A	0x6E5C      	MOVWF       FARG_escreveTela_txtAux 
0x053C	0x0E00      	MOVLW       hi_addr(?lstr7_ProvaGA)
0x053E	0x6E5D      	MOVWF       FARG_escreveTela_txtAux+1 
0x0540	0xDF35      	RCALL       _escreveTela
;ProvaGA.c,155 :: 		CountRA++;
0x0542	0x4A17      	INFSNZ      _CountRA, 1 
0x0544	0x2A18      	INCF        _CountRA+1, 1 
;ProvaGA.c,156 :: 		}
0x0546	0xD7DD      	BRA         L_funcQuestao333
L_funcQuestao334:
;ProvaGA.c,157 :: 		}
L_end_funcQuestao3:
0x0548	0x0012      	RETURN      0
; end of _funcQuestao3
_setupInicial:
;ProvaGA.c,84 :: 		void setupInicial(){
;ProvaGA.c,85 :: 		porta = 0;
0x054A	0x6A80      	CLRF        PORTA 
;ProvaGA.c,86 :: 		portb = 0;
0x054C	0x6A81      	CLRF        PORTB 
;ProvaGA.c,87 :: 		portc = 0;
0x054E	0x6A82      	CLRF        PORTC 
;ProvaGA.c,88 :: 		portd = 0;
0x0550	0x6A83      	CLRF        PORTD 
;ProvaGA.c,89 :: 		porte = 0;
0x0552	0x6A84      	CLRF        PORTE 
;ProvaGA.c,91 :: 		trisa = 51; //ra5,ra4,ra1,ra0 s?o entradas
0x0554	0x0E33      	MOVLW       51
0x0556	0x6E92      	MOVWF       TRISA 
;ProvaGA.c,92 :: 		trisb = 15;
0x0558	0x0E0F      	MOVLW       15
0x055A	0x6E93      	MOVWF       TRISB 
;ProvaGA.c,93 :: 		trisc = 0;
0x055C	0x6A94      	CLRF        TRISC 
;ProvaGA.c,94 :: 		trisd = 0;
0x055E	0x6A95      	CLRF        TRISD 
;ProvaGA.c,95 :: 		trise = 0;
0x0560	0x6A96      	CLRF        TRISE 
;ProvaGA.c,97 :: 		ra3_bit = 1; // liga o display
0x0562	0x8680      	BSF         RA3_bit, BitPos(RA3_bit+0) 
;ProvaGA.c,99 :: 		intcon2 = 0; // liga os canais de saida digital
0x0564	0x6AF1      	CLRF        INTCON2 
;ProvaGA.c,100 :: 		adcon1 = 15; // liga resistor pullup
0x0566	0x0E0F      	MOVLW       15
0x0568	0x6EC1      	MOVWF       ADCON1 
;ProvaGA.c,101 :: 		cmcon = 7;   // desliga os comparadores
0x056A	0x0E07      	MOVLW       7
0x056C	0x6EB4      	MOVWF       CMCON 
;ProvaGA.c,103 :: 		lcd_init();
0x056E	0xDF53      	RCALL       _Lcd_Init
;ProvaGA.c,104 :: 		delay_ms(1000); // inicializa o LCD
0x0570	0x0E1A      	MOVLW       26
0x0572	0x6E0B      	MOVWF       R11, 0
0x0574	0x0E5E      	MOVLW       94
0x0576	0x6E0C      	MOVWF       R12, 0
0x0578	0x0E6E      	MOVLW       110
0x057A	0x6E0D      	MOVWF       R13, 0
L_setupInicial26:
0x057C	0x2E0D      	DECFSZ      R13, 1, 0
0x057E	0xD7FE      	BRA         L_setupInicial26
0x0580	0x2E0C      	DECFSZ      R12, 1, 0
0x0582	0xD7FC      	BRA         L_setupInicial26
0x0584	0x2E0B      	DECFSZ      R11, 1, 0
0x0586	0xD7FA      	BRA         L_setupInicial26
0x0588	0x0000      	NOP
;ProvaGA.c,105 :: 		lcd_cmd(_Lcd_cursor_off); // apaga o cursor
0x058A	0x0E0C      	MOVLW       12
0x058C	0x6E7F      	MOVWF       FARG_Lcd_Cmd_out_char 
0x058E	0xDD72      	RCALL       _Lcd_Cmd
;ProvaGA.c,106 :: 		lcd_cmd(_Lcd_clear); // limpa o LCD
0x0590	0x0E01      	MOVLW       1
0x0592	0x6E7F      	MOVWF       FARG_Lcd_Cmd_out_char 
0x0594	0xDD6F      	RCALL       _Lcd_Cmd
;ProvaGA.c,108 :: 		intcon = 0;  // desabilita as interrupcoes
0x0596	0x6AF2      	CLRF        INTCON 
;ProvaGA.c,109 :: 		tmr0ie_bit = 1;  // liga o tmr0
0x0598	0x8AF2      	BSF         TMR0IE_bit, BitPos(TMR0IE_bit+0) 
;ProvaGA.c,110 :: 		t0con = 199; // configura tmr0 | 8 bits, prescaler em 256
0x059A	0x0EC7      	MOVLW       199
0x059C	0x6ED5      	MOVWF       T0CON 
;ProvaGA.c,111 :: 		gie_bit = 1; // liga a chave geral das interrupcoes
0x059E	0x8EF2      	BSF         GIE_bit, BitPos(GIE_bit+0) 
;ProvaGA.c,112 :: 		}
L_end_setupInicial:
0x05A0	0x0012      	RETURN      0
; end of _setupInicial
___CC2DW:
;__Lib_System.c,21 :: 		
;__Lib_System.c,23 :: 		
_CC2DL_Loop1:
;__Lib_System.c,24 :: 		
0x05A2	0x0009      	TBLRD*+
;__Lib_System.c,25 :: 		
0x05A4	0xFFE6CFF5  	MOVFF       TABLAT, POSTINC1
;__Lib_System.c,26 :: 		
0x05A8	0x0600      	DECF        R0, 1, 0
;__Lib_System.c,27 :: 		
0x05AA	0xE1FB      	BNZ         _CC2DL_Loop1
;__Lib_System.c,28 :: 		
0x05AC	0x0601      	DECF        R1, 1, 0
;__Lib_System.c,29 :: 		
0x05AE	0xE1F9      	BNZ         _CC2DL_Loop1
;__Lib_System.c,31 :: 		
L_end___CC2DW:
0x05B0	0x0012      	RETURN      0
; end of ___CC2DW
_funcQuestao1:
;ProvaGA.c,125 :: 		void funcQuestao1(){ // Sequencia
;ProvaGA.c,126 :: 		portc = 0;
0x05B2	0x6A82      	CLRF        PORTC 
;ProvaGA.c,127 :: 		delay_ms(500);
0x05B4	0x0E0D      	MOVLW       13
0x05B6	0x6E0B      	MOVWF       R11, 0
0x05B8	0x0EAF      	MOVLW       175
0x05BA	0x6E0C      	MOVWF       R12, 0
0x05BC	0x0EB6      	MOVLW       182
0x05BE	0x6E0D      	MOVWF       R13, 0
L_funcQuestao127:
0x05C0	0x2E0D      	DECFSZ      R13, 1, 0
0x05C2	0xD7FE      	BRA         L_funcQuestao127
0x05C4	0x2E0C      	DECFSZ      R12, 1, 0
0x05C6	0xD7FC      	BRA         L_funcQuestao127
0x05C8	0x2E0B      	DECFSZ      R11, 1, 0
0x05CA	0xD7FA      	BRA         L_funcQuestao127
0x05CC	0x0000      	NOP
;ProvaGA.c,128 :: 		portc = 8;
0x05CE	0x0E08      	MOVLW       8
0x05D0	0x6E82      	MOVWF       PORTC 
;ProvaGA.c,129 :: 		delay_ms(500);
0x05D2	0x0E0D      	MOVLW       13
0x05D4	0x6E0B      	MOVWF       R11, 0
0x05D6	0x0EAF      	MOVLW       175
0x05D8	0x6E0C      	MOVWF       R12, 0
0x05DA	0x0EB6      	MOVLW       182
0x05DC	0x6E0D      	MOVWF       R13, 0
L_funcQuestao128:
0x05DE	0x2E0D      	DECFSZ      R13, 1, 0
0x05E0	0xD7FE      	BRA         L_funcQuestao128
0x05E2	0x2E0C      	DECFSZ      R12, 1, 0
0x05E4	0xD7FC      	BRA         L_funcQuestao128
0x05E6	0x2E0B      	DECFSZ      R11, 1, 0
0x05E8	0xD7FA      	BRA         L_funcQuestao128
0x05EA	0x0000      	NOP
;ProvaGA.c,130 :: 		portc = 12;
0x05EC	0x0E0C      	MOVLW       12
0x05EE	0x6E82      	MOVWF       PORTC 
;ProvaGA.c,131 :: 		delay_ms(500);
0x05F0	0x0E0D      	MOVLW       13
0x05F2	0x6E0B      	MOVWF       R11, 0
0x05F4	0x0EAF      	MOVLW       175
0x05F6	0x6E0C      	MOVWF       R12, 0
0x05F8	0x0EB6      	MOVLW       182
0x05FA	0x6E0D      	MOVWF       R13, 0
L_funcQuestao129:
0x05FC	0x2E0D      	DECFSZ      R13, 1, 0
0x05FE	0xD7FE      	BRA         L_funcQuestao129
0x0600	0x2E0C      	DECFSZ      R12, 1, 0
0x0602	0xD7FC      	BRA         L_funcQuestao129
0x0604	0x2E0B      	DECFSZ      R11, 1, 0
0x0606	0xD7FA      	BRA         L_funcQuestao129
0x0608	0x0000      	NOP
;ProvaGA.c,132 :: 		portc = 14;
0x060A	0x0E0E      	MOVLW       14
0x060C	0x6E82      	MOVWF       PORTC 
;ProvaGA.c,133 :: 		delay_ms(500);
0x060E	0x0E0D      	MOVLW       13
0x0610	0x6E0B      	MOVWF       R11, 0
0x0612	0x0EAF      	MOVLW       175
0x0614	0x6E0C      	MOVWF       R12, 0
0x0616	0x0EB6      	MOVLW       182
0x0618	0x6E0D      	MOVWF       R13, 0
L_funcQuestao130:
0x061A	0x2E0D      	DECFSZ      R13, 1, 0
0x061C	0xD7FE      	BRA         L_funcQuestao130
0x061E	0x2E0C      	DECFSZ      R12, 1, 0
0x0620	0xD7FC      	BRA         L_funcQuestao130
0x0622	0x2E0B      	DECFSZ      R11, 1, 0
0x0624	0xD7FA      	BRA         L_funcQuestao130
0x0626	0x0000      	NOP
;ProvaGA.c,134 :: 		portc = 15;
0x0628	0x0E0F      	MOVLW       15
0x062A	0x6E82      	MOVWF       PORTC 
;ProvaGA.c,135 :: 		delay_ms(500);
0x062C	0x0E0D      	MOVLW       13
0x062E	0x6E0B      	MOVWF       R11, 0
0x0630	0x0EAF      	MOVLW       175
0x0632	0x6E0C      	MOVWF       R12, 0
0x0634	0x0EB6      	MOVLW       182
0x0636	0x6E0D      	MOVWF       R13, 0
L_funcQuestao131:
0x0638	0x2E0D      	DECFSZ      R13, 1, 0
0x063A	0xD7FE      	BRA         L_funcQuestao131
0x063C	0x2E0C      	DECFSZ      R12, 1, 0
0x063E	0xD7FC      	BRA         L_funcQuestao131
0x0640	0x2E0B      	DECFSZ      R11, 1, 0
0x0642	0xD7FA      	BRA         L_funcQuestao131
0x0644	0x0000      	NOP
;ProvaGA.c,136 :: 		}
L_end_funcQuestao1:
0x0646	0x0012      	RETURN      0
; end of _funcQuestao1
_funcQuestao5:
;ProvaGA.c,166 :: 		void funcQuestao5(){ // Contador ao contrario
;ProvaGA.c,167 :: 		CountRA = 23960;
0x0648	0x0E98      	MOVLW       152
0x064A	0x6E17      	MOVWF       _CountRA 
0x064C	0x0E5D      	MOVLW       93
0x064E	0x6E18      	MOVWF       _CountRA+1 
;ProvaGA.c,168 :: 		lcd_cmd(_Lcd_clear);
0x0650	0x0E01      	MOVLW       1
0x0652	0x6E7F      	MOVWF       FARG_Lcd_Cmd_out_char 
0x0654	0xDD0F      	RCALL       _Lcd_Cmd
;ProvaGA.c,170 :: 		while (CountRA >= 0){
L_funcQuestao535:
0x0656	0x0E80      	MOVLW       128
0x0658	0x1818      	XORWF       _CountRA+1, 0 
0x065A	0x6E00      	MOVWF       R0 
0x065C	0x0E80      	MOVLW       128
0x065E	0x5C00      	SUBWF       R0, 0 
0x0660	0xE102      	BNZ         L__funcQuestao550
0x0662	0x0E00      	MOVLW       0
0x0664	0x5C17      	SUBWF       _CountRA, 0 
L__funcQuestao550:
0x0666	0xE31B      	BNC         L_funcQuestao536
;ProvaGA.c,171 :: 		inttostr(CountRA,txt);
0x0668	0xF06EC017  	MOVFF       _CountRA, FARG_IntToStr_input
0x066C	0xF06FC018  	MOVFF       _CountRA+1, FARG_IntToStr_input+1
0x0670	0x0E46      	MOVLW       _txt
0x0672	0x6E70      	MOVWF       FARG_IntToStr_output 
0x0674	0x0E00      	MOVLW       hi_addr(_txt)
0x0676	0x6E71      	MOVWF       FARG_IntToStr_output+1 
0x0678	0xDDF6      	RCALL       _IntToStr
;ProvaGA.c,172 :: 		escreveTela(1,1,"RA : ");
0x067A	0x0E01      	MOVLW       1
0x067C	0x6E58      	MOVWF       FARG_escreveTela_linha 
0x067E	0x0E00      	MOVLW       0
0x0680	0x6E59      	MOVWF       FARG_escreveTela_linha+1 
0x0682	0x0E01      	MOVLW       1
0x0684	0x6E5A      	MOVWF       FARG_escreveTela_coluna 
0x0686	0x0E00      	MOVLW       0
0x0688	0x6E5B      	MOVWF       FARG_escreveTela_coluna+1 
0x068A	0x0E3C      	MOVLW       ?lstr9_ProvaGA
0x068C	0x6E5C      	MOVWF       FARG_escreveTela_txtAux 
0x068E	0x0E00      	MOVLW       hi_addr(?lstr9_ProvaGA)
0x0690	0x6E5D      	MOVWF       FARG_escreveTela_txtAux+1 
0x0692	0xDE8C      	RCALL       _escreveTela
;ProvaGA.c,173 :: 		CountRA--;
0x0694	0x0E01      	MOVLW       1
0x0696	0x5E17      	SUBWF       _CountRA, 1 
0x0698	0x0E00      	MOVLW       0
0x069A	0x5A18      	SUBWFB      _CountRA+1, 1 
;ProvaGA.c,174 :: 		}
0x069C	0xD7DC      	BRA         L_funcQuestao535
L_funcQuestao536:
;ProvaGA.c,175 :: 		}
L_end_funcQuestao5:
0x069E	0x0012      	RETURN      0
; end of _funcQuestao5
_funcQuestao4:
;ProvaGA.c,159 :: 		void funcQuestao4(){ // Reseta RA
;ProvaGA.c,160 :: 		CountRA = 0;
0x06A0	0x6A17      	CLRF        _CountRA 
0x06A2	0x6A18      	CLRF        _CountRA+1 
;ProvaGA.c,161 :: 		lcd_cmd(_Lcd_clear);
0x06A4	0x0E01      	MOVLW       1
0x06A6	0x6E7F      	MOVWF       FARG_Lcd_Cmd_out_char 
0x06A8	0xDCE5      	RCALL       _Lcd_Cmd
;ProvaGA.c,162 :: 		inttostr(CountRA,txt);
0x06AA	0xF06EC017  	MOVFF       _CountRA, FARG_IntToStr_input
0x06AE	0xF06FC018  	MOVFF       _CountRA+1, FARG_IntToStr_input+1
0x06B2	0x0E46      	MOVLW       _txt
0x06B4	0x6E70      	MOVWF       FARG_IntToStr_output 
0x06B6	0x0E00      	MOVLW       hi_addr(_txt)
0x06B8	0x6E71      	MOVWF       FARG_IntToStr_output+1 
0x06BA	0xDDD5      	RCALL       _IntToStr
;ProvaGA.c,163 :: 		escreveTela(1,1,"RA : ");
0x06BC	0x0E01      	MOVLW       1
0x06BE	0x6E58      	MOVWF       FARG_escreveTela_linha 
0x06C0	0x0E00      	MOVLW       0
0x06C2	0x6E59      	MOVWF       FARG_escreveTela_linha+1 
0x06C4	0x0E01      	MOVLW       1
0x06C6	0x6E5A      	MOVWF       FARG_escreveTela_coluna 
0x06C8	0x0E00      	MOVLW       0
0x06CA	0x6E5B      	MOVWF       FARG_escreveTela_coluna+1 
0x06CC	0x0E34      	MOVLW       ?lstr8_ProvaGA
0x06CE	0x6E5C      	MOVWF       FARG_escreveTela_txtAux 
0x06D0	0x0E00      	MOVLW       hi_addr(?lstr8_ProvaGA)
0x06D2	0x6E5D      	MOVWF       FARG_escreveTela_txtAux+1 
0x06D4	0xDE6B      	RCALL       _escreveTela
;ProvaGA.c,164 :: 		}
L_end_funcQuestao4:
0x06D6	0x0012      	RETURN      0
; end of _funcQuestao4
_funcQuestao2:
;ProvaGA.c,138 :: 		void funcQuestao2(){ // Nome e RA no LCD
;ProvaGA.c,139 :: 		lcd_cmd(_Lcd_clear);
0x06D8	0x0E01      	MOVLW       1
0x06DA	0x6E7F      	MOVWF       FARG_Lcd_Cmd_out_char 
0x06DC	0xDCCB      	RCALL       _Lcd_Cmd
;ProvaGA.c,141 :: 		strcpy(txt, "Elivelton G.");
0x06DE	0x0E46      	MOVLW       _txt
0x06E0	0x6E58      	MOVWF       FARG_strcpy_to 
0x06E2	0x0E00      	MOVLW       hi_addr(_txt)
0x06E4	0x6E59      	MOVWF       FARG_strcpy_to+1 
0x06E6	0x0E26      	MOVLW       ?lstr3_ProvaGA
0x06E8	0x6E5A      	MOVWF       FARG_strcpy_from 
0x06EA	0x0E00      	MOVLW       hi_addr(?lstr3_ProvaGA)
0x06EC	0x6E5B      	MOVWF       FARG_strcpy_from+1 
0x06EE	0xDEDE      	RCALL       _strcpy
;ProvaGA.c,142 :: 		escreveTela(1,1,"");
0x06F0	0x0E01      	MOVLW       1
0x06F2	0x6E58      	MOVWF       FARG_escreveTela_linha 
0x06F4	0x0E00      	MOVLW       0
0x06F6	0x6E59      	MOVWF       FARG_escreveTela_linha+1 
0x06F8	0x0E01      	MOVLW       1
0x06FA	0x6E5A      	MOVWF       FARG_escreveTela_coluna 
0x06FC	0x0E00      	MOVLW       0
0x06FE	0x6E5B      	MOVWF       FARG_escreveTela_coluna+1 
0x0700	0x0E33      	MOVLW       ?lstr4_ProvaGA
0x0702	0x6E5C      	MOVWF       FARG_escreveTela_txtAux 
0x0704	0x0E00      	MOVLW       hi_addr(?lstr4_ProvaGA)
0x0706	0x6E5D      	MOVWF       FARG_escreveTela_txtAux+1 
0x0708	0xDE51      	RCALL       _escreveTela
;ProvaGA.c,143 :: 		delay_ms(1000);
0x070A	0x0E1A      	MOVLW       26
0x070C	0x6E0B      	MOVWF       R11, 0
0x070E	0x0E5E      	MOVLW       94
0x0710	0x6E0C      	MOVWF       R12, 0
0x0712	0x0E6E      	MOVLW       110
0x0714	0x6E0D      	MOVWF       R13, 0
L_funcQuestao232:
0x0716	0x2E0D      	DECFSZ      R13, 1, 0
0x0718	0xD7FE      	BRA         L_funcQuestao232
0x071A	0x2E0C      	DECFSZ      R12, 1, 0
0x071C	0xD7FC      	BRA         L_funcQuestao232
0x071E	0x2E0B      	DECFSZ      R11, 1, 0
0x0720	0xD7FA      	BRA         L_funcQuestao232
0x0722	0x0000      	NOP
;ProvaGA.c,144 :: 		strcpy(txt, "023960");
0x0724	0x0E46      	MOVLW       _txt
0x0726	0x6E58      	MOVWF       FARG_strcpy_to 
0x0728	0x0E00      	MOVLW       hi_addr(_txt)
0x072A	0x6E59      	MOVWF       FARG_strcpy_to+1 
0x072C	0x0E1F      	MOVLW       ?lstr5_ProvaGA
0x072E	0x6E5A      	MOVWF       FARG_strcpy_from 
0x0730	0x0E00      	MOVLW       hi_addr(?lstr5_ProvaGA)
0x0732	0x6E5B      	MOVWF       FARG_strcpy_from+1 
0x0734	0xDEBB      	RCALL       _strcpy
;ProvaGA.c,145 :: 		escreveTela(2,9,"");
0x0736	0x0E02      	MOVLW       2
0x0738	0x6E58      	MOVWF       FARG_escreveTela_linha 
0x073A	0x0E00      	MOVLW       0
0x073C	0x6E59      	MOVWF       FARG_escreveTela_linha+1 
0x073E	0x0E09      	MOVLW       9
0x0740	0x6E5A      	MOVWF       FARG_escreveTela_coluna 
0x0742	0x0E00      	MOVLW       0
0x0744	0x6E5B      	MOVWF       FARG_escreveTela_coluna+1 
0x0746	0x0E16      	MOVLW       ?lstr6_ProvaGA
0x0748	0x6E5C      	MOVWF       FARG_escreveTela_txtAux 
0x074A	0x0E00      	MOVLW       hi_addr(?lstr6_ProvaGA)
0x074C	0x6E5D      	MOVWF       FARG_escreveTela_txtAux+1 
0x074E	0xDE2E      	RCALL       _escreveTela
;ProvaGA.c,146 :: 		}
L_end_funcQuestao2:
0x0750	0x0012      	RETURN      0
; end of _funcQuestao2
_main:
0x0752	0xF004EC33  	CALL        2150, 0
;ProvaGA.c,35 :: 		void main() {
;ProvaGA.c,37 :: 		setupInicial();
0x0756	0xDEF9      	RCALL       _setupInicial
;ProvaGA.c,39 :: 		while(1){
L_main0:
;ProvaGA.c,40 :: 		escreveTela(0,0,"");
0x0758	0x6A58      	CLRF        FARG_escreveTela_linha 
0x075A	0x6A59      	CLRF        FARG_escreveTela_linha+1 
0x075C	0x6A5A      	CLRF        FARG_escreveTela_coluna 
0x075E	0x6A5B      	CLRF        FARG_escreveTela_coluna+1 
0x0760	0x0E45      	MOVLW       ?lstr1_ProvaGA
0x0762	0x6E5C      	MOVWF       FARG_escreveTela_txtAux 
0x0764	0x0E00      	MOVLW       hi_addr(?lstr1_ProvaGA)
0x0766	0x6E5D      	MOVWF       FARG_escreveTela_txtAux+1 
0x0768	0xDE21      	RCALL       _escreveTela
;ProvaGA.c,42 :: 		if(RB0_bit == 0){ // Sequencia
0x076A	0xB081      	BTFSC       RB0_bit, BitPos(RB0_bit+0) 
0x076C	0xD012      	BRA         L_main2
;ProvaGA.c,43 :: 		while(RB0_bit == 0) delay_ms(100);
L_main3:
0x076E	0xB081      	BTFSC       RB0_bit, BitPos(RB0_bit+0) 
0x0770	0xD00F      	BRA         L_main4
0x0772	0x0E03      	MOVLW       3
0x0774	0x6E0B      	MOVWF       R11, 0
0x0776	0x0E8A      	MOVLW       138
0x0778	0x6E0C      	MOVWF       R12, 0
0x077A	0x0E55      	MOVLW       85
0x077C	0x6E0D      	MOVWF       R13, 0
L_main5:
0x077E	0x2E0D      	DECFSZ      R13, 1, 0
0x0780	0xD7FE      	BRA         L_main5
0x0782	0x2E0C      	DECFSZ      R12, 1, 0
0x0784	0xD7FC      	BRA         L_main5
0x0786	0x2E0B      	DECFSZ      R11, 1, 0
0x0788	0xD7FA      	BRA         L_main5
0x078A	0x0000      	NOP
0x078C	0x0000      	NOP
0x078E	0xD7EF      	BRA         L_main3
L_main4:
;ProvaGA.c,44 :: 		funcQuestao1();
0x0790	0xDF10      	RCALL       _funcQuestao1
;ProvaGA.c,45 :: 		}
L_main2:
;ProvaGA.c,47 :: 		if(RB1_bit == 0){ // Nome e RA no LCD
0x0792	0xB281      	BTFSC       RB1_bit, BitPos(RB1_bit+0) 
0x0794	0xD012      	BRA         L_main6
;ProvaGA.c,48 :: 		while(RB1_bit == 0) delay_ms(100);
L_main7:
0x0796	0xB281      	BTFSC       RB1_bit, BitPos(RB1_bit+0) 
0x0798	0xD00F      	BRA         L_main8
0x079A	0x0E03      	MOVLW       3
0x079C	0x6E0B      	MOVWF       R11, 0
0x079E	0x0E8A      	MOVLW       138
0x07A0	0x6E0C      	MOVWF       R12, 0
0x07A2	0x0E55      	MOVLW       85
0x07A4	0x6E0D      	MOVWF       R13, 0
L_main9:
0x07A6	0x2E0D      	DECFSZ      R13, 1, 0
0x07A8	0xD7FE      	BRA         L_main9
0x07AA	0x2E0C      	DECFSZ      R12, 1, 0
0x07AC	0xD7FC      	BRA         L_main9
0x07AE	0x2E0B      	DECFSZ      R11, 1, 0
0x07B0	0xD7FA      	BRA         L_main9
0x07B2	0x0000      	NOP
0x07B4	0x0000      	NOP
0x07B6	0xD7EF      	BRA         L_main7
L_main8:
;ProvaGA.c,49 :: 		funcQuestao2();
0x07B8	0xDF8F      	RCALL       _funcQuestao2
;ProvaGA.c,50 :: 		}
L_main6:
;ProvaGA.c,52 :: 		if(RB2_bit == 0){ // Contador ate RA
0x07BA	0xB481      	BTFSC       RB2_bit, BitPos(RB2_bit+0) 
0x07BC	0xD012      	BRA         L_main10
;ProvaGA.c,53 :: 		while(RB2_bit == 0) delay_ms(100);
L_main11:
0x07BE	0xB481      	BTFSC       RB2_bit, BitPos(RB2_bit+0) 
0x07C0	0xD00F      	BRA         L_main12
0x07C2	0x0E03      	MOVLW       3
0x07C4	0x6E0B      	MOVWF       R11, 0
0x07C6	0x0E8A      	MOVLW       138
0x07C8	0x6E0C      	MOVWF       R12, 0
0x07CA	0x0E55      	MOVLW       85
0x07CC	0x6E0D      	MOVWF       R13, 0
L_main13:
0x07CE	0x2E0D      	DECFSZ      R13, 1, 0
0x07D0	0xD7FE      	BRA         L_main13
0x07D2	0x2E0C      	DECFSZ      R12, 1, 0
0x07D4	0xD7FC      	BRA         L_main13
0x07D6	0x2E0B      	DECFSZ      R11, 1, 0
0x07D8	0xD7FA      	BRA         L_main13
0x07DA	0x0000      	NOP
0x07DC	0x0000      	NOP
0x07DE	0xD7EF      	BRA         L_main11
L_main12:
;ProvaGA.c,54 :: 		funcQuestao3();
0x07E0	0xDE8B      	RCALL       _funcQuestao3
;ProvaGA.c,55 :: 		}
L_main10:
;ProvaGA.c,57 :: 		if(RB3_bit == 0){ // Reseta RA
0x07E2	0xB681      	BTFSC       RB3_bit, BitPos(RB3_bit+0) 
0x07E4	0xD012      	BRA         L_main14
;ProvaGA.c,58 :: 		while(RB3_bit == 0) delay_ms(100);
L_main15:
0x07E6	0xB681      	BTFSC       RB3_bit, BitPos(RB3_bit+0) 
0x07E8	0xD00F      	BRA         L_main16
0x07EA	0x0E03      	MOVLW       3
0x07EC	0x6E0B      	MOVWF       R11, 0
0x07EE	0x0E8A      	MOVLW       138
0x07F0	0x6E0C      	MOVWF       R12, 0
0x07F2	0x0E55      	MOVLW       85
0x07F4	0x6E0D      	MOVWF       R13, 0
L_main17:
0x07F6	0x2E0D      	DECFSZ      R13, 1, 0
0x07F8	0xD7FE      	BRA         L_main17
0x07FA	0x2E0C      	DECFSZ      R12, 1, 0
0x07FC	0xD7FC      	BRA         L_main17
0x07FE	0x2E0B      	DECFSZ      R11, 1, 0
0x0800	0xD7FA      	BRA         L_main17
0x0802	0x0000      	NOP
0x0804	0x0000      	NOP
0x0806	0xD7EF      	BRA         L_main15
L_main16:
;ProvaGA.c,59 :: 		funcQuestao4();
0x0808	0xDF4B      	RCALL       _funcQuestao4
;ProvaGA.c,60 :: 		}
L_main14:
;ProvaGA.c,62 :: 		if(RA4_bit == 1){ // Contador ao contrario
0x080A	0xA880      	BTFSS       RA4_bit, BitPos(RA4_bit+0) 
0x080C	0xD012      	BRA         L_main18
;ProvaGA.c,63 :: 		while(RA4_bit == 1) delay_ms(100);
L_main19:
0x080E	0xA880      	BTFSS       RA4_bit, BitPos(RA4_bit+0) 
0x0810	0xD00F      	BRA         L_main20
0x0812	0x0E03      	MOVLW       3
0x0814	0x6E0B      	MOVWF       R11, 0
0x0816	0x0E8A      	MOVLW       138
0x0818	0x6E0C      	MOVWF       R12, 0
0x081A	0x0E55      	MOVLW       85
0x081C	0x6E0D      	MOVWF       R13, 0
L_main21:
0x081E	0x2E0D      	DECFSZ      R13, 1, 0
0x0820	0xD7FE      	BRA         L_main21
0x0822	0x2E0C      	DECFSZ      R12, 1, 0
0x0824	0xD7FC      	BRA         L_main21
0x0826	0x2E0B      	DECFSZ      R11, 1, 0
0x0828	0xD7FA      	BRA         L_main21
0x082A	0x0000      	NOP
0x082C	0x0000      	NOP
0x082E	0xD7EF      	BRA         L_main19
L_main20:
;ProvaGA.c,64 :: 		funcQuestao5();
0x0830	0xDF0B      	RCALL       _funcQuestao5
;ProvaGA.c,65 :: 		}
L_main18:
;ProvaGA.c,66 :: 		}
0x0832	0xD792      	BRA         L_main0
;ProvaGA.c,67 :: 		}
L_end_main:
0x0834	0xD7FF      	BRA         $+0
; end of _main
0x0866	0xF016EE10  	LFSR        1, 22
0x086A	0x0E30      	MOVLW       48
0x086C	0x6E00      	MOVWF       R0 
0x086E	0x0E01      	MOVLW       1
0x0870	0x6E01      	MOVWF       R1 
0x0872	0x0E36      	MOVLW       54
0x0874	0x6EF6      	MOVWF       TBLPTR 
0x0876	0x0E08      	MOVLW       8
0x0878	0x6EF7      	MOVWF       TBLPTRH 
0x087A	0x0E00      	MOVLW       0
0x087C	0x6EF8      	MOVWF       TBLPTRU 
0x087E	0xF002ECD1  	CALL        1442, 0
0x0882	0x0012      	RETURN      0
;ProvaGA.c,0 :: ?ICS?lstr6_ProvaGA
0x0836	0x00 ;?ICS?lstr6_ProvaGA+0
; end of ?ICS?lstr6_ProvaGA
;ProvaGA.c,0 :: ?ICS_CountRA
0x0837	0x0000 ;?ICS_CountRA+0
; end of ?ICS_CountRA
;ProvaGA.c,0 :: ?ICS?lstr7_ProvaGA
0x0839	0x4152 ;?ICS?lstr7_ProvaGA+0
0x083B	0x3A20 ;?ICS?lstr7_ProvaGA+2
0x083D	0x0020 ;?ICS?lstr7_ProvaGA+4
; end of ?ICS?lstr7_ProvaGA
;ProvaGA.c,0 :: ?ICS?lstr5_ProvaGA
0x083F	0x3230 ;?ICS?lstr5_ProvaGA+0
0x0841	0x3933 ;?ICS?lstr5_ProvaGA+2
0x0843	0x3036 ;?ICS?lstr5_ProvaGA+4
0x0845	0x00 ;?ICS?lstr5_ProvaGA+6
; end of ?ICS?lstr5_ProvaGA
;ProvaGA.c,0 :: ?ICS?lstr3_ProvaGA
0x0846	0x6C45 ;?ICS?lstr3_ProvaGA+0
0x0848	0x7669 ;?ICS?lstr3_ProvaGA+2
0x084A	0x6C65 ;?ICS?lstr3_ProvaGA+4
0x084C	0x6F74 ;?ICS?lstr3_ProvaGA+6
0x084E	0x206E ;?ICS?lstr3_ProvaGA+8
0x0850	0x2E47 ;?ICS?lstr3_ProvaGA+10
0x0852	0x00 ;?ICS?lstr3_ProvaGA+12
; end of ?ICS?lstr3_ProvaGA
;ProvaGA.c,0 :: ?ICS?lstr4_ProvaGA
0x0853	0x00 ;?ICS?lstr4_ProvaGA+0
; end of ?ICS?lstr4_ProvaGA
;ProvaGA.c,0 :: ?ICS?lstr8_ProvaGA
0x0854	0x4152 ;?ICS?lstr8_ProvaGA+0
0x0856	0x3A20 ;?ICS?lstr8_ProvaGA+2
0x0858	0x0020 ;?ICS?lstr8_ProvaGA+4
; end of ?ICS?lstr8_ProvaGA
;ProvaGA.c,0 :: ?ICS_count_interrupt
0x085A	0x0000 ;?ICS_count_interrupt+0
; end of ?ICS_count_interrupt
;ProvaGA.c,0 :: ?ICS?lstr9_ProvaGA
0x085C	0x4152 ;?ICS?lstr9_ProvaGA+0
0x085E	0x3A20 ;?ICS?lstr9_ProvaGA+2
0x0860	0x0020 ;?ICS?lstr9_ProvaGA+4
; end of ?ICS?lstr9_ProvaGA
;ProvaGA.c,0 :: ?ICS?lstr2_ProvaGA
0x0862	0x00 ;?ICS?lstr2_ProvaGA+0
; end of ?ICS?lstr2_ProvaGA
;ProvaGA.c,0 :: ?ICS_CountInt
0x0863	0x0000 ;?ICS_CountInt+0
; end of ?ICS_CountInt
;ProvaGA.c,0 :: ?ICS?lstr1_ProvaGA
0x0865	0x00 ;?ICS?lstr1_ProvaGA+0
; end of ?ICS?lstr1_ProvaGA
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0008      [64]    _interrupt
0x0048      [22]    _Delay_5500us
0x005E      [10]    _Delay_50us
0x0068      [12]    _Delay_1us
0x0074     [124]    _Lcd_Cmd
0x00F0      [54]    _Div_16X16_U
0x0126      [12]    _Lcd_Chr_CP
0x0132     [144]    _WordToStr
0x01C2     [122]    _Lcd_Out
0x023C      [42]    _Lcd_Out_CP
0x0266     [216]    _IntToStr
0x033E     [110]    _Ltrim
0x03AC     [106]    _escreveTela
0x0416     [150]    _Lcd_Init
0x04AC      [76]    _strcpy
0x04F8      [82]    _funcQuestao3
0x054A      [88]    _setupInicial
0x05A2      [16]    ___CC2DW
0x05B2     [150]    _funcQuestao1
0x0648      [88]    _funcQuestao5
0x06A0      [56]    _funcQuestao4
0x06D8     [122]    _funcQuestao2
0x0752     [228]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    R0
0x0001       [1]    __Lib_Conversions_Adjust_Hex_tmp_L0
0x0001       [1]    R1
0x0002       [2]    memchr_s_L0
0x0002       [2]    memcpy_dd_L0
0x0002       [2]    strlen_cp_L0
0x0002       [2]    memset_pp_L0
0x0002       [1]    R2
0x0003       [2]    memmove_tt_L0
0x0003       [1]    R3
0x0003       [2]    Ltrim_original_L0
0x0004       [1]    R4
0x0004       [2]    strcpy_cp_L0
0x0004       [2]    strcat_cp_L0
0x0004       [2]    strncat_cp_L0
0x0004       [2]    strncpy_cp_L0
0x0004       [2]    memcpy_ss_L0
0x0005       [2]    LongWordToHex_input_half_L0
0x0005       [2]    Ltrim_p_L0
0x0005       [1]    R5
0x0005       [2]    LongIntToHex_input_half_L0
0x0005       [2]    memmove_ff_L0
0x0006       [1]    R6
0x0007       [1]    R7
0x0008       [1]    R8
0x0009       [1]    R9
0x000A       [1]    R10
0x000B       [1]    R11
0x000C       [1]    R12
0x000D       [1]    R13
0x000E       [1]    R14
0x000F       [1]    R15
0x0010       [1]    R16
0x0011       [1]    R17
0x0012       [1]    R18
0x0013       [1]    R19
0x0014       [1]    R20
0x0016       [1]    ?lstr6_ProvaGA
0x0017       [2]    _CountRA
0x0019       [6]    ?lstr7_ProvaGA
0x001F       [7]    ?lstr5_ProvaGA
0x0026      [13]    ?lstr3_ProvaGA
0x0033       [1]    ?lstr4_ProvaGA
0x0034       [6]    ?lstr8_ProvaGA
0x003A       [2]    _count_interrupt
0x003C       [6]    ?lstr9_ProvaGA
0x0042       [1]    ?lstr2_ProvaGA
0x0043       [2]    _CountInt
0x0045       [1]    ?lstr1_ProvaGA
0x0046      [17]    _txt
0x0057       [0]    __Lib_Lcd_cmd_status
0x0058       [2]    FARG_strcpy_to
0x0058       [2]    FARG_escreveTela_linha
0x005A       [2]    FARG_strcpy_from
0x005A       [2]    FARG_escreveTela_coluna
0x005C       [2]    FARG_escreveTela_txtAux
0x005E      [16]    escreveTela_txtInt_L0
0x006E       [2]    FARG_Lcd_Out_CP_text
0x006E       [1]    FARG_Lcd_Out_row
0x006E       [2]    FARG_IntToStr_input
0x006E       [2]    FARG_Ltrim_string
0x006F       [1]    FARG_Lcd_Out_column
0x0070       [1]    Lcd_Out_CP_i_L0
0x0070       [2]    FARG_Lcd_Out_text
0x0070       [2]    FARG_IntToStr_output
0x0070       [2]    Ltrim_trimmed_L0
0x0072       [1]    Lcd_Out_i_L0
0x0072       [2]    IntToStr_i_L0
0x0074       [2]    IntToStr_negative_L0
0x0076       [2]    IntToStr_inword_L0
0x0078       [2]    FARG_WordToStr_input
0x0078       [1]    FARG_Lcd_Chr_CP_out_char
0x007A       [2]    FARG_WordToStr_output
0x007C       [1]    WordToStr_len_L0
0x007D       [2]    FLOC__WordToStr
0x007F       [1]    FARG_Lcd_Cmd_out_char
0x0F80       [1]    PORTA
0x0F80       [0]    RA3_bit
0x0F80       [0]    RA4_bit
0x0F81       [0]    LCD_D4
0x0F81       [0]    LCD_D7
0x0F81       [0]    LCD_D6
0x0F81       [0]    LCD_D5
0x0F81       [0]    RB3_bit
0x0F81       [0]    RB4_bit
0x0F81       [0]    RB5_bit
0x0F81       [1]    PORTB
0x0F81       [0]    RB1_bit
0x0F81       [0]    RB2_bit
0x0F81       [0]    RB0_bit
0x0F81       [0]    RB6_bit
0x0F81       [0]    RB7_bit
0x0F82       [1]    PORTC
0x0F83       [1]    PORTD
0x0F84       [0]    RE0_bit
0x0F84       [0]    RE1_bit
0x0F84       [1]    PORTE
0x0F84       [0]    LCD_EN
0x0F84       [0]    LCD_RS
0x0F92       [1]    TRISA
0x0F93       [0]    LCD_D4_Direction
0x0F93       [0]    LCD_D5_Direction
0x0F93       [0]    LCD_D6_Direction
0x0F93       [1]    TRISB
0x0F93       [0]    LCD_D7_Direction
0x0F93       [0]    TRISB6_bit
0x0F93       [0]    TRISB7_bit
0x0F93       [0]    TRISB5_bit
0x0F93       [0]    TRISB4_bit
0x0F94       [1]    TRISC
0x0F95       [1]    TRISD
0x0F96       [1]    TRISE
0x0F96       [0]    LCD_RS_Direction
0x0F96       [0]    LCD_EN_Direction
0x0F96       [0]    TRISE1_bit
0x0F96       [0]    TRISE0_bit
0x0FB4       [1]    CMCON
0x0FC1       [1]    ADCON1
0x0FD5       [1]    T0CON
0x0FD8       [1]    STATUS
0x0FD9       [1]    FSR2L
0x0FDA       [1]    FSR2H
0x0FDE       [1]    POSTINC2
0x0FE0       [1]    BSR
0x0FE1       [1]    FSR1L
0x0FE2       [1]    FSR1H
0x0FE4       [1]    PREINC1
0x0FE6       [1]    POSTINC1
0x0FE7       [1]    INDF1
0x0FE8       [1]    WREG
0x0FE9       [1]    FSR0L
0x0FEA       [1]    FSR0H
0x0FEE       [1]    POSTINC0
0x0FF1       [1]    INTCON2
0x0FF2       [0]    TMR0IF_bit
0x0FF2       [0]    GIE_bit
0x0FF2       [0]    TMR0IE_bit
0x0FF2       [1]    INTCON
0x0FF3       [1]    PRODL
0x0FF4       [1]    PRODH
0x0FF5       [1]    TABLAT
0x0FF6       [1]    TBLPTRL
0x0FF6       [3]    TBLPTR
0x0FF7       [1]    TBLPTRH
0x0FF8       [1]    TBLPTRU
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x0836       [1]    ?ICS?lstr6_ProvaGA
0x0837       [2]    ?ICS_CountRA
0x0839       [6]    ?ICS?lstr7_ProvaGA
0x083F       [7]    ?ICS?lstr5_ProvaGA
0x0846      [13]    ?ICS?lstr3_ProvaGA
0x0853       [1]    ?ICS?lstr4_ProvaGA
0x0854       [6]    ?ICS?lstr8_ProvaGA
0x085A       [2]    ?ICS_count_interrupt
0x085C       [6]    ?ICS?lstr9_ProvaGA
0x0862       [1]    ?ICS?lstr2_ProvaGA
0x0863       [2]    ?ICS_CountInt
0x0865       [1]    ?ICS?lstr1_ProvaGA
